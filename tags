BB_ACK	md.h	/^#define BB_ACK(x)	(!!((x) & BB_ACK_MASK))$/
BB_LEN	md.h	/^#define BB_LEN(x)	(((x) & BB_LEN_MASK) + 1)$/
BB_MAKE	md.h	/^#define BB_MAKE(a, l, ack) (((a)<<9) | ((l)-1) | (/
BB_OFFSET	md.h	/^#define BB_OFFSET(x)	(((x) & BB_OFFSET_MASK) >> 9)/
BIO_SPECIAL	raid1.c	/^#define BIO_SPECIAL(bio) ((unsigned long)bio <= 2)/
COUNTER	bitmap.h	/^#define COUNTER(x) (((bitmap_counter_t) x) & COUNT/
DM_ATTR_RO	dm-sysfs.c	/^#define DM_ATTR_RO(_name) \\$/
DM_BUFIO_CACHE	dm-bufio.c	/^#define DM_BUFIO_CACHE(c)	(dm_bufio_caches[dm_bufi/
DM_BUFIO_CACHE_NAME	dm-bufio.c	/^#define DM_BUFIO_CACHE_NAME(c)	(dm_bufio_cache_nam/
DM_BUFIO_HASH	dm-bufio.c	/^#define DM_BUFIO_HASH(block) \\$/
DM_TRACKED_CHUNK_HASH	dm-snap.c	/^#define DM_TRACKED_CHUNK_HASH(x)	((unsigned long)(/
MD_BUG	md.c	/^#define MD_BUG(x...) { printk("md: bug in file %s,/
NEEDED	bitmap.h	/^#define NEEDED(x) (((bitmap_counter_t) x) & NEEDED/
RESYNC	bitmap.h	/^#define RESYNC(x) (((bitmap_counter_t) x) & RESYNC/
__alloc_buffer_wait	dm-bufio.c	/^static struct dm_buffer *__alloc_buffer_wait(struc/
__alloc_buffer_wait_no_callback	dm-bufio.c	/^static struct dm_buffer *__alloc_buffer_wait_no_ca/
__begin_transaction	dm-cache-metadata.c	/^static int __begin_transaction(struct dm_cache_met/
__begin_transaction_flags	dm-cache-metadata.c	/^static int __begin_transaction_flags(struct dm_cac/
__bind	dm.c	/^static struct dm_table *__bind(struct mapped_devic/
__bind_mempools	dm.c	/^static void __bind_mempools(struct mapped_device */
__bio_detain	dm-bio-prison.c	/^static int __bio_detain(struct bucket *b,$/
__bitmap_start_sync	bitmap.c	/^static int __bitmap_start_sync(struct bitmap *bitm/
__bufio_new	dm-bufio.c	/^static struct dm_buffer *__bufio_new(struct dm_buf/
__cache_map	dm-cache-target.c	/^static int __cache_map(struct cache *cache, struct/
__cache_size_refresh	dm-bufio.c	/^static void __cache_size_refresh(void)$/
__cell_defer	dm-cache-target.c	/^static void __cell_defer(struct cache *cache, stru/
__cell_release	dm-bio-prison.c	/^static void __cell_release(struct dm_bio_prison_ce/
__cell_release_no_holder	dm-bio-prison.c	/^static void __cell_release_no_holder(struct dm_bio/
__change_cell_name	dm-ioctl.c	/^static char *__change_cell_name(struct hash_cell */
__check_for_conflicting_io	dm-snap.c	/^static void __check_for_conflicting_io(struct dm_s/
__check_incompat_features	dm-cache-metadata.c	/^static int __check_incompat_features(struct cache_/
__check_shared_memory	dm-stats.c	/^static bool __check_shared_memory(size_t alloc_siz/
__check_watermark	dm-bufio.c	/^static void __check_watermark(struct dm_bufio_clie/
__choose_path_in_pg	dm-mpath.c	/^static int __choose_path_in_pg(struct multipath *m/
__choose_pgpath	dm-mpath.c	/^static void __choose_pgpath(struct multipath *m, s/
__chunk_is_tracked	dm-snap.c	/^static int __chunk_is_tracked(struct dm_snapshot */
__cleanup_old_buffer	dm-bufio.c	/^static int __cleanup_old_buffer(struct dm_buffer */
__clear_discard	dm-cache-metadata.c	/^static int __clear_discard(struct dm_cache_metadat/
__clear_page_buffers	bitmap.c	/^__clear_page_buffers(struct page *page)$/
__clone_and_map_data_bio	dm.c	/^static void __clone_and_map_data_bio(struct clone_/
__clone_and_map_simple_bio	dm.c	/^static void __clone_and_map_simple_bio(struct clon/
__close_device	dm-thin-metadata.c	/^static void __close_device(struct dm_thin_device */
__commit_transaction	dm-cache-metadata.c	/^static int __commit_transaction(struct dm_cache_me/
__complete_mapping_preparation	dm-thin.c	/^static void __complete_mapping_preparation(struct /
__copy_sm_root	dm-cache-metadata.c	/^static void __copy_sm_root(struct dm_cache_metadat/
__create_persistent_data_objects	dm-cache-metadata.c	/^static int __create_persistent_data_objects(struct/
__create_snap	dm-thin-metadata.c	/^static int __create_snap(struct dm_pool_metadata */
__create_thin	dm-thin-metadata.c	/^static int __create_thin(struct dm_pool_metadata */
__delete_device	dm-thin-metadata.c	/^static int __delete_device(struct dm_pool_metadata/
__destroy_persistent_data_objects	dm-cache-metadata.c	/^static void __destroy_persistent_data_objects(stru/
__dev_status	dm-ioctl.c	/^static void __dev_status(struct mapped_device *md,/
__dirty	dm-cache-metadata.c	/^static int __dirty(struct dm_cache_metadata *cmd, /
__discard	dm-cache-metadata.c	/^static int __discard(struct dm_cache_metadata *cmd/
__dm_destroy	dm.c	/^static void __dm_destroy(struct mapped_device *md,/
__dm_get_reserved_ios	dm.c	/^static unsigned __dm_get_reserved_ios(unsigned *re/
__dm_stat_bio	dm-stats.c	/^static void __dm_stat_bio(struct dm_stat *s, unsig/
__dm_stat_clear	dm-stats.c	/^static void __dm_stat_clear(struct dm_stat *s, siz/
__dm_stat_init_temporary_percpu_totals	dm-stats.c	/^static void __dm_stat_init_temporary_percpu_totals/
__dm_stats_find	dm-stats.c	/^static struct dm_stat *__dm_stats_find(struct dm_s/
__dump_mapping	dm-cache-metadata.c	/^static int __dump_mapping(void *context, uint64_t /
__dump_mappings	dm-cache-metadata.c	/^static int __dump_mappings(struct dm_cache_metadat/
__extract_sorted_bios	dm-thin.c	/^static void __extract_sorted_bios(struct thin_c *t/
__find	dm-bufio.c	/^static struct dm_buffer *__find(struct dm_bufio_cl/
__find_device_hash_cell	dm-ioctl.c	/^static struct hash_cell *__find_device_hash_cell(s/
__find_dirty_log_type	dm-log.c	/^static struct dm_dirty_log_type *__find_dirty_log_/
__find_exception_store_type	dm-exception-store.c	/^static struct dm_exception_store_type *__find_exce/
__find_path_selector_type	dm-path-selector.c	/^static struct ps_internal *__find_path_selector_ty/
__find_pending_exception	dm-snap.c	/^__find_pending_exception(struct dm_snapshot *s,$/
__find_policy	dm-cache-policy.c	/^static struct dm_cache_policy_type *__find_policy(/
__find_snapshots_sharing_cow	dm-snap.c	/^static int __find_snapshots_sharing_cow(struct dm_/
__find_stripe	raid5.c	/^static struct stripe_head *__find_stripe(struct r5/
__find_target_type	dm-target.c	/^static inline struct target_type *__find_target_ty/
__flush_write_list	dm-bufio.c	/^static void __flush_write_list(struct list_head *w/
__force_mapping	dm-cache-policy-mq.c	/^static void __force_mapping(struct mq_policy *mq,$/
__format_metadata	dm-cache-metadata.c	/^static int __format_metadata(struct dm_cache_metad/
__free_buffer_wake	dm-bufio.c	/^static void __free_buffer_wake(struct dm_buffer *b/
__free_exceptions	dm-snap.c	/^static void __free_exceptions(struct dm_snapshot */
__get_dev_cell	dm-ioctl.c	/^static struct hash_cell *__get_dev_cell(uint64_t d/
__get_memory_limit	dm-bufio.c	/^static void __get_memory_limit(struct dm_bufio_cli/
__get_metadata_snap	dm-thin-metadata.c	/^static int __get_metadata_snap(struct dm_pool_meta/
__get_name_cell	dm-ioctl.c	/^static struct hash_cell *__get_name_cell(const cha/
__get_policy_once	dm-cache-policy.c	/^static struct dm_cache_policy_type *__get_policy_o/
__get_priority_stripe	raid5.c	/^static struct stripe_head *__get_priority_stripe(s/
__get_unclaimed_buffer	dm-bufio.c	/^static struct dm_buffer *__get_unclaimed_buffer(st/
__get_uuid_cell	dm-ioctl.c	/^static struct hash_cell *__get_uuid_cell(const cha/
__handover_exceptions	dm-snap.c	/^static void __handover_exceptions(struct dm_snapsh/
__hash_remove	dm-ioctl.c	/^static struct dm_table *__hash_remove(struct hash_/
__highest_block	dm-thin-metadata.c	/^static int __highest_block(struct dm_thin_device */
__insert	dm-cache-metadata.c	/^static int __insert(struct dm_cache_metadata *cmd,/
__insert_origin	dm-snap.c	/^static void __insert_origin(struct origin *o)$/
__insert_snapshot	dm-snap.c	/^static void __insert_snapshot(struct origin *o, st/
__invalidate_snapshot	dm-snap.c	/^static void __invalidate_snapshot(struct dm_snapsh/
__is_discarded	dm-cache-metadata.c	/^static int __is_discarded(struct dm_cache_metadata/
__link_buffer	dm-bufio.c	/^static void __link_buffer(struct dm_buffer *b, sec/
__load_discards	dm-cache-metadata.c	/^static int __load_discards(struct dm_cache_metadat/
__load_mapping	dm-cache-metadata.c	/^static int __load_mapping(void *context, uint64_t /
__load_mappings	dm-cache-metadata.c	/^static int __load_mappings(struct dm_cache_metadat/
__lookup_origin	dm-snap.c	/^static struct origin *__lookup_origin(struct block/
__lookup_pending_exception	dm-snap.c	/^__lookup_pending_exception(struct dm_snapshot *s, /
__make_buffer_clean	dm-bufio.c	/^static void __make_buffer_clean(struct dm_buffer */
__make_request	raid10.c	/^static void __make_request(struct mddev *mddev, st/
__map_bio	dm.c	/^static void __map_bio(struct dm_target_io *tio)$/
__md_stop	md.c	/^static void __md_stop(struct mddev *mddev)$/
__md_stop_writes	md.c	/^static void __md_stop_writes(struct mddev *mddev)$/
__minimum_chunk_size	dm-snap.c	/^static uint32_t __minimum_chunk_size(struct origin/
__mq_set_clear_dirty	dm-cache-policy-mq.c	/^static void __mq_set_clear_dirty(struct mq_policy /
__mq_writeback_work	dm-cache-policy-mq.c	/^static int __mq_writeback_work(struct mq_policy *m/
__must_push_back	dm-mpath.c	/^static int __must_push_back(struct multipath *m)$/
__noflush_suspending	dm.c	/^static int __noflush_suspending(struct mapped_devi/
__open_device	dm-thin-metadata.c	/^static int __open_device(struct dm_pool_metadata */
__open_metadata	dm-cache-metadata.c	/^static int __open_metadata(struct dm_cache_metadat/
__open_or_format_metadata	dm-cache-metadata.c	/^static int __open_or_format_metadata(struct dm_cac/
__origin_write	dm-snap.c	/^static int __origin_write(struct list_head *snapsh/
__pg_init_all_paths	dm-mpath.c	/^static int __pg_init_all_paths(struct multipath *m/
__pgpath_busy	dm-mpath.c	/^static int __pgpath_busy(struct pgpath *pgpath)$/
__pool_dec	dm-thin.c	/^static void __pool_dec(struct pool *pool)$/
__pool_destroy	dm-thin.c	/^static void __pool_destroy(struct pool *pool)$/
__pool_find	dm-thin.c	/^static struct pool *__pool_find(struct mapped_devi/
__pool_inc	dm-thin.c	/^static void __pool_inc(struct pool *pool)$/
__pool_table_insert	dm-thin.c	/^static void __pool_table_insert(struct pool *pool)/
__pool_table_lookup	dm-thin.c	/^static struct pool *__pool_table_lookup(struct map/
__pool_table_lookup_metadata_dev	dm-thin.c	/^static struct pool *__pool_table_lookup_metadata_d/
__pool_table_remove	dm-thin.c	/^static void __pool_table_remove(struct pool *pool)/
__queue_quiesced_migration	dm-cache-target.c	/^static void __queue_quiesced_migration(struct dm_c/
__raid10_find_phys	raid10.c	/^static void __raid10_find_phys(struct geom *geo, s/
__release_metadata_snap	dm-thin-metadata.c	/^static int __release_metadata_snap(struct dm_pool_/
__release_queued_bios_after_merge	dm-snap.c	/^static struct bio *__release_queued_bios_after_mer/
__release_stripe	raid5.c	/^static void __release_stripe(struct r5conf *conf, /
__relink_lru	dm-bufio.c	/^static void __relink_lru(struct dm_buffer *b, int /
__remove	dm-cache-metadata.c	/^static int __remove(struct dm_cache_metadata *cmd,/
__remove_cblock	dm-cache-policy-mq.c	/^static int __remove_cblock(struct mq_policy *mq, d/
__remove_mapping	dm-cache-policy-mq.c	/^static void __remove_mapping(struct mq_policy *mq,/
__remove_single_exception_chunk	dm-snap.c	/^static int __remove_single_exception_chunk(struct /
__reserve_metadata_snap	dm-thin-metadata.c	/^static int __reserve_metadata_snap(struct dm_pool_/
__resize_space_map	dm-thin-metadata.c	/^static int __resize_space_map(struct dm_space_map /
__rh_alloc	dm-region-hash.c	/^static struct dm_region *__rh_alloc(struct dm_regi/
__rh_find	dm-region-hash.c	/^static struct dm_region *__rh_find(struct dm_regio/
__rh_insert	dm-region-hash.c	/^static void __rh_insert(struct dm_region_hash *rh,/
__rh_lookup	dm-region-hash.c	/^static struct dm_region *__rh_lookup(struct dm_reg/
__rh_recovery_prepare	dm-region-hash.c	/^static int __rh_recovery_prepare(struct dm_region_/
__save_sm_root	dm-cache-metadata.c	/^static int __save_sm_root(struct dm_cache_metadata/
__scan	dm-bufio.c	/^static long __scan(struct dm_bufio_client *c, unsi/
__search_bucket	dm-bio-prison.c	/^static struct dm_bio_prison_cell *__search_bucket(/
__send_changing_extent_only	dm.c	/^static int __send_changing_extent_only(struct clon/
__send_discard	dm.c	/^static int __send_discard(struct clone_info *ci)$/
__send_duplicate_bios	dm.c	/^static void __send_duplicate_bios(struct clone_inf/
__send_empty_flush	dm.c	/^static int __send_empty_flush(struct clone_info *c/
__send_write_same	dm.c	/^static int __send_write_same(struct clone_info *ci/
__set_abort_with_changes_flags	dm-thin-metadata.c	/^static void __set_abort_with_changes_flags(struct /
__set_cell_uuid	dm-ioctl.c	/^static void __set_cell_uuid(struct hash_cell *hc, /
__set_clear_dirty	dm-cache-policy-cleaner.c	/^static void __set_clear_dirty(struct dm_cache_poli/
__set_discard	dm-cache-metadata.c	/^static int __set_discard(struct dm_cache_metadata /
__set_size	dm.c	/^static void __set_size(struct mapped_device *md, s/
__set_snapshot_details	dm-thin-metadata.c	/^static int __set_snapshot_details(struct dm_pool_m/
__setup_btree_details	dm-thin-metadata.c	/^static void __setup_btree_details(struct dm_pool_m/
__setup_mapping_info	dm-cache-metadata.c	/^static void __setup_mapping_info(struct dm_cache_m/
__setup_new_cell	dm-bio-prison.c	/^static void __setup_new_cell(struct bucket *b,$/
__snapshotted_since	dm-thin-metadata.c	/^static bool __snapshotted_since(struct dm_thin_dev/
__sort_thin_deferred_bios	dm-thin.c	/^static void __sort_thin_deferred_bios(struct thin_/
__split_and_process_bio	dm.c	/^static void __split_and_process_bio(struct mapped_/
__split_and_process_non_flush	dm.c	/^static int __split_and_process_non_flush(struct cl/
__start_queue	dm.c	/^static void __start_queue(struct request_queue *q)/
__stop_queue	dm.c	/^static void __stop_queue(struct request_queue *q)$/
__superblock_all_zeroes	dm-cache-metadata.c	/^static int __superblock_all_zeroes(struct dm_block/
__sweep	dm-bio-prison.c	/^static void __sweep(struct dm_deferred_set *ds, st/
__switch_pg	dm-mpath.c	/^static void __switch_pg(struct multipath *m, struc/
__thin_bio_rb_add	dm-thin.c	/^static void __thin_bio_rb_add(struct thin_c *tc, s/
__unbind	dm.c	/^static struct dm_table *__unbind(struct mapped_dev/
__unlink_buffer	dm-bufio.c	/^static void __unlink_buffer(struct dm_buffer *b)$/
__validate_exception_handover	dm-snap.c	/^static int __validate_exception_handover(struct dm/
__wait_for_free_buffer	dm-bufio.c	/^static void __wait_for_free_buffer(struct dm_bufio/
__wb_force_remove_mapping	dm-cache-policy-cleaner.c	/^static struct wb_cache_entry *__wb_force_remove_ma/
__write_changed_details	dm-thin-metadata.c	/^static int __write_changed_details(struct dm_pool_/
__write_dirty_buffer	dm-bufio.c	/^static void __write_dirty_buffer(struct dm_buffer /
__write_dirty_buffers_async	dm-bufio.c	/^static void __write_dirty_buffers_async(struct dm_/
__write_initial_superblock	dm-cache-metadata.c	/^static int __write_initial_superblock(struct dm_ca/
_alloc_path_selector	dm-path-selector.c	/^static struct ps_internal *_alloc_path_selector(st/
_check_region_size	dm-log.c	/^static int _check_region_size(struct dm_target *ti/
_dm_request	dm.c	/^static void _dm_request(struct request_queue *q, s/
_enough	raid10.c	/^static int _enough(struct r10conf *conf, int previ/
_get_dirty_log_type	dm-log.c	/^static struct dm_dirty_log_type *_get_dirty_log_ty/
_get_exception_store_type	dm-exception-store.c	/^static struct dm_exception_store_type *_get_except/
abort_transaction	dm-thin.c	/^static void abort_transaction(struct pool *pool)$/
ack_quiescing	dm-cache-target.c	/^static void ack_quiescing(struct cache *cache)$/
action_dev	dm-mpath.c	/^static int action_dev(struct multipath *m, struct /
action_show	md.c	/^action_show(struct mddev *mddev, char *page)$/
action_store	md.c	/^action_store(struct mddev *mddev, const char *page/
activate_bit_delay	raid5.c	/^static void activate_bit_delay(struct r5conf *conf/
activate_path	dm-mpath.c	/^static void activate_path(struct work_struct *work/
add_bio_to_retry	raid5.c	/^static void add_bio_to_retry(struct bio *bi,struct/
add_cache_entry	dm-cache-policy-cleaner.c	/^static void add_cache_entry(struct policy *p, stru/
add_named_array	md.c	/^static int add_named_array(const char *val, struct/
add_new_disk	md.c	/^static int add_new_disk(struct mddev * mddev, mdu_/
add_sector	faulty.c	/^static void add_sector(struct faulty_conf *conf, s/
add_stripe_bio	raid5.c	/^static int add_stripe_bio(struct stripe_head *sh, /
adjoin	dm-table.c	/^static int adjoin(struct dm_table *table, struct d/
adjust_total_allocated	dm-bufio.c	/^static void adjust_total_allocated(enum data_mode /
adjusted_promote_threshold	dm-cache-policy-mq.c	/^static unsigned adjusted_promote_threshold(struct /
algorithm_is_DDF	raid5.h	/^static inline int algorithm_is_DDF(int layout)$/
algorithm_valid_raid5	raid5.h	/^static inline int algorithm_valid_raid5(int layout/
algorithm_valid_raid6	raid5.h	/^static inline int algorithm_valid_raid6(int layout/
align_ptr	dm-ioctl.c	/^static inline void *align_ptr(void *ptr)$/
all_corrupt_bio_flags_match	dm-flakey.c	/^#define all_corrupt_bio_flags_match(bio, fc)	\\$/
alloc_area	dm-snap-persistent.c	/^static int alloc_area(struct pstore *ps)$/
alloc_behind_pages	raid1.c	/^static void alloc_behind_pages(struct bio *bio, st/
alloc_bitset	dm-cache-target.c	/^static unsigned long *alloc_bitset(unsigned nr_ent/
alloc_buffer	dm-bufio.c	/^static struct dm_buffer *alloc_buffer(struct dm_bu/
alloc_buffer_data	dm-bufio.c	/^static void *alloc_buffer_data(struct dm_bufio_cli/
alloc_cache_blocks_with_hash	dm-cache-policy-cleaner.c	/^static int alloc_cache_blocks_with_hash(struct pol/
alloc_cache_entry	dm-cache-policy-cleaner.c	/^static struct wb_cache_entry *alloc_cache_entry(st/
alloc_cell	dm-ioctl.c	/^static struct hash_cell *alloc_cell(const char *na/
alloc_completed_exception	dm-snap.c	/^static struct dm_exception *alloc_completed_except/
alloc_context	dm-raid1.c	/^static struct mirror_set *alloc_context(unsigned i/
alloc_data_block	dm-thin.c	/^static int alloc_data_block(struct thin_c *tc, dm_/
alloc_data_block_cowbtree	dm-dedup-cbt.c	/^static int alloc_data_block_cowbtree(struct metada/
alloc_data_block_inram	dm-dedup-ram.c	/^static int alloc_data_block_inram(struct metadata /
alloc_dev	dm.c	/^static struct mapped_device *alloc_dev(int minor)$/
alloc_disk_sb	md.c	/^static int alloc_disk_sb(struct md_rdev * rdev)$/
alloc_entry	dm-cache-policy-mq.c	/^static struct entry *alloc_entry(struct entry_pool/
alloc_hash	dm-cache-policy-cleaner.c	/^static int alloc_hash(struct hash *hash, unsigned /
alloc_io	dm.c	/^static struct dm_io *alloc_io(struct mapped_device/
alloc_multipath	dm-mpath.c	/^static struct multipath *alloc_multipath(struct dm/
alloc_particular_entry	dm-cache-policy-mq.c	/^static struct entry *alloc_particular_entry(struct/
alloc_pending_exception	dm-snap.c	/^static struct dm_snap_pending_exception *alloc_pen/
alloc_pgpath	dm-mpath.c	/^static struct pgpath *alloc_pgpath(void)$/
alloc_pl	dm-kcopyd.c	/^static struct page_list *alloc_pl(gfp_t gfp)$/
alloc_priority_group	dm-mpath.c	/^static struct priority_group *alloc_priority_group/
alloc_prison_cell	dm-cache-target.c	/^static struct dm_bio_prison_cell *alloc_prison_cel/
alloc_region_table	dm-switch.c	/^static int alloc_region_table(struct dm_target *ti/
alloc_rq_tio	dm.c	/^static struct dm_rq_target_io *alloc_rq_tio(struct/
alloc_scratch_buffer	raid5.c	/^static int alloc_scratch_buffer(struct r5conf *con/
alloc_selector	dm-queue-length.c	/^static struct selector *alloc_selector(void)$/
alloc_switch_ctx	dm-switch.c	/^static struct switch_ctx *alloc_switch_ctx(struct /
alloc_targets	dm-table.c	/^static int alloc_targets(struct dm_table *t, unsig/
alloc_thread_groups	raid5.c	/^static int alloc_thread_groups(struct r5conf *conf/
alloc_tio	dm.c	/^static struct dm_target_io *alloc_tio(struct clone/
allow_barrier	raid1.c	/^static void allow_barrier(struct r1conf *conf, sec/
analyse_stripe	raid5.c	/^static void analyse_stripe(struct stripe_head *sh,/
analyse_superblocks	dm-raid.c	/^static int analyse_superblocks(struct dm_target *t/
analyze_sbs	md.c	/^static void analyze_sbs(struct mddev * mddev)$/
any_clean_cblocks	dm-cache-policy-mq.c	/^static bool any_clean_cblocks(struct mq_policy *mq/
any_free_cblocks	dm-cache-policy-mq.c	/^static bool any_free_cblocks(struct mq_policy *mq)/
any_tfm	dm-crypt.c	/^static struct crypto_ablkcipher *any_tfm(struct cr/
area_io	dm-snap-persistent.c	/^static int area_io(struct pstore *ps, int rw)$/
area_location	dm-snap-persistent.c	/^static chunk_t area_location(struct pstore *ps, ch/
array_size_show	md.c	/^array_size_show(struct mddev *mddev, char *page)$/
array_size_store	md.c	/^array_size_store(struct mddev *mddev, const char */
array_state	md.c	/^enum array_state { clear, inactive, suspended, rea/
array_state_show	md.c	/^array_state_show(struct mddev *mddev, char *page)$/
array_state_store	md.c	/^array_state_store(struct mddev *mddev, const char /
async_copy_data	raid5.c	/^async_copy_data(int frombio, struct bio *bio, stru/
async_io	dm-io.c	/^static int async_io(struct dm_io_client *client, u/
at_least_one_arg	dm-cache-target.c	/^static bool at_least_one_arg(struct dm_arg_set *as/
attempt_restore_of_faulty_devices	dm-raid.c	/^static void attempt_restore_of_faulty_devices(stru/
autorun_array	md.c	/^static void autorun_array(struct mddev *mddev)$/
autorun_devices	md.c	/^static void autorun_devices(int part)$/
autostart_arrays	md.c	/^static void autostart_arrays(int part)$/
avoid_copy	dm-cache-target.c	/^static void avoid_copy(struct dm_cache_migration */
backend	dm-dedup-target.c	/^enum backend {$/
backlog_show	bitmap.c	/^backlog_show(struct mddev *mddev, char *page)$/
backlog_store	bitmap.c	/^backlog_store(struct mddev *mddev, const char *buf/
badblocks	md.h	/^	struct badblocks {$/
badblocks_show	md.c	/^badblocks_show(struct badblocks *bb, char *page, i/
badblocks_store	md.c	/^badblocks_store(struct badblocks *bb, const char */
bb_show	md.c	/^static ssize_t bb_show(struct md_rdev *rdev, char /
bb_store	md.c	/^static ssize_t bb_store(struct md_rdev *rdev, cons/
bdev_equal	dm-snap.c	/^static int bdev_equal(struct block_device *lhs, st/
begin_hints	dm-cache-metadata.c	/^static int begin_hints(struct dm_cache_metadata *c/
behind_writes_used_reset	bitmap.c	/^behind_writes_used_reset(struct mddev *mddev, cons/
behind_writes_used_show	bitmap.c	/^behind_writes_used_show(struct mddev *mddev, char /
bind_control_target	dm-thin.c	/^static int bind_control_target(struct pool *pool, /
bind_rdev_to_array	md.c	/^static int bind_rdev_to_array(struct md_rdev * rde/
bio	dm-thin.c	/^struct thin_c;$/
bio_alloc_mddev	md.c	/^struct bio *bio_alloc_mddev(gfp_t gfp_mask, int nr/
bio_clone_mddev	md.c	/^struct bio *bio_clone_mddev(struct bio *bio, gfp_t/
bio_detain	dm-bio-prison.c	/^static int bio_detain(struct dm_bio_prison *prison/
bio_dp_init	dm-io.c	/^static void bio_dp_init(struct dpages *dp, struct /
bio_fits_rdev	raid5.c	/^static int bio_fits_rdev(struct bio *bi)$/
bio_get_m	dm-raid1.c	/^static struct mirror *bio_get_m(struct bio *bio)$/
bio_get_page	dm-io.c	/^static void bio_get_page(struct dpages *dp, struct/
bio_next_page	dm-io.c	/^static void bio_next_page(struct dpages *dp)$/
bio_set_m	dm-raid1.c	/^static void bio_set_m(struct bio *bio, struct mirr/
bio_setup_sector	dm.c	/^static void bio_setup_sector(struct bio *bio, sect/
bio_triggers_commit	dm-cache-target.c	/^static int bio_triggers_commit(struct cache *cache/
bio_writes_complete_block	dm-cache-target.c	/^static bool bio_writes_complete_block(struct cache/
bitmap	bitmap.h	/^struct bitmap {$/
bitmap_checkfree	bitmap.c	/^static void bitmap_checkfree(struct bitmap_counts /
bitmap_checkpage	bitmap.c	/^static int bitmap_checkpage(struct bitmap_counts */
bitmap_close_sync	bitmap.c	/^void bitmap_close_sync(struct bitmap *bitmap)$/
bitmap_cond_end_sync	bitmap.c	/^void bitmap_cond_end_sync(struct bitmap *bitmap, s/
bitmap_count_page	bitmap.c	/^static void bitmap_count_page(struct bitmap_counts/
bitmap_counter_t	bitmap.h	/^typedef __u16 bitmap_counter_t;$/
bitmap_counts	bitmap.h	/^	struct bitmap_counts {$/
bitmap_create	bitmap.c	/^int bitmap_create(struct mddev *mddev)$/
bitmap_daemon_work	bitmap.c	/^void bitmap_daemon_work(struct mddev *mddev)$/
bitmap_destroy	bitmap.c	/^void bitmap_destroy(struct mddev *mddev)$/
bitmap_dirty_bits	bitmap.c	/^void bitmap_dirty_bits(struct bitmap *bitmap, unsi/
bitmap_end_sync	bitmap.c	/^void bitmap_end_sync(struct bitmap *bitmap, sector/
bitmap_endwrite	bitmap.c	/^void bitmap_endwrite(struct bitmap *bitmap, sector/
bitmap_file_clear_bit	bitmap.c	/^static void bitmap_file_clear_bit(struct bitmap *b/
bitmap_file_kick	bitmap.c	/^static void bitmap_file_kick(struct bitmap *bitmap/
bitmap_file_set_bit	bitmap.c	/^static void bitmap_file_set_bit(struct bitmap *bit/
bitmap_file_unmap	bitmap.c	/^static void bitmap_file_unmap(struct bitmap_storag/
bitmap_flush	bitmap.c	/^void bitmap_flush(struct mddev *mddev)$/
bitmap_free	bitmap.c	/^static void bitmap_free(struct bitmap *bitmap)$/
bitmap_get_counter	bitmap.c	/^static bitmap_counter_t *bitmap_get_counter(struct/
bitmap_init_from_disk	bitmap.c	/^static int bitmap_init_from_disk(struct bitmap *bi/
bitmap_load	bitmap.c	/^int bitmap_load(struct mddev *mddev)$/
bitmap_new_disk_sb	bitmap.c	/^static int bitmap_new_disk_sb(struct bitmap *bitma/
bitmap_page	bitmap.h	/^struct bitmap_page {$/
bitmap_page_attr	bitmap.c	/^enum bitmap_page_attr {$/
bitmap_print_sb	bitmap.c	/^void bitmap_print_sb(struct bitmap *bitmap)$/
bitmap_read_sb	bitmap.c	/^static int bitmap_read_sb(struct bitmap *bitmap)$/
bitmap_resize	bitmap.c	/^int bitmap_resize(struct bitmap *bitmap, sector_t /
bitmap_set_memory_bits	bitmap.c	/^static void bitmap_set_memory_bits(struct bitmap */
bitmap_set_pending	bitmap.c	/^static void bitmap_set_pending(struct bitmap_count/
bitmap_start_sync	bitmap.c	/^int bitmap_start_sync(struct bitmap *bitmap, secto/
bitmap_startwrite	bitmap.c	/^int bitmap_startwrite(struct bitmap *bitmap, secto/
bitmap_state	bitmap.h	/^enum bitmap_state {$/
bitmap_status	bitmap.c	/^void bitmap_status(struct seq_file *seq, struct bi/
bitmap_storage	bitmap.h	/^	struct bitmap_storage {$/
bitmap_storage_alloc	bitmap.c	/^static int bitmap_storage_alloc(struct bitmap_stor/
bitmap_store	md.c	/^bitmap_store(struct mddev *mddev, const char *buf,/
bitmap_super_t	bitmap.h	/^} bitmap_super_t;$/
bitmap_unplug	bitmap.c	/^void bitmap_unplug(struct bitmap *bitmap)$/
bitmap_update_sb	bitmap.c	/^void bitmap_update_sb(struct bitmap *bitmap)$/
bitmap_write_all	bitmap.c	/^void bitmap_write_all(struct bitmap *bitmap)$/
bitset_size	dm-era-target.c	/^static size_t bitset_size(unsigned nr_bits)$/
bitset_size_in_bytes	dm-cache-target.c	/^static size_t bitset_size_in_bytes(unsigned nr_ent/
block_div	dm-cache-target.c	/^static dm_block_t block_div(dm_block_t b, uint32_t/
block_size_is_power_of_two	dm-cache-target.c	/^static bool block_size_is_power_of_two(struct cach/
block_unmapped_or_clean	dm-cache-metadata.c	/^static int block_unmapped_or_clean(struct dm_cache/
blocks_are_unmapped_or_clean	dm-cache-metadata.c	/^static int blocks_are_unmapped_or_clean(struct dm_/
bmname	bitmap.c	/^static inline char *bmname(struct bitmap *bitmap)$/
break_sharing	dm-thin.c	/^static void break_sharing(struct thin_c *tc, struc/
bucket	dm-bio-prison.c	/^struct bucket {$/
buffer_aux	dm-verity.c	/^struct buffer_aux {$/
build_constructor_string	dm-log-userspace-base.c	/^static int build_constructor_string(struct dm_targ/
build_data_key	dm-thin.c	/^static void build_data_key(struct dm_thin_device */
build_key	dm-cache-target.c	/^static void build_key(dm_oblock_t oblock, struct d/
build_virtual_key	dm-thin.c	/^static void build_virtual_key(struct dm_thin_devic/
bypass_pg	dm-mpath.c	/^static void bypass_pg(struct multipath *m, struct /
bypass_pg_num	dm-mpath.c	/^static int bypass_pg_num(struct multipath *m, cons/
cache	dm-cache-target.c	/^struct cache {$/
cache_args	dm-cache-target.c	/^struct cache_args {$/
cache_bvec_merge	dm-cache-target.c	/^static int cache_bvec_merge(struct dm_target *ti,$/
cache_create	dm-cache-target.c	/^static int cache_create(struct cache_args *ca, str/
cache_ctr	dm-cache-target.c	/^static int cache_ctr(struct dm_target *ti, unsigne/
cache_disk_superblock	dm-cache-metadata.c	/^struct cache_disk_superblock {$/
cache_dtr	dm-cache-target.c	/^static void cache_dtr(struct dm_target *ti)$/
cache_end_io	dm-cache-target.c	/^static int cache_end_io(struct dm_target *ti, stru/
cache_entry_found	dm-cache-policy-mq.c	/^static int cache_entry_found(struct mq_policy *mq,/
cache_features	dm-cache-target.c	/^struct cache_features {$/
cache_io_hints	dm-cache-target.c	/^static void cache_io_hints(struct dm_target *ti, s/
cache_io_mode	dm-cache-target.c	/^enum cache_io_mode {$/
cache_is_congested	dm-cache-target.c	/^static int cache_is_congested(struct dm_target_cal/
cache_iterate_devices	dm-cache-target.c	/^static int cache_iterate_devices(struct dm_target /
cache_map	dm-cache-target.c	/^static int cache_map(struct dm_target *ti, struct /
cache_message	dm-cache-target.c	/^static int cache_message(struct dm_target *ti, uns/
cache_metadata_mode	dm-cache-target.c	/^enum cache_metadata_mode {$/
cache_postsuspend	dm-cache-target.c	/^static void cache_postsuspend(struct dm_target *ti/
cache_preresume	dm-cache-target.c	/^static int cache_preresume(struct dm_target *ti)$/
cache_resume	dm-cache-target.c	/^static void cache_resume(struct dm_target *ti)$/
cache_stats	dm-cache-target.c	/^struct cache_stats {$/
cache_status	dm-cache-target.c	/^static void cache_status(struct dm_target *ti, sta/
calc_degraded	raid10.c	/^static int calc_degraded(struct r10conf *conf)$/
calc_dev_sboffset	md.c	/^static inline sector_t calc_dev_sboffset(struct md/
calc_max_buckets	dm-snap.c	/^static int calc_max_buckets(void)$/
calc_metadata_threshold	dm-thin.c	/^static dm_block_t calc_metadata_threshold(struct p/
calc_nr_blocks	dm-era-target.c	/^static dm_block_t calc_nr_blocks(struct era *era)$/
calc_nr_buckets	dm-bio-prison.c	/^static uint32_t calc_nr_buckets(unsigned nr_cells)/
calc_sb_1_csum	md.c	/^static __le32 calc_sb_1_csum(struct mdp_superblock/
calc_sb_csum	md.c	/^static unsigned int calc_sb_csum(mdp_super_t * sb)/
calc_sectors	raid10.c	/^static void calc_sectors(struct r10conf *conf, sec/
call_bio_endio	raid1.c	/^static void call_bio_endio(struct r1bio *r1_bio)$/
can_clear_show	bitmap.c	/^static ssize_t can_clear_show(struct mddev *mddev,/
can_clear_store	bitmap.c	/^static ssize_t can_clear_store(struct mddev *mddev/
can_resize	dm-cache-target.c	/^static bool can_resize(struct cache *cache, dm_cbl/
cblock_range	dm-cache-target.c	/^struct cblock_range {$/
cell	dm-cache-target.c	/^typedef void (*cell_free_fn)(void *context, struct/
cell_defer	dm-cache-target.c	/^static void cell_defer(struct cache *cache, struct/
cell_defer_no_holder	dm-thin.c	/^static void cell_defer_no_holder(struct thin_c *tc/
cell_defer_no_holder_no_free	dm-thin.c	/^static void cell_defer_no_holder_no_free(struct th/
cell_error	dm-thin.c	/^static void cell_error(struct pool *pool, struct d/
cell_error_with_code	dm-thin.c	/^static void cell_error_with_code(struct pool *pool/
cell_release	dm-thin.c	/^static void cell_release(struct pool *pool,$/
cell_release_no_holder	dm-thin.c	/^static void cell_release_no_holder(struct pool *po/
check_arg_count	dm-thin.c	/^static int check_arg_count(unsigned argc, unsigned/
check_decay_read_errors	raid10.c	/^static void check_decay_read_errors(struct mddev */
check_for_quiesced_migrations	dm-cache-target.c	/^static void check_for_quiesced_migrations(struct c/
check_generation	dm-cache-policy-mq.c	/^static void check_generation(struct mq_policy *mq)/
check_if_tick_bio_needed	dm-cache-target.c	/^static void check_if_tick_bio_needed(struct cache /
check_low_water_mark	dm-thin.c	/^static void check_low_water_mark(struct pool *pool/
check_metadata_version	dm-cache-metadata.c	/^static int check_metadata_version(struct cache_dis/
check_mode	faulty.c	/^static int check_mode(struct faulty_conf *conf, in/
check_name	dm-ioctl.c	/^static int check_name(const char *name)$/
check_reshape	raid5.c	/^static int check_reshape(struct mddev *mddev)$/
check_sector	faulty.c	/^static int check_sector(struct faulty_conf *conf, /
check_shared_memory	dm-stats.c	/^static bool check_shared_memory(size_t alloc_size)/
check_states	raid5.h	/^enum check_states {$/
check_stripe_cache	raid5.c	/^static int check_stripe_cache(struct mddev *mddev)/
check_version	dm-ioctl.c	/^static int check_version(unsigned int cmd, struct /
choose_data_offset	raid10.c	/^static sector_t choose_data_offset(struct r10bio */
choose_mirror	dm-raid1.c	/^static struct mirror *choose_mirror(struct mirror_/
chunk_aligned_read	raid5.c	/^static int chunk_aligned_read(struct mddev *mddev,/
chunk_io	dm-snap-persistent.c	/^static int chunk_io(struct pstore *ps, void *area,/
chunk_size_show	md.c	/^chunk_size_show(struct mddev *mddev, char *page)$/
chunk_size_store	md.c	/^chunk_size_store(struct mddev *mddev, const char */
chunk_t	dm-exception-store.h	/^typedef sector_t chunk_t;$/
chunk_to_sector	dm-snap.c	/^static sector_t chunk_to_sector(struct dm_exceptio/
chunksize_show	bitmap.c	/^chunksize_show(struct mddev *mddev, char *page)$/
chunksize_store	bitmap.c	/^chunksize_store(struct mddev *mddev, const char *b/
claim_shared_memory	dm-stats.c	/^static bool claim_shared_memory(size_t alloc_size)/
cleanup_migration	dm-cache-target.c	/^static void cleanup_migration(struct dm_cache_migr/
cleanup_old_buffers	dm-bufio.c	/^static void cleanup_old_buffers(void)$/
clear_bitset	dm-cache-target.c	/^static void clear_bitset(void *bitset, unsigned nr/
clear_clean_shutdown	dm-cache-metadata.c	/^static unsigned long clear_clean_shutdown(unsigned/
clear_dirty	dm-cache-target.c	/^static void clear_dirty(struct cache *cache, dm_ob/
clear_discard	dm-cache-target.c	/^static void clear_discard(struct cache *cache, dm_/
clear_exception	dm-snap-persistent.c	/^static void clear_exception(struct pstore *ps, uin/
clear_mapinfo	dm-mpath.c	/^static void clear_mapinfo(struct multipath *m, uni/
clear_page_attr	bitmap.c	/^static inline void clear_page_attr(struct bitmap */
client_free_pages	dm-kcopyd.c	/^static void client_free_pages(struct dm_kcopyd_cli/
client_reserve_pages	dm-kcopyd.c	/^static int client_reserve_pages(struct dm_kcopyd_c/
clone_bio	dm.c	/^static void clone_bio(struct dm_target_io *tio, st/
clone_endio	dm.c	/^static void clone_endio(struct bio *bio, int error/
clone_info	dm.c	/^struct clone_info {$/
clone_init	dm-crypt.c	/^static void clone_init(struct dm_crypt_io *io, str/
clone_rq	dm.c	/^static struct request *clone_rq(struct request *rq/
close_sync	raid1.c	/^static void close_sync(struct r1conf *conf)$/
close_table_device	dm.c	/^static void close_table_device(struct table_device/
close_write	raid1.c	/^static void close_write(struct r1bio *r1_bio)$/
cmd_match	md.c	/^static int cmd_match(const char *cmd, const char */
cn_ulog_callback	dm-log-userspace-transfer.c	/^static void cn_ulog_callback(struct cn_msg *msg, s/
commit	dm-thin.c	/^static int commit(struct pool *pool)$/
commit_callback	dm-snap-persistent.c	/^struct commit_callback {$/
commit_if_needed	dm-cache-target.c	/^static int commit_if_needed(struct cache *cache)$/
complete_exception	dm-snap.c	/^static void complete_exception(struct dm_snap_pend/
complete_io	dm-io.c	/^static void complete_io(struct io *io)$/
complete_mapping_preparation	dm-thin.c	/^static void complete_mapping_preparation(struct dm/
complete_migration	dm-cache-target.c	/^static void complete_migration(struct dm_cache_mig/
complete_resync_work	dm-region-hash.c	/^static void complete_resync_work(struct dm_region /
compute_blocknr	raid5.c	/^static sector_t compute_blocknr(struct stripe_head/
compute_hash_bio	dm-dedup-hash.c	/^int compute_hash_bio(struct hash_desc_table *desc_/
compute_page_hash	dm-dedup-hash.c	/^int compute_page_hash(struct hash_desc_table *desc/
compute_sector	dm-dedup-rw.c	/^static sector_t compute_sector(struct bio *bio,$/
context_alloc	dm-raid.c	/^static struct raid_set *context_alloc(struct dm_ta/
context_free	dm-raid.c	/^static void context_free(struct raid_set *rs)$/
convert_context	dm-crypt.c	/^struct convert_context {$/
copy_callback	dm-snap.c	/^static void copy_callback(int read_err, unsigned l/
copy_complete	dm-cache-target.c	/^static void copy_complete(int read_err, unsigned l/
copy_ctr_args	dm-cache-target.c	/^static int copy_ctr_args(struct cache *cache, int /
copy_pages	dm-dedup-rw.c	/^static void copy_pages(struct page *src, struct bi/
copy_params	dm-ioctl.c	/^static int copy_params(struct dm_ioctl __user *use/
copy_sm_root	dm-era-target.c	/^static void copy_sm_root(struct era_metadata *md, /
copy_sm_roots	dm-thin-metadata.c	/^static void copy_sm_roots(struct dm_pool_metadata /
copy_tick	dm-cache-policy-mq.c	/^static void copy_tick(struct mq_policy *mq)$/
core_clear_region	dm-log.c	/^static void core_clear_region(struct dm_dirty_log /
core_ctr	dm-log.c	/^static int core_ctr(struct dm_dirty_log *log, stru/
core_dtr	dm-log.c	/^static void core_dtr(struct dm_dirty_log *log)$/
core_exception	dm-snap-persistent.c	/^struct core_exception {$/
core_flush	dm-log.c	/^static int core_flush(struct dm_dirty_log *log)$/
core_get_region_size	dm-log.c	/^static uint32_t core_get_region_size(struct dm_dir/
core_get_resync_work	dm-log.c	/^static int core_get_resync_work(struct dm_dirty_lo/
core_get_sync_count	dm-log.c	/^static region_t core_get_sync_count(struct dm_dirt/
core_in_sync	dm-log.c	/^static int core_in_sync(struct dm_dirty_log *log, /
core_is_clean	dm-log.c	/^static int core_is_clean(struct dm_dirty_log *log,/
core_mark_region	dm-log.c	/^static void core_mark_region(struct dm_dirty_log */
core_resume	dm-log.c	/^static int core_resume(struct dm_dirty_log *log)$/
core_set_region_sync	dm-log.c	/^static void core_set_region_sync(struct dm_dirty_l/
core_status	dm-log.c	/^static int core_status(struct dm_dirty_log *log, s/
corrupt_bio_data	dm-flakey.c	/^static void corrupt_bio_data(struct bio *bio, stru/
count_device	dm-table.c	/^static int count_device(struct dm_target *ti, stru/
cpu_to_group	raid5.c	/^#define cpu_to_group(cpu) cpu_to_node(cpu)$/
create_bio	dm-dedup-rw.c	/^static struct bio *create_bio(struct dedup_config /
create_cache_policy	dm-cache-target.c	/^static int create_cache_policy(struct cache *cache/
create_dirty_log	dm-raid1.c	/^static struct dm_dirty_log *create_dirty_log(struc/
create_fresh_metadata	dm-era-target.c	/^static int create_fresh_metadata(struct era_metada/
create_log_context	dm-log.c	/^static int create_log_context(struct dm_dirty_log /
create_persistent_data_objects	dm-era-target.c	/^static int create_persistent_data_objects(struct e/
create_strip_zones	raid0.c	/^static int create_strip_zones(struct mddev *mddev,/
crypt_alloc_buffer	dm-crypt.c	/^static struct bio *crypt_alloc_buffer(struct dm_cr/
crypt_alloc_req	dm-crypt.c	/^static void crypt_alloc_req(struct crypt_config *c/
crypt_alloc_tfms	dm-crypt.c	/^static int crypt_alloc_tfms(struct crypt_config *c/
crypt_config	dm-crypt.c	/^struct crypt_config {$/
crypt_convert	dm-crypt.c	/^static int crypt_convert(struct crypt_config *cc,$/
crypt_convert_block	dm-crypt.c	/^static int crypt_convert_block(struct crypt_config/
crypt_convert_init	dm-crypt.c	/^static void crypt_convert_init(struct crypt_config/
crypt_ctr	dm-crypt.c	/^static int crypt_ctr(struct dm_target *ti, unsigne/
crypt_ctr_cipher	dm-crypt.c	/^static int crypt_ctr_cipher(struct dm_target *ti,$/
crypt_dec_pending	dm-crypt.c	/^static void crypt_dec_pending(struct dm_crypt_io */
crypt_decode_key	dm-crypt.c	/^static int crypt_decode_key(u8 *key, char *hex, un/
crypt_dtr	dm-crypt.c	/^static void crypt_dtr(struct dm_target *ti)$/
crypt_endio	dm-crypt.c	/^static void crypt_endio(struct bio *clone, int err/
crypt_free_buffer_pages	dm-crypt.c	/^static void crypt_free_buffer_pages(struct crypt_c/
crypt_free_req	dm-crypt.c	/^static void crypt_free_req(struct crypt_config *cc/
crypt_free_tfms	dm-crypt.c	/^static void crypt_free_tfms(struct crypt_config *c/
crypt_inc_pending	dm-crypt.c	/^static void crypt_inc_pending(struct dm_crypt_io */
crypt_io_init	dm-crypt.c	/^static void crypt_io_init(struct dm_crypt_io *io, /
crypt_iterate_devices	dm-crypt.c	/^static int crypt_iterate_devices(struct dm_target /
crypt_iv_benbi_ctr	dm-crypt.c	/^static int crypt_iv_benbi_ctr(struct crypt_config /
crypt_iv_benbi_dtr	dm-crypt.c	/^static void crypt_iv_benbi_dtr(struct crypt_config/
crypt_iv_benbi_gen	dm-crypt.c	/^static int crypt_iv_benbi_gen(struct crypt_config /
crypt_iv_essiv_ctr	dm-crypt.c	/^static int crypt_iv_essiv_ctr(struct crypt_config /
crypt_iv_essiv_dtr	dm-crypt.c	/^static void crypt_iv_essiv_dtr(struct crypt_config/
crypt_iv_essiv_gen	dm-crypt.c	/^static int crypt_iv_essiv_gen(struct crypt_config /
crypt_iv_essiv_init	dm-crypt.c	/^static int crypt_iv_essiv_init(struct crypt_config/
crypt_iv_essiv_wipe	dm-crypt.c	/^static int crypt_iv_essiv_wipe(struct crypt_config/
crypt_iv_lmk_ctr	dm-crypt.c	/^static int crypt_iv_lmk_ctr(struct crypt_config *c/
crypt_iv_lmk_dtr	dm-crypt.c	/^static void crypt_iv_lmk_dtr(struct crypt_config */
crypt_iv_lmk_gen	dm-crypt.c	/^static int crypt_iv_lmk_gen(struct crypt_config *c/
crypt_iv_lmk_init	dm-crypt.c	/^static int crypt_iv_lmk_init(struct crypt_config */
crypt_iv_lmk_one	dm-crypt.c	/^static int crypt_iv_lmk_one(struct crypt_config *c/
crypt_iv_lmk_post	dm-crypt.c	/^static int crypt_iv_lmk_post(struct crypt_config */
crypt_iv_lmk_wipe	dm-crypt.c	/^static int crypt_iv_lmk_wipe(struct crypt_config */
crypt_iv_null_gen	dm-crypt.c	/^static int crypt_iv_null_gen(struct crypt_config */
crypt_iv_operations	dm-crypt.c	/^struct crypt_config;$/
crypt_iv_plain64_gen	dm-crypt.c	/^static int crypt_iv_plain64_gen(struct crypt_confi/
crypt_iv_plain_gen	dm-crypt.c	/^static int crypt_iv_plain_gen(struct crypt_config /
crypt_iv_tcw_ctr	dm-crypt.c	/^static int crypt_iv_tcw_ctr(struct crypt_config *c/
crypt_iv_tcw_dtr	dm-crypt.c	/^static void crypt_iv_tcw_dtr(struct crypt_config */
crypt_iv_tcw_gen	dm-crypt.c	/^static int crypt_iv_tcw_gen(struct crypt_config *c/
crypt_iv_tcw_init	dm-crypt.c	/^static int crypt_iv_tcw_init(struct crypt_config */
crypt_iv_tcw_post	dm-crypt.c	/^static int crypt_iv_tcw_post(struct crypt_config */
crypt_iv_tcw_whitening	dm-crypt.c	/^static int crypt_iv_tcw_whitening(struct crypt_con/
crypt_iv_tcw_wipe	dm-crypt.c	/^static int crypt_iv_tcw_wipe(struct crypt_config */
crypt_map	dm-crypt.c	/^static int crypt_map(struct dm_target *ti, struct /
crypt_merge	dm-crypt.c	/^static int crypt_merge(struct dm_target *ti, struc/
crypt_message	dm-crypt.c	/^static int crypt_message(struct dm_target *ti, uns/
crypt_postsuspend	dm-crypt.c	/^static void crypt_postsuspend(struct dm_target *ti/
crypt_preresume	dm-crypt.c	/^static int crypt_preresume(struct dm_target *ti)$/
crypt_resume	dm-crypt.c	/^static void crypt_resume(struct dm_target *ti)$/
crypt_set_key	dm-crypt.c	/^static int crypt_set_key(struct crypt_config *cc, /
crypt_setkey_allcpus	dm-crypt.c	/^static int crypt_setkey_allcpus(struct crypt_confi/
crypt_status	dm-crypt.c	/^static void crypt_status(struct dm_target *ti, sta/
crypt_wipe_key	dm-crypt.c	/^static int crypt_wipe_key(struct crypt_config *cc)/
ctl_ioctl	dm-ioctl.c	/^static int ctl_ioctl(uint command, struct dm_ioctl/
data_block_dec	dm-thin-metadata.c	/^static void data_block_dec(void *context, const vo/
data_block_equal	dm-thin-metadata.c	/^static int data_block_equal(void *context, const v/
data_block_inc	dm-thin-metadata.c	/^static void data_block_inc(void *context, const vo/
data_dev_supports_discard	dm-thin.c	/^static bool data_dev_supports_discard(struct pool_/
data_mode	dm-bufio.c	/^enum data_mode {$/
dec_count	dm-io.c	/^static void dec_count(struct io *io, unsigned int /
dec_nr_migrations	dm-cache-target.c	/^static void dec_nr_migrations(struct cache *cache)/
dec_pending	dm.c	/^static void dec_pending(struct dm_io *io, int erro/
dec_refcount_cowbtree	dm-dedup-cbt.c	/^static int dec_refcount_cowbtree(struct metadata */
dec_refcount_inram	dm-dedup-ram.c	/^static int dec_refcount_inram(struct metadata *md,/
decipher_sync_action	dm-raid.c	/^static const char *decipher_sync_action(struct mdd/
dedup_args	dm-dedup-target.c	/^struct dedup_args {$/
dedup_config	dm-dedup-target.h	/^struct dedup_config {$/
dedup_work	dm-dedup-target.c	/^struct dedup_work {$/
default_ok	dm-raid1.c	/^static int default_ok(struct mirror *m)$/
defer_bio	dm-cache-target.c	/^static void defer_bio(struct cache *cache, struct /
defer_writethrough_bio	dm-cache-target.c	/^static void defer_writethrough_bio(struct cache *c/
degraded_show	md.c	/^degraded_show(struct mddev *mddev, char *page)$/
del	dm-cache-policy-mq.c	/^static void del(struct mq_policy *mq, struct entry/
delay_bio	dm-delay.c	/^static int delay_bio(struct delay_c *dc, int delay/
delay_c	dm-delay.c	/^struct delay_c {$/
delay_ctr	dm-delay.c	/^static int delay_ctr(struct dm_target *ti, unsigne/
delay_dtr	dm-delay.c	/^static void delay_dtr(struct dm_target *ti)$/
delay_iterate_devices	dm-delay.c	/^static int delay_iterate_devices(struct dm_target /
delay_map	dm-delay.c	/^static int delay_map(struct dm_target *ti, struct /
delay_presuspend	dm-delay.c	/^static void delay_presuspend(struct dm_target *ti)/
delay_resume	dm-delay.c	/^static void delay_resume(struct dm_target *ti)$/
delay_status	dm-delay.c	/^static void delay_status(struct dm_target *ti, sta/
delayed_wake	dm-raid1.c	/^static void delayed_wake(struct mirror_set *ms)$/
delayed_wake_fn	dm-raid1.c	/^static void delayed_wake_fn(unsigned long data)$/
demote_cblock	dm-cache-policy-mq.c	/^static int demote_cblock(struct mq_policy *mq, dm_/
demote_then_promote	dm-cache-target.c	/^static void demote_then_promote(struct cache *cach/
desc_table_deinit	dm-dedup-hash.c	/^void desc_table_deinit(struct hash_desc_table *des/
desc_table_init	dm-dedup-hash.c	/^struct hash_desc_table *desc_table_init(char *hash/
destroy	dm-cache-target.c	/^static void destroy(struct cache *cache)$/
destroy_cache_args	dm-cache-target.c	/^static void destroy_cache_args(struct cache_args */
destroy_log_context	dm-log.c	/^static void destroy_log_context(struct log_c *lc)$/
destroy_persistent_data_objects	dm-era-target.c	/^static void destroy_persistent_data_objects(struct/
detected_devices_node	md.c	/^struct detected_devices_node {$/
dev_create	dm-ioctl.c	/^static int dev_create(struct dm_ioctl *param, size/
dev_info	linear.h	/^struct dev_info {$/
dev_is_congested	dm-era-target.c	/^static int dev_is_congested(struct dm_dev *dev, in/
dev_parms	dm-raid.c	/^static int dev_parms(struct raid_set *rs, char **a/
dev_remove	dm-ioctl.c	/^static int dev_remove(struct dm_ioctl *param, size/
dev_rename	dm-ioctl.c	/^static int dev_rename(struct dm_ioctl *param, size/
dev_set_geometry	dm-ioctl.c	/^static int dev_set_geometry(struct dm_ioctl *param/
dev_status	dm-ioctl.c	/^static int dev_status(struct dm_ioctl *param, size/
dev_suspend	dm-ioctl.c	/^static int dev_suspend(struct dm_ioctl *param, siz/
dev_wait	dm-ioctl.c	/^static int dev_wait(struct dm_ioctl *param, size_t/
device_area_is_invalid	dm-table.c	/^static int device_area_is_invalid(struct dm_target/
device_discard_capable	dm-table.c	/^static int device_discard_capable(struct dm_target/
device_flush_capable	dm-table.c	/^static int device_flush_capable(struct dm_target */
device_is_nonrot	dm-table.c	/^static int device_is_nonrot(struct dm_target *ti, /
device_is_not_random	dm-table.c	/^static int device_is_not_random(struct dm_target */
device_not_write_same_capable	dm-table.c	/^static int device_not_write_same_capable(struct dm/
device_status_char	dm-raid1.c	/^static char device_status_char(struct mirror *m)$/
digest	dm-era-target.c	/^struct digest {$/
disable_passdown_if_not_supported	dm-thin.c	/^static void disable_passdown_if_not_supported(stru/
disable_write_same	dm.c	/^static void disable_write_same(struct mapped_devic/
discarded	dm-cache-metadata.h	/^			       dm_oblock_t dblock, bool discarded);$/
disk_ctr	dm-log.c	/^static int disk_ctr(struct dm_dirty_log *log, stru/
disk_device_details	dm-thin-metadata.c	/^struct disk_device_details {$/
disk_dtr	dm-log.c	/^static void disk_dtr(struct dm_dirty_log *log)$/
disk_exception	dm-snap-persistent.c	/^struct disk_exception {$/
disk_flush	dm-log.c	/^static int disk_flush(struct dm_dirty_log *log)$/
disk_header	dm-snap-persistent.c	/^struct disk_header {$/
disk_info	raid5.h	/^struct disk_info {$/
disk_resume	dm-log.c	/^static int disk_resume(struct dm_dirty_log *log)$/
disk_status	dm-log.c	/^static int disk_status(struct dm_dirty_log *log, s/
dispatch_bios	dm-raid1.c	/^static void dispatch_bios(void *context, struct bi/
dispatch_io	dm-io.c	/^static void dispatch_io(int rw, unsigned int num_r/
dispatch_job	dm-kcopyd.c	/^static void dispatch_job(struct kcopyd_job *job)$/
dm_accept_partial_bio	dm.c	/^void dm_accept_partial_bio(struct bio *bio, unsign/
dm_add_exception	dm-snap.c	/^static int dm_add_exception(void *context, chunk_t/
dm_alloc_md_mempools	dm.c	/^struct dm_md_mempools *dm_alloc_md_mempools(unsign/
dm_any_congested	dm.c	/^static int dm_any_congested(void *congested_data, /
dm_attr_name_show	dm-sysfs.c	/^static ssize_t dm_attr_name_show(struct mapped_dev/
dm_attr_show	dm-sysfs.c	/^static ssize_t dm_attr_show(struct kobject *kobj, /
dm_attr_suspended_show	dm-sysfs.c	/^static ssize_t dm_attr_suspended_show(struct mappe/
dm_attr_uuid_show	dm-sysfs.c	/^static ssize_t dm_attr_uuid_show(struct mapped_dev/
dm_bio_details	dm-bio-record.h	/^struct dm_bio_details {$/
dm_bio_detain	dm-bio-prison.c	/^int dm_bio_detain(struct dm_bio_prison *prison,$/
dm_bio_prison	dm-bio-prison.c	/^struct dm_bio_prison {$/
dm_bio_prison_alloc_cell	dm-bio-prison.c	/^struct dm_bio_prison_cell *dm_bio_prison_alloc_cel/
dm_bio_prison_cell	dm-bio-prison.h	/^struct dm_bio_prison_cell {$/
dm_bio_prison_create	dm-bio-prison.c	/^struct dm_bio_prison *dm_bio_prison_create(unsigne/
dm_bio_prison_destroy	dm-bio-prison.c	/^void dm_bio_prison_destroy(struct dm_bio_prison *p/
dm_bio_prison_exit	dm-bio-prison.c	/^static void __exit dm_bio_prison_exit(void)$/
dm_bio_prison_free_cell	dm-bio-prison.c	/^void dm_bio_prison_free_cell(struct dm_bio_prison /
dm_bio_prison_init	dm-bio-prison.c	/^static int __init dm_bio_prison_init(void)$/
dm_bio_record	dm-bio-record.h	/^static inline void dm_bio_record(struct dm_bio_det/
dm_bio_restore	dm-bio-record.h	/^static inline void dm_bio_restore(struct dm_bio_de/
dm_blk_close	dm.c	/^static void dm_blk_close(struct gendisk *disk, fmo/
dm_blk_getgeo	dm.c	/^static int dm_blk_getgeo(struct block_device *bdev/
dm_blk_ioctl	dm.c	/^static int dm_blk_ioctl(struct block_device *bdev,/
dm_blk_open	dm.c	/^static int dm_blk_open(struct block_device *bdev, /
dm_buffer	dm-bufio.c	/^struct dm_buffer {$/
dm_bufio_alloc_callback	dm-verity.c	/^static void dm_bufio_alloc_callback(struct dm_buff/
dm_bufio_cache_index	dm-bufio.c	/^static inline int dm_bufio_cache_index(struct dm_b/
dm_bufio_client	dm-bufio.c	/^struct dm_bufio_client {$/
dm_bufio_client_create	dm-bufio.c	/^struct dm_bufio_client *dm_bufio_client_create(str/
dm_bufio_client_destroy	dm-bufio.c	/^void dm_bufio_client_destroy(struct dm_bufio_clien/
dm_bufio_exit	dm-bufio.c	/^static void __exit dm_bufio_exit(void)$/
dm_bufio_forget	dm-bufio.c	/^void dm_bufio_forget(struct dm_bufio_client *c, se/
dm_bufio_get	dm-bufio.c	/^void *dm_bufio_get(struct dm_bufio_client *c, sect/
dm_bufio_get_aux_data	dm-bufio.c	/^void *dm_bufio_get_aux_data(struct dm_buffer *b)$/
dm_bufio_get_block_data	dm-bufio.c	/^void *dm_bufio_get_block_data(struct dm_buffer *b)/
dm_bufio_get_block_number	dm-bufio.c	/^sector_t dm_bufio_get_block_number(struct dm_buffe/
dm_bufio_get_block_size	dm-bufio.c	/^unsigned dm_bufio_get_block_size(struct dm_bufio_c/
dm_bufio_get_client	dm-bufio.c	/^struct dm_bufio_client *dm_bufio_get_client(struct/
dm_bufio_get_device_size	dm-bufio.c	/^sector_t dm_bufio_get_device_size(struct dm_bufio_/
dm_bufio_in_request	dm-bufio.c	/^#define dm_bufio_in_request()	(!!current->bio_list/
dm_bufio_init	dm-bufio.c	/^static int __init dm_bufio_init(void)$/
dm_bufio_issue_flush	dm-bufio.c	/^int dm_bufio_issue_flush(struct dm_bufio_client *c/
dm_bufio_lock	dm-bufio.c	/^static void dm_bufio_lock(struct dm_bufio_client */
dm_bufio_mark_buffer_dirty	dm-bufio.c	/^void dm_bufio_mark_buffer_dirty(struct dm_buffer */
dm_bufio_new	dm-bufio.c	/^void *dm_bufio_new(struct dm_bufio_client *c, sect/
dm_bufio_prefetch	dm-bufio.c	/^void dm_bufio_prefetch(struct dm_bufio_client *c,$/
dm_bufio_read	dm-bufio.c	/^void *dm_bufio_read(struct dm_bufio_client *c, sec/
dm_bufio_release	dm-bufio.c	/^void dm_bufio_release(struct dm_buffer *b)$/
dm_bufio_release_move	dm-bufio.c	/^void dm_bufio_release_move(struct dm_buffer *b, se/
dm_bufio_set_minimum_buffers	dm-bufio.c	/^void dm_bufio_set_minimum_buffers(struct dm_bufio_/
dm_bufio_shrink_count	dm-bufio.c	/^dm_bufio_shrink_count(struct shrinker *shrink, str/
dm_bufio_shrink_scan	dm-bufio.c	/^dm_bufio_shrink_scan(struct shrinker *shrink, stru/
dm_bufio_trylock	dm-bufio.c	/^static int dm_bufio_trylock(struct dm_bufio_client/
dm_bufio_unlock	dm-bufio.c	/^static void dm_bufio_unlock(struct dm_bufio_client/
dm_bufio_write_dirty_buffers	dm-bufio.c	/^int dm_bufio_write_dirty_buffers(struct dm_bufio_c/
dm_bufio_write_dirty_buffers_async	dm-bufio.c	/^void dm_bufio_write_dirty_buffers_async(struct dm_/
dm_build_path_uevent	dm-uevent.c	/^static struct dm_uevent *dm_build_path_uevent(stru/
dm_cache_changed_this_transaction	dm-cache-metadata.c	/^int dm_cache_changed_this_transaction(struct dm_ca/
dm_cache_commit	dm-cache-metadata.c	/^int dm_cache_commit(struct dm_cache_metadata *cmd,/
dm_cache_discard_bitset_resize	dm-cache-metadata.c	/^int dm_cache_discard_bitset_resize(struct dm_cache/
dm_cache_dump	dm-cache-metadata.c	/^void dm_cache_dump(struct dm_cache_metadata *cmd)$/
dm_cache_exit	dm-cache-target.c	/^static void __exit dm_cache_exit(void)$/
dm_cache_get_free_metadata_block_count	dm-cache-metadata.c	/^int dm_cache_get_free_metadata_block_count(struct /
dm_cache_get_metadata_dev_size	dm-cache-metadata.c	/^int dm_cache_get_metadata_dev_size(struct dm_cache/
dm_cache_init	dm-cache-target.c	/^static int __init dm_cache_init(void)$/
dm_cache_insert_mapping	dm-cache-metadata.c	/^int dm_cache_insert_mapping(struct dm_cache_metada/
dm_cache_load_discards	dm-cache-metadata.c	/^int dm_cache_load_discards(struct dm_cache_metadat/
dm_cache_load_mappings	dm-cache-metadata.c	/^int dm_cache_load_mappings(struct dm_cache_metadat/
dm_cache_metadata	dm-cache-metadata.c	/^struct dm_cache_metadata {$/
dm_cache_metadata_all_clean	dm-cache-metadata.c	/^int dm_cache_metadata_all_clean(struct dm_cache_me/
dm_cache_metadata_close	dm-cache-metadata.c	/^void dm_cache_metadata_close(struct dm_cache_metad/
dm_cache_metadata_get_stats	dm-cache-metadata.c	/^void dm_cache_metadata_get_stats(struct dm_cache_m/
dm_cache_metadata_open	dm-cache-metadata.c	/^struct dm_cache_metadata *dm_cache_metadata_open(s/
dm_cache_metadata_set_stats	dm-cache-metadata.c	/^void dm_cache_metadata_set_stats(struct dm_cache_m/
dm_cache_migration	dm-cache-target.c	/^struct dm_cache_migration {$/
dm_cache_policy	dm-cache-policy.h	/^struct dm_cache_policy {$/
dm_cache_policy_create	dm-cache-policy.c	/^struct dm_cache_policy *dm_cache_policy_create(con/
dm_cache_policy_destroy	dm-cache-policy.c	/^void dm_cache_policy_destroy(struct dm_cache_polic/
dm_cache_policy_get_hint_size	dm-cache-policy.c	/^size_t dm_cache_policy_get_hint_size(struct dm_cac/
dm_cache_policy_get_name	dm-cache-policy.c	/^const char *dm_cache_policy_get_name(struct dm_cac/
dm_cache_policy_get_version	dm-cache-policy.c	/^const unsigned *dm_cache_policy_get_version(struct/
dm_cache_policy_register	dm-cache-policy.c	/^int dm_cache_policy_register(struct dm_cache_polic/
dm_cache_policy_type	dm-cache-policy.h	/^struct dm_cache_policy_type {$/
dm_cache_policy_unregister	dm-cache-policy.c	/^void dm_cache_policy_unregister(struct dm_cache_po/
dm_cache_remove_mapping	dm-cache-metadata.c	/^int dm_cache_remove_mapping(struct dm_cache_metada/
dm_cache_resize	dm-cache-metadata.c	/^int dm_cache_resize(struct dm_cache_metadata *cmd,/
dm_cache_set_dirty	dm-cache-metadata.c	/^int dm_cache_set_dirty(struct dm_cache_metadata *c/
dm_cache_set_discard	dm-cache-metadata.c	/^int dm_cache_set_discard(struct dm_cache_metadata /
dm_cache_size	dm-cache-metadata.c	/^dm_cblock_t dm_cache_size(struct dm_cache_metadata/
dm_cache_statistics	dm-cache-metadata.h	/^struct dm_cache_statistics {$/
dm_cache_write_hints	dm-cache-metadata.c	/^int dm_cache_write_hints(struct dm_cache_metadata /
dm_calculate_queue_limits	dm-table.c	/^int dm_calculate_queue_limits(struct dm_table *tab/
dm_cancel_deferred_remove	dm.c	/^int dm_cancel_deferred_remove(struct mapped_device/
dm_cblock_t	dm-cache-block-types.h	/^typedef uint32_t __bitwise__ dm_cblock_t;$/
dm_cell_error	dm-bio-prison.c	/^void dm_cell_error(struct dm_bio_prison *prison,$/
dm_cell_key	dm-bio-prison.h	/^struct dm_cell_key {$/
dm_cell_release	dm-bio-prison.c	/^void dm_cell_release(struct dm_bio_prison *prison,/
dm_cell_release_no_holder	dm-bio-prison.c	/^void dm_cell_release_no_holder(struct dm_bio_priso/
dm_chunk_number	dm-exception-store.h	/^static inline chunk_t dm_chunk_number(chunk_t chun/
dm_compat_ctl_ioctl	dm-ioctl.c	/^static long dm_compat_ctl_ioctl(struct file *file,/
dm_complete_request	dm.c	/^static void dm_complete_request(struct request *cl/
dm_consecutive_chunk_count	dm-exception-store.h	/^static inline unsigned dm_consecutive_chunk_count(/
dm_consecutive_chunk_count_dec	dm-exception-store.h	/^static inline void dm_consecutive_chunk_count_dec(/
dm_consecutive_chunk_count_inc	dm-exception-store.h	/^static inline void dm_consecutive_chunk_count_inc(/
dm_consult_userspace	dm-log-userspace-transfer.c	/^int dm_consult_userspace(const char *uuid, uint64_/
dm_consume_args	dm-table.c	/^void dm_consume_args(struct dm_arg_set *as, unsign/
dm_copy_name_and_uuid	dm-ioctl.c	/^int dm_copy_name_and_uuid(struct mapped_device *md/
dm_create	dm.c	/^int dm_create(int minor, struct mapped_device **re/
dm_crypt_exit	dm-crypt.c	/^static void __exit dm_crypt_exit(void)$/
dm_crypt_init	dm-crypt.c	/^static int __init dm_crypt_init(void)$/
dm_crypt_io	dm-crypt.c	/^struct dm_crypt_io {$/
dm_crypt_request	dm-crypt.c	/^struct dm_crypt_request {$/
dm_ctl_ioctl	dm-ioctl.c	/^static long dm_ctl_ioctl(struct file *file, uint c/
dm_deferred_entry	dm-bio-prison.c	/^struct dm_deferred_entry {$/
dm_deferred_entry_dec	dm-bio-prison.c	/^void dm_deferred_entry_dec(struct dm_deferred_entr/
dm_deferred_entry_inc	dm-bio-prison.c	/^struct dm_deferred_entry *dm_deferred_entry_inc(st/
dm_deferred_remove	dm-ioctl.c	/^void dm_deferred_remove(void)$/
dm_deferred_set	dm-bio-prison.c	/^struct dm_deferred_set {$/
dm_deferred_set_add_work	dm-bio-prison.c	/^int dm_deferred_set_add_work(struct dm_deferred_se/
dm_deferred_set_create	dm-bio-prison.c	/^struct dm_deferred_set *dm_deferred_set_create(voi/
dm_deferred_set_destroy	dm-bio-prison.c	/^void dm_deferred_set_destroy(struct dm_deferred_se/
dm_delay_exit	dm-delay.c	/^static void __exit dm_delay_exit(void)$/
dm_delay_info	dm-delay.c	/^struct dm_delay_info {$/
dm_delay_init	dm-delay.c	/^static int __init dm_delay_init(void)$/
dm_deleting_md	dm.c	/^int dm_deleting_md(struct mapped_device *md)$/
dm_destroy	dm.c	/^void dm_destroy(struct mapped_device *md)$/
dm_destroy_immediate	dm.c	/^void dm_destroy_immediate(struct mapped_device *md/
dm_dev_internal	dm.h	/^struct dm_dev_internal {$/
dm_device_merge_is_compulsory	dm.c	/^static int dm_device_merge_is_compulsory(struct dm/
dm_device_name	dm.c	/^const char *dm_device_name(struct mapped_device *m/
dm_dirty_log_create	dm-log.c	/^struct dm_dirty_log *dm_dirty_log_create(const cha/
dm_dirty_log_destroy	dm-log.c	/^void dm_dirty_log_destroy(struct dm_dirty_log *log/
dm_dirty_log_exit	dm-log.c	/^static void __exit dm_dirty_log_exit(void)$/
dm_dirty_log_init	dm-log.c	/^static int __init dm_dirty_log_init(void)$/
dm_dirty_log_type_register	dm-log.c	/^int dm_dirty_log_type_register(struct dm_dirty_log/
dm_dirty_log_type_unregister	dm-log.c	/^int dm_dirty_log_type_unregister(struct dm_dirty_l/
dm_disk	dm.c	/^struct gendisk *dm_disk(struct mapped_device *md)$/
dm_dispatch_request	dm.c	/^void dm_dispatch_request(struct request *rq)$/
dm_done	dm.c	/^static void dm_done(struct request *clone, int err/
dm_end_request	dm.c	/^static void dm_end_request(struct request *clone, /
dm_era_exit	dm-era-target.c	/^static void __exit dm_era_exit(void)$/
dm_era_init	dm-era-target.c	/^static int __init dm_era_init(void)$/
dm_exception	dm-exception-store.h	/^struct dm_exception {$/
dm_exception_store	dm-exception-store.h	/^struct dm_snapshot;$/
dm_exception_store_create	dm-exception-store.c	/^int dm_exception_store_create(struct dm_target *ti/
dm_exception_store_destroy	dm-exception-store.c	/^void dm_exception_store_destroy(struct dm_exceptio/
dm_exception_store_exit	dm-exception-store.c	/^void dm_exception_store_exit(void)$/
dm_exception_store_init	dm-exception-store.c	/^int dm_exception_store_init(void)$/
dm_exception_store_set_chunk_size	dm-exception-store.c	/^int dm_exception_store_set_chunk_size(struct dm_ex/
dm_exception_store_type	dm-exception-store.h	/^struct dm_exception_store;$/
dm_exception_store_type_register	dm-exception-store.c	/^int dm_exception_store_type_register(struct dm_exc/
dm_exception_store_type_unregister	dm-exception-store.c	/^int dm_exception_store_type_unregister(struct dm_e/
dm_exception_table	dm-snap.c	/^struct dm_exception_table {$/
dm_exception_table_exit	dm-snap.c	/^static void dm_exception_table_exit(struct dm_exce/
dm_exception_table_init	dm-snap.c	/^static int dm_exception_table_init(struct dm_excep/
dm_exit	dm.c	/^static void __exit dm_exit(void)$/
dm_find_md	dm.c	/^static struct mapped_device *dm_find_md(dev_t dev)/
dm_flakey_exit	dm-flakey.c	/^static void __exit dm_flakey_exit(void)$/
dm_flakey_init	dm-flakey.c	/^static int __init dm_flakey_init(void)$/
dm_free_md_mempools	dm.c	/^void dm_free_md_mempools(struct dm_md_mempools *po/
dm_get	dm.c	/^void dm_get(struct mapped_device *md)$/
dm_get_cell	dm-bio-prison.c	/^int dm_get_cell(struct dm_bio_prison *prison,$/
dm_get_completion_from_kobject	dm.h	/^static inline struct completion *dm_get_completion/
dm_get_device	dm-table.c	/^int dm_get_device(struct dm_target *ti, const char/
dm_get_event_nr	dm.c	/^uint32_t dm_get_event_nr(struct mapped_device *md)/
dm_get_from_kobject	dm.c	/^struct mapped_device *dm_get_from_kobject(struct k/
dm_get_geometry	dm.c	/^int dm_get_geometry(struct mapped_device *md, stru/
dm_get_immutable_target_type	dm.c	/^struct target_type *dm_get_immutable_target_type(s/
dm_get_inactive_table	dm-ioctl.c	/^static struct dm_table *dm_get_inactive_table(stru/
dm_get_live_or_inactive_table	dm-ioctl.c	/^static struct dm_table *dm_get_live_or_inactive_ta/
dm_get_live_table	dm.c	/^struct dm_table *dm_get_live_table(struct mapped_d/
dm_get_live_table_fast	dm.c	/^static struct dm_table *dm_get_live_table_fast(str/
dm_get_md	dm.c	/^struct mapped_device *dm_get_md(dev_t dev)$/
dm_get_md_queue	dm.c	/^struct request_queue *dm_get_md_queue(struct mappe/
dm_get_md_type	dm.c	/^unsigned dm_get_md_type(struct mapped_device *md)$/
dm_get_mdptr	dm.c	/^void *dm_get_mdptr(struct mapped_device *md)$/
dm_get_path_selector	dm-path-selector.c	/^struct path_selector_type *dm_get_path_selector(co/
dm_get_queue_limits	dm.c	/^struct queue_limits *dm_get_queue_limits(struct ma/
dm_get_reserved_bio_based_ios	dm.c	/^unsigned dm_get_reserved_bio_based_ios(void)$/
dm_get_reserved_rq_based_ios	dm.c	/^unsigned dm_get_reserved_rq_based_ios(void)$/
dm_get_rq_mapinfo	dm.c	/^union map_info *dm_get_rq_mapinfo(struct request */
dm_get_size	dm.c	/^sector_t dm_get_size(struct mapped_device *md)$/
dm_get_stats	dm.c	/^struct dm_stats *dm_get_stats(struct mapped_device/
dm_get_table_device	dm.c	/^int dm_get_table_device(struct mapped_device *md, /
dm_get_target_type	dm-target.c	/^struct target_type *dm_get_target_type(const char /
dm_hash_exit	dm-ioctl.c	/^static void dm_hash_exit(void)$/
dm_hash_init	dm-ioctl.c	/^static int dm_hash_init(void)$/
dm_hash_insert	dm-ioctl.c	/^static int dm_hash_insert(const char *name, const /
dm_hash_remove_all	dm-ioctl.c	/^static void dm_hash_remove_all(bool keep_open_devi/
dm_hash_rename	dm-ioctl.c	/^static struct mapped_device *dm_hash_rename(struct/
dm_hook_bio	dm-cache-target.c	/^static void dm_hook_bio(struct dm_hook_info *h, st/
dm_hook_info	dm-cache-target.c	/^struct dm_hook_info {$/
dm_init	dm.c	/^static int __init dm_init(void)$/
dm_init_md_queue	dm.c	/^static void dm_init_md_queue(struct mapped_device /
dm_init_request_based_queue	dm.c	/^static int dm_init_request_based_queue(struct mapp/
dm_insert_exception	dm-snap.c	/^static void dm_insert_exception(struct dm_exceptio/
dm_interface_exit	dm-ioctl.c	/^void dm_interface_exit(void)$/
dm_interface_init	dm-ioctl.c	/^int __init dm_interface_init(void)$/
dm_internal_resume	dm.c	/^void dm_internal_resume(struct mapped_device *md)$/
dm_internal_suspend	dm.c	/^void dm_internal_suspend(struct mapped_device *md)/
dm_io	dm-io.c	/^int dm_io(struct dm_io_request *io_req, unsigned n/
dm_io_client	dm-io.c	/^struct dm_io_client {$/
dm_io_client_create	dm-io.c	/^struct dm_io_client *dm_io_client_create(void)$/
dm_io_client_destroy	dm-io.c	/^void dm_io_client_destroy(struct dm_io_client *cli/
dm_io_exit	dm-io.c	/^void dm_io_exit(void)$/
dm_io_init	dm-io.c	/^int __init dm_io_init(void)$/
dm_jiffies_to_msec64	dm-stats.c	/^static unsigned long long dm_jiffies_to_msec64(uns/
dm_kcopyd_client	dm-kcopyd.c	/^struct dm_kcopyd_client {$/
dm_kcopyd_client_create	dm-kcopyd.c	/^struct dm_kcopyd_client *dm_kcopyd_client_create(s/
dm_kcopyd_client_destroy	dm-kcopyd.c	/^void dm_kcopyd_client_destroy(struct dm_kcopyd_cli/
dm_kcopyd_copy	dm-kcopyd.c	/^int dm_kcopyd_copy(struct dm_kcopyd_client *kc, st/
dm_kcopyd_do_callback	dm-kcopyd.c	/^void dm_kcopyd_do_callback(void *j, int read_err, /
dm_kcopyd_exit	dm-kcopyd.c	/^void dm_kcopyd_exit(void)$/
dm_kcopyd_init	dm-kcopyd.c	/^int __init dm_kcopyd_init(void)$/
dm_kcopyd_prepare_callback	dm-kcopyd.c	/^void *dm_kcopyd_prepare_callback(struct dm_kcopyd_/
dm_kcopyd_zero	dm-kcopyd.c	/^int dm_kcopyd_zero(struct dm_kcopyd_client *kc,$/
dm_kill_unmapped_request	dm.c	/^void dm_kill_unmapped_request(struct request *clon/
dm_kobject	dm.c	/^struct kobject *dm_kobject(struct mapped_device *m/
dm_kobject_holder	dm.h	/^struct dm_kobject_holder {$/
dm_kobject_release	dm-builtin.c	/^void dm_kobject_release(struct kobject *kobj)$/
dm_kobject_uevent	dm.c	/^int dm_kobject_uevent(struct mapped_device *md, en/
dm_kvfree	dm-stats.c	/^static void dm_kvfree(void *ptr, size_t alloc_size/
dm_kvzalloc	dm-stats.c	/^static void *dm_kvzalloc(size_t alloc_size, int no/
dm_linear_exit	dm-linear.c	/^void dm_linear_exit(void)$/
dm_linear_init	dm-linear.c	/^int __init dm_linear_init(void)$/
dm_lld_busy	dm.c	/^static int dm_lld_busy(struct request_queue *q)$/
dm_lock_for_deletion	dm.c	/^int dm_lock_for_deletion(struct mapped_device *md,/
dm_lock_md_type	dm.c	/^void dm_lock_md_type(struct mapped_device *md)$/
dm_lookup_exception	dm-snap.c	/^static struct dm_exception *dm_lookup_exception(st/
dm_md_mempools	dm.c	/^struct dm_md_mempools {$/
dm_merge_bvec	dm.c	/^static int dm_merge_bvec(struct request_queue *q,$/
dm_message_test_buffer_overflow	dm.h	/^static inline bool dm_message_test_buffer_overflow/
dm_mirror_exit	dm-raid1.c	/^static void __exit dm_mirror_exit(void)$/
dm_mirror_init	dm-raid1.c	/^static int __init dm_mirror_init(void)$/
dm_mpath_io	dm-mpath.c	/^struct dm_mpath_io {$/
dm_multipath_exit	dm-mpath.c	/^static void __exit dm_multipath_exit(void)$/
dm_multipath_init	dm-mpath.c	/^static int __init dm_multipath_init(void)$/
dm_next_uevent_seq	dm.c	/^uint32_t dm_next_uevent_seq(struct mapped_device */
dm_noflush_suspending	dm.c	/^int dm_noflush_suspending(struct dm_target *ti)$/
dm_oblock_t	dm-cache-block-types.h	/^typedef dm_block_t __bitwise__ dm_oblock_t;$/
dm_open_count	dm.c	/^int dm_open_count(struct mapped_device *md)$/
dm_origin	dm-snap.c	/^struct dm_origin {$/
dm_path	dm-mpath.h	/^struct dm_dev;$/
dm_path_uevent	dm-uevent.c	/^void dm_path_uevent(enum dm_uevent_type event_type/
dm_persistent_snapshot_exit	dm-snap-persistent.c	/^void dm_persistent_snapshot_exit(void)$/
dm_persistent_snapshot_init	dm-snap-persistent.c	/^int dm_persistent_snapshot_init(void)$/
dm_pool_abort_metadata	dm-thin-metadata.c	/^int dm_pool_abort_metadata(struct dm_pool_metadata/
dm_pool_alloc_data_block	dm-thin-metadata.c	/^int dm_pool_alloc_data_block(struct dm_pool_metada/
dm_pool_block_is_used	dm-thin-metadata.c	/^int dm_pool_block_is_used(struct dm_pool_metadata /
dm_pool_changed_this_transaction	dm-thin-metadata.c	/^bool dm_pool_changed_this_transaction(struct dm_po/
dm_pool_close_thin_device	dm-thin-metadata.c	/^int dm_pool_close_thin_device(struct dm_thin_devic/
dm_pool_commit_metadata	dm-thin-metadata.c	/^int dm_pool_commit_metadata(struct dm_pool_metadat/
dm_pool_create_snap	dm-thin-metadata.c	/^int dm_pool_create_snap(struct dm_pool_metadata *p/
dm_pool_create_thin	dm-thin-metadata.c	/^int dm_pool_create_thin(struct dm_pool_metadata *p/
dm_pool_delete_thin_device	dm-thin-metadata.c	/^int dm_pool_delete_thin_device(struct dm_pool_meta/
dm_pool_get_data_block_size	dm-thin-metadata.c	/^int dm_pool_get_data_block_size(struct dm_pool_met/
dm_pool_get_data_dev_size	dm-thin-metadata.c	/^int dm_pool_get_data_dev_size(struct dm_pool_metad/
dm_pool_get_free_block_count	dm-thin-metadata.c	/^int dm_pool_get_free_block_count(struct dm_pool_me/
dm_pool_get_free_metadata_block_count	dm-thin-metadata.c	/^int dm_pool_get_free_metadata_block_count(struct d/
dm_pool_get_metadata_dev_size	dm-thin-metadata.c	/^int dm_pool_get_metadata_dev_size(struct dm_pool_m/
dm_pool_get_metadata_snap	dm-thin-metadata.c	/^int dm_pool_get_metadata_snap(struct dm_pool_metad/
dm_pool_get_metadata_transaction_id	dm-thin-metadata.c	/^int dm_pool_get_metadata_transaction_id(struct dm_/
dm_pool_metadata	dm-thin-metadata.c	/^struct dm_pool_metadata {$/
dm_pool_metadata_close	dm-thin-metadata.c	/^int dm_pool_metadata_close(struct dm_pool_metadata/
dm_pool_metadata_needs_check	dm-thin-metadata.c	/^bool dm_pool_metadata_needs_check(struct dm_pool_m/
dm_pool_metadata_open	dm-thin-metadata.c	/^struct dm_pool_metadata *dm_pool_metadata_open(str/
dm_pool_metadata_read_only	dm-thin-metadata.c	/^void dm_pool_metadata_read_only(struct dm_pool_met/
dm_pool_metadata_read_write	dm-thin-metadata.c	/^void dm_pool_metadata_read_write(struct dm_pool_me/
dm_pool_metadata_set_needs_check	dm-thin-metadata.c	/^int dm_pool_metadata_set_needs_check(struct dm_poo/
dm_pool_open_thin_device	dm-thin-metadata.c	/^int dm_pool_open_thin_device(struct dm_pool_metada/
dm_pool_register_metadata_threshold	dm-thin-metadata.c	/^int dm_pool_register_metadata_threshold(struct dm_/
dm_pool_release_metadata_snap	dm-thin-metadata.c	/^int dm_pool_release_metadata_snap(struct dm_pool_m/
dm_pool_reserve_metadata_snap	dm-thin-metadata.c	/^int dm_pool_reserve_metadata_snap(struct dm_pool_m/
dm_pool_resize_data_dev	dm-thin-metadata.c	/^int dm_pool_resize_data_dev(struct dm_pool_metadat/
dm_pool_resize_metadata_dev	dm-thin-metadata.c	/^int dm_pool_resize_metadata_dev(struct dm_pool_met/
dm_pool_set_metadata_transaction_id	dm-thin-metadata.c	/^int dm_pool_set_metadata_transaction_id(struct dm_/
dm_prep_fn	dm.c	/^static int dm_prep_fn(struct request_queue *q, str/
dm_put	dm.c	/^void dm_put(struct mapped_device *md)$/
dm_put_device	dm-table.c	/^void dm_put_device(struct dm_target *ti, struct dm/
dm_put_live_table	dm.c	/^void dm_put_live_table(struct mapped_device *md, i/
dm_put_live_table_fast	dm.c	/^static void dm_put_live_table_fast(struct mapped_d/
dm_put_path_selector	dm-path-selector.c	/^void dm_put_path_selector(struct path_selector_typ/
dm_put_table_device	dm.c	/^void dm_put_table_device(struct mapped_device *md,/
dm_put_target_type	dm-target.c	/^void dm_put_target_type(struct target_type *tt)$/
dm_ql_exit	dm-queue-length.c	/^static void __exit dm_ql_exit(void)$/
dm_ql_init	dm-queue-length.c	/^static int __init dm_ql_init(void)$/
dm_queue_flush	dm.c	/^static void dm_queue_flush(struct mapped_device *m/
dm_queue_merge_is_compulsory	dm.c	/^int dm_queue_merge_is_compulsory(struct request_qu/
dm_raid1_bio_record	dm-raid1.c	/^struct dm_raid1_bio_record {$/
dm_raid1_error	dm-raid1.c	/^enum dm_raid1_error {$/
dm_raid_exit	dm-raid.c	/^static void __exit dm_raid_exit(void)$/
dm_raid_init	dm-raid.c	/^static int __init dm_raid_init(void)$/
dm_raid_superblock	dm-raid.c	/^struct dm_raid_superblock {$/
dm_read_arg	dm-table.c	/^int dm_read_arg(struct dm_arg *arg, struct dm_arg_/
dm_read_arg_group	dm-table.c	/^int dm_read_arg_group(struct dm_arg *arg, struct d/
dm_region	dm-region-hash.c	/^struct dm_region {$/
dm_region_hash	dm-region-hash.c	/^struct dm_region_hash {$/
dm_region_hash_create	dm-region-hash.c	/^struct dm_region_hash *dm_region_hash_create($/
dm_region_hash_destroy	dm-region-hash.c	/^void dm_region_hash_destroy(struct dm_region_hash /
dm_register_path_selector	dm-path-selector.c	/^int dm_register_path_selector(struct path_selector/
dm_register_target	dm-target.c	/^int dm_register_target(struct target_type *tt)$/
dm_remove_exception	dm-snap.c	/^static void dm_remove_exception(struct dm_exceptio/
dm_request	dm.c	/^static void dm_request(struct request_queue *q, st/
dm_request_based	dm.c	/^int dm_request_based(struct mapped_device *md)$/
dm_request_fn	dm.c	/^static void dm_request_fn(struct request_queue *q)/
dm_requeue_unmapped_request	dm.c	/^void dm_requeue_unmapped_request(struct request *c/
dm_resume	dm.c	/^int dm_resume(struct mapped_device *md)$/
dm_rh_bio_to_region	dm-region-hash.c	/^region_t dm_rh_bio_to_region(struct dm_region_hash/
dm_rh_dec	dm-region-hash.c	/^void dm_rh_dec(struct dm_region_hash *rh, region_t/
dm_rh_delay	dm-region-hash.c	/^void dm_rh_delay(struct dm_region_hash *rh, struct/
dm_rh_dirty_log	dm-region-hash.c	/^struct dm_dirty_log *dm_rh_dirty_log(struct dm_reg/
dm_rh_flush	dm-region-hash.c	/^int dm_rh_flush(struct dm_region_hash *rh)$/
dm_rh_get_region_key	dm-region-hash.c	/^region_t dm_rh_get_region_key(struct dm_region *re/
dm_rh_get_region_size	dm-region-hash.c	/^sector_t dm_rh_get_region_size(struct dm_region_ha/
dm_rh_get_state	dm-region-hash.c	/^int dm_rh_get_state(struct dm_region_hash *rh, reg/
dm_rh_inc_pending	dm-region-hash.c	/^void dm_rh_inc_pending(struct dm_region_hash *rh, /
dm_rh_mark_nosync	dm-region-hash.c	/^void dm_rh_mark_nosync(struct dm_region_hash *rh, /
dm_rh_recovery_end	dm-region-hash.c	/^void dm_rh_recovery_end(struct dm_region *reg, int/
dm_rh_recovery_in_flight	dm-region-hash.c	/^int dm_rh_recovery_in_flight(struct dm_region_hash/
dm_rh_recovery_prepare	dm-region-hash.c	/^void dm_rh_recovery_prepare(struct dm_region_hash /
dm_rh_recovery_start	dm-region-hash.c	/^struct dm_region *dm_rh_recovery_start(struct dm_r/
dm_rh_region_context	dm-region-hash.c	/^void *dm_rh_region_context(struct dm_region *reg)$/
dm_rh_region_to_sector	dm-region-hash.c	/^sector_t dm_rh_region_to_sector(struct dm_region_h/
dm_rh_sector_to_region	dm-region-hash.c	/^static region_t dm_rh_sector_to_region(struct dm_r/
dm_rh_start_recovery	dm-region-hash.c	/^void dm_rh_start_recovery(struct dm_region_hash *r/
dm_rh_stop_recovery	dm-region-hash.c	/^void dm_rh_stop_recovery(struct dm_region_hash *rh/
dm_rh_update_states	dm-region-hash.c	/^void dm_rh_update_states(struct dm_region_hash *rh/
dm_rq_bio_constructor	dm.c	/^static int dm_rq_bio_constructor(struct bio *bio, /
dm_rq_clone_bio_info	dm.c	/^struct dm_rq_clone_bio_info {$/
dm_rq_target_io	dm.c	/^struct dm_rq_target_io {$/
dm_rr_exit	dm-round-robin.c	/^static void __exit dm_rr_exit(void)$/
dm_rr_init	dm-round-robin.c	/^static int __init dm_rr_init(void)$/
dm_send_uevents	dm-uevent.c	/^void dm_send_uevents(struct list_head *events, str/
dm_set_device_limits	dm-table.c	/^static int dm_set_device_limits(struct dm_target */
dm_set_geometry	dm.c	/^int dm_set_geometry(struct mapped_device *md, stru/
dm_set_md_type	dm.c	/^void dm_set_md_type(struct mapped_device *md, unsi/
dm_set_mdptr	dm.c	/^void dm_set_mdptr(struct mapped_device *md, void */
dm_set_target_max_io_len	dm.c	/^int dm_set_target_max_io_len(struct dm_target *ti,/
dm_setup_md_queue	dm.c	/^int dm_setup_md_queue(struct mapped_device *md)$/
dm_shift_arg	dm-table.c	/^const char *dm_shift_arg(struct dm_arg_set *as)$/
dm_snap_cow	dm-snap.c	/^struct dm_dev *dm_snap_cow(struct dm_snapshot *s)$/
dm_snap_origin	dm-snap.c	/^struct dm_dev *dm_snap_origin(struct dm_snapshot */
dm_snap_pending_exception	dm-snap.c	/^struct dm_snap_pending_exception {$/
dm_snap_tracked_chunk	dm-snap.c	/^struct dm_snap_tracked_chunk {$/
dm_snapshot	dm-snap.c	/^struct dm_snapshot {$/
dm_snapshot_exit	dm-snap.c	/^static void __exit dm_snapshot_exit(void)$/
dm_snapshot_init	dm-snap.c	/^static int __init dm_snapshot_init(void)$/
dm_softirq_done	dm.c	/^static void dm_softirq_done(struct request *rq)$/
dm_split_args	dm-table.c	/^int dm_split_args(int *argc, char ***argvp, char */
dm_st_exit	dm-service-time.c	/^static void __exit dm_st_exit(void)$/
dm_st_init	dm-service-time.c	/^static int __init dm_st_init(void)$/
dm_start_request	dm.c	/^static struct request *dm_start_request(struct map/
dm_stat	dm-stats.c	/^struct dm_stat {$/
dm_stat_for_entry	dm-stats.c	/^static void dm_stat_for_entry(struct dm_stat *s, s/
dm_stat_free	dm-stats.c	/^static void dm_stat_free(struct rcu_head *head)$/
dm_stat_in_flight	dm-stats.c	/^static int dm_stat_in_flight(struct dm_stat_shared/
dm_stat_percpu	dm-stats.c	/^struct dm_stat_percpu {$/
dm_stat_round	dm-stats.c	/^static void dm_stat_round(struct dm_stat_shared *s/
dm_stat_shared	dm-stats.c	/^struct dm_stat_shared {$/
dm_statistics_exit	dm-stats.c	/^void dm_statistics_exit(void)$/
dm_statistics_init	dm-stats.c	/^int __init dm_statistics_init(void)$/
dm_stats	dm-stats.h	/^struct dm_stats {$/
dm_stats_account_io	dm-stats.c	/^void dm_stats_account_io(struct dm_stats *stats, u/
dm_stats_aux	dm-stats.h	/^struct dm_stats_aux {$/
dm_stats_cleanup	dm-stats.c	/^void dm_stats_cleanup(struct dm_stats *stats)$/
dm_stats_clear	dm-stats.c	/^static int dm_stats_clear(struct dm_stats *stats, /
dm_stats_create	dm-stats.c	/^static int dm_stats_create(struct dm_stats *stats,/
dm_stats_delete	dm-stats.c	/^static int dm_stats_delete(struct dm_stats *stats,/
dm_stats_init	dm-stats.c	/^void dm_stats_init(struct dm_stats *stats)$/
dm_stats_last_position	dm-stats.c	/^struct dm_stats_last_position {$/
dm_stats_list	dm-stats.c	/^static int dm_stats_list(struct dm_stats *stats, c/
dm_stats_message	dm-stats.c	/^int dm_stats_message(struct mapped_device *md, uns/
dm_stats_print	dm-stats.c	/^static int dm_stats_print(struct dm_stats *stats, /
dm_stats_set_aux	dm-stats.c	/^static int dm_stats_set_aux(struct dm_stats *stats/
dm_stats_used	dm-stats.h	/^static inline bool dm_stats_used(struct dm_stats */
dm_stripe_exit	dm-stripe.c	/^void dm_stripe_exit(void)$/
dm_stripe_init	dm-stripe.c	/^int __init dm_stripe_init(void)$/
dm_suspend	dm.c	/^int dm_suspend(struct mapped_device *md, unsigned /
dm_suspended	dm.c	/^int dm_suspended(struct dm_target *ti)$/
dm_suspended_md	dm.c	/^int dm_suspended_md(struct mapped_device *md)$/
dm_swap_table	dm.c	/^struct dm_table *dm_swap_table(struct mapped_devic/
dm_switch_exit	dm-switch.c	/^static void __exit dm_switch_exit(void)$/
dm_switch_init	dm-switch.c	/^static int __init dm_switch_init(void)$/
dm_sync_table	dm.c	/^void dm_sync_table(struct mapped_device *md)$/
dm_sysfs_attr	dm-sysfs.c	/^struct dm_sysfs_attr {$/
dm_sysfs_exit	dm-sysfs.c	/^void dm_sysfs_exit(struct mapped_device *md)$/
dm_sysfs_init	dm-sysfs.c	/^int dm_sysfs_init(struct mapped_device *md)$/
dm_table	dm-ioctl.c	/^struct dm_table {$/
dm_table_add_target	dm-table.c	/^int dm_table_add_target(struct dm_table *t, const /
dm_table_add_target_callbacks	dm-table.c	/^void dm_table_add_target_callbacks(struct dm_table/
dm_table_all_devices_attribute	dm-table.c	/^static bool dm_table_all_devices_attribute(struct /
dm_table_alloc_md_mempools	dm-table.c	/^static int dm_table_alloc_md_mempools(struct dm_ta/
dm_table_any_busy_target	dm-table.c	/^int dm_table_any_busy_target(struct dm_table *t)$/
dm_table_any_congested	dm-table.c	/^int dm_table_any_congested(struct dm_table *t, int/
dm_table_build_index	dm-table.c	/^static int dm_table_build_index(struct dm_table *t/
dm_table_complete	dm-table.c	/^int dm_table_complete(struct dm_table *t)$/
dm_table_create	dm-table.c	/^int dm_table_create(struct dm_table **result, fmod/
dm_table_destroy	dm-table.c	/^void dm_table_destroy(struct dm_table *t)$/
dm_table_discard_zeroes_data	dm-table.c	/^static bool dm_table_discard_zeroes_data(struct dm/
dm_table_event	dm-table.c	/^void dm_table_event(struct dm_table *t)$/
dm_table_event_callback	dm-table.c	/^void dm_table_event_callback(struct dm_table *t,$/
dm_table_find_target	dm-table.c	/^struct dm_target *dm_table_find_target(struct dm_t/
dm_table_free_md_mempools	dm-table.c	/^void dm_table_free_md_mempools(struct dm_table *t)/
dm_table_get_devices	dm-table.c	/^struct list_head *dm_table_get_devices(struct dm_t/
dm_table_get_immutable_target_type	dm-table.c	/^struct target_type *dm_table_get_immutable_target_/
dm_table_get_integrity_disk	dm-table.c	/^static struct gendisk * dm_table_get_integrity_dis/
dm_table_get_md	dm-table.c	/^struct mapped_device *dm_table_get_md(struct dm_ta/
dm_table_get_md_mempools	dm-table.c	/^struct dm_md_mempools *dm_table_get_md_mempools(st/
dm_table_get_mode	dm-table.c	/^fmode_t dm_table_get_mode(struct dm_table *t)$/
dm_table_get_num_targets	dm-table.c	/^unsigned int dm_table_get_num_targets(struct dm_ta/
dm_table_get_size	dm-table.c	/^sector_t dm_table_get_size(struct dm_table *t)$/
dm_table_get_target	dm-table.c	/^struct dm_target *dm_table_get_target(struct dm_ta/
dm_table_get_type	dm-table.c	/^unsigned dm_table_get_type(struct dm_table *t)$/
dm_table_has_no_data_devices	dm-table.c	/^bool dm_table_has_no_data_devices(struct dm_table /
dm_table_merge_is_optional	dm.c	/^static int dm_table_merge_is_optional(struct dm_ta/
dm_table_postsuspend_targets	dm-table.c	/^void dm_table_postsuspend_targets(struct dm_table /
dm_table_prealloc_integrity	dm-table.c	/^static int dm_table_prealloc_integrity(struct dm_t/
dm_table_presuspend_targets	dm-table.c	/^void dm_table_presuspend_targets(struct dm_table */
dm_table_request_based	dm-table.c	/^bool dm_table_request_based(struct dm_table *t)$/
dm_table_resume_targets	dm-table.c	/^int dm_table_resume_targets(struct dm_table *t)$/
dm_table_run_md_queue_async	dm-table.c	/^void dm_table_run_md_queue_async(struct dm_table */
dm_table_set_integrity	dm-table.c	/^static void dm_table_set_integrity(struct dm_table/
dm_table_set_restrictions	dm-table.c	/^void dm_table_set_restrictions(struct dm_table *t,/
dm_table_set_type	dm-table.c	/^static int dm_table_set_type(struct dm_table *t)$/
dm_table_supports_discards	dm-table.c	/^static bool dm_table_supports_discards(struct dm_t/
dm_table_supports_flush	dm-table.c	/^static bool dm_table_supports_flush(struct dm_tabl/
dm_table_supports_write_same	dm-table.c	/^static bool dm_table_supports_write_same(struct dm/
dm_target_bio_based	dm.h	/^#define dm_target_bio_based(t) ((t)->type->map != /
dm_target_exit	dm-target.c	/^void dm_target_exit(void)$/
dm_target_hybrid	dm.h	/^#define dm_target_hybrid(t) (dm_target_bio_based(t/
dm_target_init	dm-target.c	/^int __init dm_target_init(void)$/
dm_target_is_snapshot_merge	dm-snap.c	/^#define dm_target_is_snapshot_merge(ti) \\$/
dm_target_is_valid	dm.h	/^#define dm_target_is_valid(t) ((t)->table)$/
dm_target_iterate	dm-target.c	/^int dm_target_iterate(void (*iter_func)(struct tar/
dm_target_request_based	dm.h	/^#define dm_target_request_based(t) ((t)->type->map/
dm_test_deferred_remove_flag	dm.c	/^int dm_test_deferred_remove_flag(struct mapped_dev/
dm_thin_aborted_changes	dm-thin-metadata.c	/^bool dm_thin_aborted_changes(struct dm_thin_device/
dm_thin_changed_this_transaction	dm-thin-metadata.c	/^bool dm_thin_changed_this_transaction(struct dm_th/
dm_thin_dev_id	dm-thin-metadata.c	/^dm_thin_id dm_thin_dev_id(struct dm_thin_device *t/
dm_thin_device	dm-thin-metadata.c	/^struct dm_thin_device {$/
dm_thin_endio_hook	dm-thin.c	/^struct dm_thin_endio_hook {$/
dm_thin_exit	dm-thin.c	/^static void dm_thin_exit(void)$/
dm_thin_find_block	dm-thin-metadata.c	/^int dm_thin_find_block(struct dm_thin_device *td, /
dm_thin_get_highest_mapped_block	dm-thin-metadata.c	/^int dm_thin_get_highest_mapped_block(struct dm_thi/
dm_thin_get_mapped_count	dm-thin-metadata.c	/^int dm_thin_get_mapped_count(struct dm_thin_device/
dm_thin_id	dm-thin-metadata.h	/^typedef uint64_t dm_thin_id;$/
dm_thin_init	dm-thin.c	/^static int __init dm_thin_init(void)$/
dm_thin_insert_block	dm-thin-metadata.c	/^int dm_thin_insert_block(struct dm_thin_device *td/
dm_thin_lookup_result	dm-thin-metadata.h	/^struct dm_thin_lookup_result {$/
dm_thin_new_mapping	dm-thin.c	/^struct dm_thin_new_mapping {$/
dm_thin_pool_table	dm-thin.c	/^static struct dm_thin_pool_table {$/
dm_thin_remove_block	dm-thin-metadata.c	/^int dm_thin_remove_block(struct dm_thin_device *td/
dm_transient_snapshot_exit	dm-snap-transient.c	/^void dm_transient_snapshot_exit(void)$/
dm_transient_snapshot_init	dm-snap-transient.c	/^int dm_transient_snapshot_init(void)$/
dm_uevent	dm-uevent.c	/^struct dm_uevent {$/
dm_uevent_add	dm.c	/^void dm_uevent_add(struct mapped_device *md, struc/
dm_uevent_alloc	dm-uevent.c	/^static struct dm_uevent *dm_uevent_alloc(struct ma/
dm_uevent_exit	dm-uevent.c	/^void dm_uevent_exit(void)$/
dm_uevent_free	dm-uevent.c	/^static void dm_uevent_free(struct dm_uevent *event/
dm_uevent_init	dm-uevent.c	/^int dm_uevent_init(void)$/
dm_uevent_type	dm-uevent.h	/^enum dm_uevent_type {$/
dm_ulog_sendto_server	dm-log-userspace-transfer.c	/^static int dm_ulog_sendto_server(struct dm_ulog_re/
dm_ulog_tfr_exit	dm-log-userspace-transfer.c	/^void dm_ulog_tfr_exit(void)$/
dm_ulog_tfr_init	dm-log-userspace-transfer.c	/^int dm_ulog_tfr_init(void)$/
dm_underlying_device_busy	dm.c	/^int dm_underlying_device_busy(struct request_queue/
dm_unhook_bio	dm-cache-target.c	/^static void dm_unhook_bio(struct dm_hook_info *h, /
dm_unlock_md_type	dm.c	/^void dm_unlock_md_type(struct mapped_device *md)$/
dm_unprep_request	dm.c	/^static void dm_unprep_request(struct request *rq)$/
dm_unregister_path_selector	dm-path-selector.c	/^int dm_unregister_path_selector(struct path_select/
dm_unregister_target	dm-target.c	/^void dm_unregister_target(struct target_type *tt)$/
dm_vcalloc	dm-table.c	/^void *dm_vcalloc(unsigned long nmemb, unsigned lon/
dm_verity	dm-verity.c	/^struct dm_verity {$/
dm_verity_exit	dm-verity.c	/^static void __exit dm_verity_exit(void)$/
dm_verity_init	dm-verity.c	/^static int __init dm_verity_init(void)$/
dm_verity_io	dm-verity.c	/^struct dm_verity_io {$/
dm_verity_prefetch_work	dm-verity.c	/^struct dm_verity_prefetch_work {$/
dm_wait_event	dm.c	/^int dm_wait_event(struct mapped_device *md, int ev/
dm_wait_for_completion	dm.c	/^static int dm_wait_for_completion(struct mapped_de/
dm_wq_work	dm.c	/^static void dm_wq_work(struct work_struct *work)$/
dm_zero_exit	dm-zero.c	/^static void __exit dm_zero_exit(void)$/
dm_zero_init	dm-zero.c	/^static int __init dm_zero_init(void)$/
dmio_complete	dm-bufio.c	/^static void dmio_complete(unsigned long error, voi/
dmreq_of_req	dm-crypt.c	/^static struct dm_crypt_request *dmreq_of_req(struc/
do_deferred_remove	dm.c	/^static void do_deferred_remove(struct work_struct /
do_end_io	dm-mpath.c	/^static int do_end_io(struct multipath *m, struct r/
do_failures	dm-raid1.c	/^static void do_failures(struct mirror_set *ms, str/
do_flush	dm-log-userspace-base.c	/^static void do_flush(struct work_struct *work)$/
do_md_run	md.c	/^static int do_md_run(struct mddev *mddev)$/
do_md_stop	md.c	/^static int do_md_stop(struct mddev * mddev, int mo/
do_metadata	dm-snap-persistent.c	/^static void do_metadata(struct work_struct *work)$/
do_mirror	dm-raid1.c	/^static void do_mirror(struct work_struct *work)$/
do_no_space_timeout	dm-thin.c	/^static void do_no_space_timeout(struct work_struct/
do_noflush_start	dm-thin.c	/^static void do_noflush_start(struct work_struct *w/
do_noflush_stop	dm-thin.c	/^static void do_noflush_stop(struct work_struct *ws/
do_origin	dm-snap.c	/^static int do_origin(struct dm_dev *origin, struct/
do_reads	dm-raid1.c	/^static void do_reads(struct mirror_set *ms, struct/
do_recovery	dm-raid1.c	/^static void do_recovery(struct mirror_set *ms)$/
do_region	dm-io.c	/^static void do_region(int rw, unsigned region, str/
do_release_stripe	raid5.c	/^static void do_release_stripe(struct r5conf *conf,/
do_resume	dm-ioctl.c	/^static int do_resume(struct dm_ioctl *param)$/
do_suspend	dm-ioctl.c	/^static int do_suspend(struct dm_ioctl *param)$/
do_table_event	dm-raid.c	/^static void do_table_event(struct work_struct *ws)/
do_waker	dm-cache-target.c	/^static void do_waker(struct work_struct *ws)$/
do_work	dm-era-target.c	/^static void do_work(struct work_struct *ws)$/
do_worker	dm-cache-target.c	/^static void do_worker(struct work_struct *ws)$/
do_write	dm-raid1.c	/^static void do_write(struct mirror_set *ms, struct/
do_writes	dm-raid1.c	/^static void do_writes(struct mirror_set *ms, struc/
dp_init	dm-io.c	/^static int dp_init(struct dm_io_request *io_req, s/
dpages	dm-io.c	/^struct dpages {$/
drop_buffers	dm-bufio.c	/^static void drop_buffers(struct dm_bufio_client *c/
drop_one_stripe	raid5.c	/^static int drop_one_stripe(struct r5conf *conf, in/
drop_pages	dm-kcopyd.c	/^static void drop_pages(struct page_list *pl)$/
ds_next	dm-bio-prison.c	/^static unsigned ds_next(unsigned index)$/
dump_zones	raid0.c	/^static void dump_zones(struct mddev *mddev)$/
emit_flags	dm-thin.c	/^static void emit_flags(struct pool_features *pf, c/
end_bitmap_write	bitmap.c	/^static void end_bitmap_write(struct buffer_head *b/
end_clone_bio	dm.c	/^static void end_clone_bio(struct bio *clone, int e/
end_clone_request	dm.c	/^static void end_clone_request(struct request *clon/
end_io_acct	dm.c	/^static void end_io_acct(struct dm_io *io)$/
end_reshape	raid10.c	/^static void end_reshape(struct r10conf *conf)$/
end_reshape_request	raid10.c	/^static void end_reshape_request(struct r10bio *r10/
end_reshape_write	raid10.c	/^static void end_reshape_write(struct bio *bio, int/
end_sync_read	raid1.c	/^static void end_sync_read(struct bio *bio, int err/
end_sync_request	raid10.c	/^static void end_sync_request(struct r10bio *r10_bi/
end_sync_write	raid1.c	/^static void end_sync_write(struct bio *bio, int er/
endio	dm-io.c	/^static void endio(struct bio *bio, int error)$/
enough	raid10.c	/^static int enough(struct r10conf *conf, int ignore/
ensure_next_mapping	dm-thin.c	/^static int ensure_next_mapping(struct pool *pool)$/
entry	dm-cache-policy-mq.c	/^struct entry {$/
entry_pool	dm-cache-policy-mq.c	/^struct entry_pool {$/
epool_empty	dm-cache-policy-mq.c	/^static bool epool_empty(struct entry_pool *ep)$/
epool_exit	dm-cache-policy-mq.c	/^static void epool_exit(struct entry_pool *ep)$/
epool_find	dm-cache-policy-mq.c	/^static struct entry *epool_find(struct entry_pool /
epool_init	dm-cache-policy-mq.c	/^static int epool_init(struct entry_pool *ep, unsig/
era	dm-era-target.c	/^struct era {$/
era_ctr	dm-era-target.c	/^static int era_ctr(struct dm_target *ti, unsigned /
era_destroy	dm-era-target.c	/^static void era_destroy(struct era *era)$/
era_dtr	dm-era-target.c	/^static void era_dtr(struct dm_target *ti)$/
era_io_hints	dm-era-target.c	/^static void era_io_hints(struct dm_target *ti, str/
era_is_congested	dm-era-target.c	/^static int era_is_congested(struct dm_target_callb/
era_iterate_devices	dm-era-target.c	/^static int era_iterate_devices(struct dm_target *t/
era_map	dm-era-target.c	/^static int era_map(struct dm_target *ti, struct bi/
era_merge	dm-era-target.c	/^static int era_merge(struct dm_target *ti, struct /
era_message	dm-era-target.c	/^static int era_message(struct dm_target *ti, unsig/
era_metadata	dm-era-target.c	/^struct era_metadata {$/
era_postsuspend	dm-era-target.c	/^static void era_postsuspend(struct dm_target *ti)$/
era_preresume	dm-era-target.c	/^static int era_preresume(struct dm_target *ti)$/
era_status	dm-era-target.c	/^static void era_status(struct dm_target *ti, statu/
error	raid1.c	/^static void error(struct mddev *mddev, struct md_r/
error_bios	dm-snap.c	/^static void error_bios(struct bio *bio)$/
error_retry_list	dm-thin.c	/^static void error_retry_list(struct pool *pool)$/
error_thin_retry_list	dm-thin.c	/^static void error_thin_retry_list(struct thin_c *t/
errors_handled	dm-raid1.c	/^#define errors_handled(p)	((p)->features & DM_RAID/
errors_show	md.c	/^errors_show(struct md_rdev *rdev, char *page)$/
errors_store	md.c	/^errors_store(struct md_rdev *rdev, const char *buf/
event_callback	dm.c	/^static void event_callback(void *context)$/
exception_hash	dm-snap.c	/^static uint32_t exception_hash(struct dm_exception/
exit_meta_cowbtree	dm-dedup-cbt.c	/^static void exit_meta_cowbtree(struct metadata *md/
exit_meta_inram	dm-dedup-ram.c	/^static void exit_meta_inram(struct metadata *md)$/
exit_origin_hash	dm-snap.c	/^static void exit_origin_hash(void)$/
export_array	md.c	/^static void export_array(struct mddev *mddev)$/
export_rdev	md.c	/^static void export_rdev(struct md_rdev * rdev)$/
fail_log_device	dm-log.c	/^static void fail_log_device(struct log_c *lc)$/
fail_mirror	dm-raid1.c	/^static void fail_mirror(struct mirror *m, enum dm_/
fail_path	dm-mpath.c	/^static int fail_path(struct pgpath *pgpath)$/
faulty_conf	faulty.c	/^struct faulty_conf {$/
faulty_fail	faulty.c	/^static void faulty_fail(struct bio *bio, int error/
faulty_size	faulty.c	/^static sector_t faulty_size(struct mddev *mddev, s/
feature_flag_bits	dm-flakey.c	/^enum feature_flag_bits {$/
fetch_block	raid5.c	/^static int fetch_block(struct stripe_head *sh, str/
fetch_whole_block	dm-dedup-rw.c	/^static int fetch_whole_block(struct dedup_config */
file_page_index	bitmap.c	/^static inline unsigned long file_page_index(struct/
file_page_offset	bitmap.c	/^static inline unsigned long file_page_offset(struc/
filemap_get_page	bitmap.c	/^static inline struct page *filemap_get_page(struct/
fill_pkg	dm-log-userspace-transfer.c	/^static int fill_pkg(struct cn_msg *msg, struct dm_/
find_bio_disk	raid1.c	/^static int find_bio_disk(struct r1bio *r1_bio, str/
find_device	dm-ioctl.c	/^static struct mapped_device *find_device(struct dm/
find_pers	md.c	/^static struct md_personality *find_pers(int level,/
find_rdev	md.c	/^static struct md_rdev *find_rdev(struct mddev *mdd/
find_rdev_nr	md.c	/^static struct md_rdev * find_rdev_nr(struct mddev /
find_rdev_nr_rcu	md.c	/^static struct md_rdev *find_rdev_nr_rcu(struct mdd/
find_rdev_rcu	md.c	/^static struct md_rdev *find_rdev_rcu(struct mddev /
find_table_device	dm.c	/^static struct table_device *find_table_device(stru/
find_zone	raid0.c	/^static struct strip_zone *find_zone(struct r0conf /
first_dev_address	raid10.c	/^static sector_t first_dev_address(sector_t s, stru/
fix_read_error	raid1.c	/^static void fix_read_error(struct r1conf *conf, in/
fix_recovery_read_error	raid10.c	/^static void fix_recovery_read_error(struct r10bio /
fix_sync_read_error	raid1.c	/^static int fix_sync_read_error(struct r1bio *r1_bi/
flag_bits	md.h	/^enum flag_bits {$/
flags	dm-crypt.c	/^enum flags { DM_CRYPT_SUSPENDED, DM_CRYPT_KEY_VALI/
flakey_c	dm-flakey.c	/^struct flakey_c {$/
flakey_ctr	dm-flakey.c	/^static int flakey_ctr(struct dm_target *ti, unsign/
flakey_dtr	dm-flakey.c	/^static void flakey_dtr(struct dm_target *ti)$/
flakey_end_io	dm-flakey.c	/^static int flakey_end_io(struct dm_target *ti, str/
flakey_ioctl	dm-flakey.c	/^static int flakey_ioctl(struct dm_target *ti, unsi/
flakey_iterate_devices	dm-flakey.c	/^static int flakey_iterate_devices(struct dm_target/
flakey_map	dm-flakey.c	/^static int flakey_map(struct dm_target *ti, struct/
flakey_map_bio	dm-flakey.c	/^static void flakey_map_bio(struct dm_target *ti, s/
flakey_map_sector	dm-flakey.c	/^static sector_t flakey_map_sector(struct dm_target/
flakey_merge	dm-flakey.c	/^static int flakey_merge(struct dm_target *ti, stru/
flakey_status	dm-flakey.c	/^static void flakey_status(struct dm_target *ti, st/
flush_bios	dm-delay.c	/^static void flush_bios(struct bio *bio)$/
flush_by_group	dm-log-userspace-base.c	/^static int flush_by_group(struct log_c *lc, struct/
flush_delayed_bios	dm-delay.c	/^static struct bio *flush_delayed_bios(struct delay/
flush_entry	dm-log-userspace-base.c	/^struct flush_entry {$/
flush_entry_alloc	dm-log-userspace-base.c	/^static void *flush_entry_alloc(gfp_t gfp_mask, voi/
flush_entry_free	dm-log-userspace-base.c	/^static void flush_entry_free(void *element, void */
flush_expired_bios	dm-delay.c	/^static void flush_expired_bios(struct work_struct /
flush_header	dm-log.c	/^static int flush_header(struct log_c *lc)$/
flush_meta_cowbtree	dm-dedup-cbt.c	/^static int flush_meta_cowbtree(struct metadata *md/
flush_meta_inram	dm-dedup-ram.c	/^static int flush_meta_inram(struct metadata *md)$/
flush_multipath_work	dm-mpath.c	/^static void flush_multipath_work(struct multipath /
flush_one_by_one	dm-log-userspace-base.c	/^static int flush_one_by_one(struct log_c *lc, stru/
flush_pending_writes	raid1.c	/^static void flush_pending_writes(struct r1conf *co/
for_each_mddev	md.c	/^#define for_each_mddev(_mddev,_tmp)					\\$/
format_metadata	dm-era-target.c	/^static int format_metadata(struct era_metadata *md/
free_area	dm-snap-persistent.c	/^static void free_area(struct pstore *ps)$/
free_bitset	dm-cache-target.c	/^static void free_bitset(unsigned long *bits)$/
free_buffer	dm-bufio.c	/^static void free_buffer(struct dm_buffer *b)$/
free_buffer_data	dm-bufio.c	/^static void free_buffer_data(struct dm_bufio_clien/
free_buffers	bitmap.c	/^static void free_buffers(struct page *page)$/
free_cache_blocks_and_hash	dm-cache-policy-cleaner.c	/^static void free_cache_blocks_and_hash(struct poli/
free_cell	dm-ioctl.c	/^static void free_cell(struct hash_cell *hc)$/
free_completed_exception	dm-snap.c	/^static void free_completed_exception(struct dm_exc/
free_conf	raid5.c	/^static void free_conf(struct r5conf *conf)$/
free_context	dm-raid1.c	/^static void free_context(struct mirror_set *ms, st/
free_dev	dm.c	/^static void free_dev(struct mapped_device *md)$/
free_devices	dm-table.c	/^static void free_devices(struct list_head *devices/
free_entry	dm-cache-policy-mq.c	/^static void free_entry(struct entry_pool *ep, stru/
free_hash	dm-cache-policy-cleaner.c	/^static void free_hash(struct hash *hash)$/
free_io	dm.c	/^static void free_io(struct mapped_device *md, stru/
free_migration	dm-cache-target.c	/^static void free_migration(struct dm_cache_migrati/
free_minor	dm.c	/^static void free_minor(int minor)$/
free_multipath	dm-mpath.c	/^static void free_multipath(struct multipath *m)$/
free_params	dm-ioctl.c	/^static void free_params(struct dm_ioctl *param, si/
free_paths	dm-round-robin.c	/^static void free_paths(struct list_head *paths)$/
free_pending_exception	dm-snap.c	/^static void free_pending_exception(struct dm_snap_/
free_pgpath	dm-mpath.c	/^static void free_pgpath(struct pgpath *pgpath)$/
free_pgpaths	dm-mpath.c	/^static void free_pgpaths(struct list_head *pgpaths/
free_pl	dm-kcopyd.c	/^static void free_pl(struct page_list *pl)$/
free_priority_group	dm-mpath.c	/^static void free_priority_group(struct priority_gr/
free_prison_cell	dm-cache-target.c	/^static void free_prison_cell(struct cache *cache, /
free_r10bio	raid10.c	/^static void free_r10bio(struct r10bio *r10_bio)$/
free_r1bio	raid1.c	/^static void free_r1bio(struct r1bio *r1_bio)$/
free_rq_clone	dm.c	/^static void free_rq_clone(struct request *clone)$/
free_rq_tio	dm.c	/^static void free_rq_tio(struct dm_rq_target_io *ti/
free_scratch_buffer	raid5.c	/^static void free_scratch_buffer(struct r5conf *con/
free_shared_memory	dm-stats.c	/^static void free_shared_memory(size_t alloc_size)$/
free_table_devices	dm.c	/^static void free_table_devices(struct list_head *d/
free_thread_groups	raid5.c	/^static void free_thread_groups(struct r5conf *conf/
free_tio	dm.c	/^static void free_tio(struct mapped_device *md, str/
freeze_array	raid1.c	/^static void freeze_array(struct r1conf *conf, int /
from_cblock	dm-cache-block-types.h	/^static inline uint32_t from_cblock(dm_cblock_t b)$/
from_oblock	dm-cache-block-types.h	/^static inline dm_block_t from_oblock(dm_oblock_t b/
full_bio_end_io	dm-snap.c	/^static void full_bio_end_io(struct bio *bio, int e/
geo_type	raid10.c	/^enum geo_type {geo_new, geo_old, geo_start};$/
geom	raid10.h	/^	struct geom {$/
get_active_stripe	raid5.c	/^get_active_stripe(struct r5conf *conf, sector_t se/
get_array_info	md.c	/^static int get_array_info(struct mddev * mddev, vo/
get_bio_block	dm-cache-target.c	/^static dm_oblock_t get_bio_block(struct cache *cac/
get_bitmap_file	md.c	/^static int get_bitmap_file(struct mddev * mddev, v/
get_block	dm-era-target.c	/^static dm_block_t get_block(struct era *era, struc/
get_bucket	dm-bio-prison.c	/^static struct bucket *get_bucket(struct dm_bio_pri/
get_cache_dev_size	dm-cache-target.c	/^static dm_cblock_t get_cache_dev_size(struct cache/
get_cell	dm-cache-target.c	/^static int get_cell(struct cache *cache,$/
get_child	dm-table.c	/^static inline unsigned int get_child(unsigned int /
get_default_mirror	dm-raid1.c	/^static struct mirror *get_default_mirror(struct mi/
get_dev_size	dm-cache-target.c	/^static sector_t get_dev_size(struct dm_dev *dev)$/
get_disk_info	md.c	/^static int get_disk_info(struct mddev * mddev, voi/
get_exception	dm-snap-persistent.c	/^static struct disk_exception *get_exception(struct/
get_first_thin	dm-thin.c	/^static struct thin_c *get_first_thin(struct pool */
get_free_stripe	raid5.c	/^static struct stripe_head *get_free_stripe(struct /
get_hash_digestsize	dm-dedup-hash.c	/^unsigned int get_hash_digestsize(struct hash_desc_/
get_info	dm-snap-persistent.c	/^static struct pstore *get_info(struct dm_exception/
get_metadata_dev_size	dm-thin.c	/^static sector_t get_metadata_dev_size(struct block/
get_metadata_dev_size_in_blocks	dm-thin.c	/^static dm_block_t get_metadata_dev_size_in_blocks(/
get_mirror	dm-raid1.c	/^static int get_mirror(struct mirror_set *ms, struc/
get_mode	dm-ioctl.c	/^static inline fmode_t get_mode(struct dm_ioctl *pa/
get_next_dirty_entry	dm-cache-policy-cleaner.c	/^static struct wb_cache_entry *get_next_dirty_entry/
get_next_mapping	dm-thin.c	/^static struct dm_thin_new_mapping *get_next_mappin/
get_next_slot	dm-dedup-hash.c	/^static int get_next_slot(struct hash_desc_table *d/
get_next_thin	dm-thin.c	/^static struct thin_c *get_next_thin(struct pool *p/
get_node	dm-table.c	/^static inline sector_t *get_node(struct dm_table */
get_num_discard_bios	dm.c	/^static unsigned get_num_discard_bios(struct dm_tar/
get_num_write_same_bios	dm.c	/^static unsigned get_num_write_same_bios(struct dm_/
get_origin_minimum_chunksize	dm-snap.c	/^static uint32_t get_origin_minimum_chunksize(struc/
get_path_selector	dm-path-selector.c	/^static struct ps_internal *get_path_selector(const/
get_per_bio_data	dm-cache-target.c	/^static struct per_bio_data *get_per_bio_data(struc/
get_per_bio_data_size	dm-cache-target.c	/^static size_t get_per_bio_data_size(struct cache */
get_policy	dm-cache-policy.c	/^static struct dm_cache_policy_type *get_policy(con/
get_policy_once	dm-cache-policy.c	/^static struct dm_cache_policy_type *get_policy_onc/
get_pool_mode	dm-thin.c	/^static enum pool_mode get_pool_mode(struct pool *p/
get_raid_type	dm-raid.c	/^static struct raid_type *get_raid_type(char *name)/
get_refcount_cowbtree	dm-dedup-cbt.c	/^static int get_refcount_cowbtree(struct metadata */
get_refcount_inram	dm-dedup-ram.c	/^static int get_refcount_inram(struct metadata *md,/
get_result_buffer	dm-ioctl.c	/^static void *get_result_buffer(struct dm_ioctl *pa/
get_stripe	dm-stripe.c	/^static int get_stripe(struct dm_target *ti, struct/
get_target_type	dm-target.c	/^static struct target_type *get_target_type(const c/
get_type	dm-exception-store.c	/^static struct dm_exception_store_type *get_type(co/
get_valid_mirror	dm-raid1.c	/^static struct mirror *get_valid_mirror(struct mirr/
get_version	md.c	/^static int get_version(void __user * arg)$/
grow_buffers	raid5.c	/^static int grow_buffers(struct stripe_head *sh)$/
grow_one_stripe	raid5.c	/^static int grow_one_stripe(struct r5conf *conf, in/
grow_stripes	raid5.c	/^static int grow_stripes(struct r5conf *conf, int n/
handle_active_stripes	raid5.c	/^static int handle_active_stripes(struct r5conf *co/
handle_delayed_timer	dm-delay.c	/^static void handle_delayed_timer(unsigned long dat/
handle_failed_stripe	raid5.c	/^handle_failed_stripe(struct r5conf *conf, struct s/
handle_failed_sync	raid5.c	/^handle_failed_sync(struct r5conf *conf, struct str/
handle_parity_checks5	raid5.c	/^static void handle_parity_checks5(struct r5conf *c/
handle_parity_checks6	raid5.c	/^static void handle_parity_checks6(struct r5conf *c/
handle_read_error	raid1.c	/^static void handle_read_error(struct r1conf *conf,/
handle_reshape_read_error	raid10.c	/^static int handle_reshape_read_error(struct mddev /
handle_stripe	raid5.c	/^static void handle_stripe(struct stripe_head *sh)$/
handle_stripe_clean_event	raid5.c	/^static void handle_stripe_clean_event(struct r5con/
handle_stripe_dirtying	raid5.c	/^static void handle_stripe_dirtying(struct r5conf */
handle_stripe_expansion	raid5.c	/^static void handle_stripe_expansion(struct r5conf /
handle_stripe_fill	raid5.c	/^static void handle_stripe_fill(struct stripe_head /
handle_sync_write_finished	raid1.c	/^static void handle_sync_write_finished(struct r1co/
handle_unserviceable_bio	dm-thin.c	/^static void handle_unserviceable_bio(struct pool */
handle_write_completed	raid10.c	/^static void handle_write_completed(struct r10conf /
handle_write_finished	raid1.c	/^static void handle_write_finished(struct r1conf *c/
has_failed	raid5.c	/^static int has_failed(struct r5conf *conf)$/
hash	dm-cache-policy-cleaner.c	/^struct hash {$/
hash_cell	dm-ioctl.c	/^struct hash_cell {$/
hash_desc_table	dm-dedup-hash.h	/^struct hash_desc_table {$/
hash_insert	dm-cache-policy-mq.c	/^static void hash_insert(struct mq_policy *mq, stru/
hash_key	dm-bio-prison.c	/^static uint32_t hash_key(struct dm_bio_prison *pri/
hash_lookup	dm-cache-policy-mq.c	/^static struct entry *hash_lookup(struct mq_policy /
hash_pbn_value	dm-dedup-target.h	/^struct hash_pbn_value {$/
hash_remove	dm-cache-policy-mq.c	/^static void hash_remove(struct entry *e)$/
hash_str	dm-ioctl.c	/^static unsigned int hash_str(const char *str)$/
header_from_disk	dm-log.c	/^static void header_from_disk(struct log_header_cor/
header_to_disk	dm-log.c	/^static void header_to_disk(struct log_header_core /
high	dm-table.c	/^static sector_t high(struct dm_table *t, unsigned /
hint	dm-cache-policy.h	/^			      dm_oblock_t oblock, uint32_t hint);$/
hint_valid	dm-cache-metadata.h	/^			       uint32_t hint, bool hint_valid);$/
hints_array_available	dm-cache-metadata.c	/^static bool hints_array_available(struct dm_cache_/
hints_array_initialized	dm-cache-metadata.c	/^static bool hints_array_initialized(struct dm_cach/
hold_bio	dm-raid1.c	/^static void hold_bio(struct mirror_set *ms, struct/
hot_add_disk	md.c	/^static int hot_add_disk(struct mddev * mddev, dev_/
hot_remove_disk	md.c	/^static int hot_remove_disk(struct mddev * mddev, d/
in_cache	dm-cache-policy-mq.c	/^static bool in_cache(struct mq_policy *mq, struct /
in_chunk_boundary	raid5.c	/^static int in_chunk_boundary(struct mddev *mddev, /
in_pool	dm-cache-policy-mq.c	/^static bool in_pool(struct entry_pool *ep, struct /
in_worker0	dm-era-target.c	/^static int in_worker0(struct era *era, int (*fn)(s/
in_worker1	dm-era-target.c	/^static int in_worker1(struct era *era,$/
inc_all_io_entry	dm-thin.c	/^static void inc_all_io_entry(struct pool *pool, st/
inc_and_issue	dm-cache-target.c	/^static void inc_and_issue(struct cache *cache, str/
inc_ds	dm-cache-target.c	/^static void inc_ds(struct cache *cache, struct bio/
inc_hit_counter	dm-cache-target.c	/^static void inc_hit_counter(struct cache *cache, s/
inc_miss_counter	dm-cache-target.c	/^static void inc_miss_counter(struct cache *cache, /
inc_nr_migrations	dm-cache-target.c	/^static void inc_nr_migrations(struct cache *cache)/
inc_refcount_cowbtree	dm-dedup-cbt.c	/^static int inc_refcount_cowbtree(struct metadata */
inc_refcount_inram	dm-dedup-ram.c	/^static int inc_refcount_inram(struct metadata *md,/
increment_pending_exceptions_done_count	dm-snap.c	/^static void increment_pending_exceptions_done_coun/
infer_cblock	dm-cache-policy-mq.c	/^static dm_cblock_t infer_cblock(struct entry_pool /
init_bucket	dm-bio-prison.c	/^static void init_bucket(struct bucket *b)$/
init_buckets	dm-ioctl.c	/^static void init_buckets(struct list_head *buckets/
init_features	dm-cache-target.c	/^static void init_features(struct cache_features *c/
init_hash_tables	dm-snap.c	/^static int init_hash_tables(struct dm_snapshot *s)/
init_meta_cowbtree	dm-dedup-cbt.c	/^static struct metadata *init_meta_cowbtree(void *i/
init_meta_inram	dm-dedup-ram.c	/^static struct metadata *init_meta_inram(void *init/
init_origin_hash	dm-snap.c	/^static int init_origin_hash(void)$/
init_param_cowbtree	dm-dedup-cbt.h	/^struct init_param_cowbtree {$/
init_param_inram	dm-dedup-ram.h	/^struct init_param_inram {$/
init_per_bio_data	dm-cache-target.c	/^static struct per_bio_data *init_per_bio_data(stru/
init_policy_functions	dm-cache-policy-cleaner.c	/^static void init_policy_functions(struct policy *p/
init_resync	raid1.c	/^static int init_resync(struct r1conf *conf)$/
init_stripe	raid5.c	/^static void init_stripe(struct stripe_head *sh, se/
init_tracked_chunk	dm-snap.c	/^static void init_tracked_chunk(struct bio *bio)$/
initialise_region_table	dm-switch.c	/^static void initialise_region_table(struct switch_/
insert_cache_hash_entry	dm-cache-policy-cleaner.c	/^static void insert_cache_hash_entry(struct policy /
insert_exceptions	dm-snap-persistent.c	/^static int insert_exceptions(struct pstore *ps, vo/
insert_hash	raid5.c	/^static inline void insert_hash(struct r5conf *conf/
insert_in_cache	dm-cache-policy-mq.c	/^static void insert_in_cache(struct mq_policy *mq, /
insert_in_pre_cache	dm-cache-policy-mq.c	/^static void insert_in_pre_cache(struct mq_policy */
int_log	dm-table.c	/^static unsigned int int_log(unsigned int n, unsign/
invalid_str	dm-ioctl.c	/^static int invalid_str(char *str, void *end)$/
invalidate	dm-cache-target.c	/^static void invalidate(struct cache *cache, struct/
invalidation_request	dm-cache-target.c	/^struct invalidation_request {$/
io	dm-io.c	/^struct io {$/
io_err_ctr	dm-target.c	/^static int io_err_ctr(struct dm_target *tt, unsign/
io_err_dtr	dm-target.c	/^static void io_err_dtr(struct dm_target *tt)$/
io_err_map	dm-target.c	/^static int io_err_map(struct dm_target *tt, struct/
io_err_map_rq	dm-target.c	/^static int io_err_map_rq(struct dm_target *ti, str/
io_hash_desc	dm-verity.c	/^static struct shash_desc *io_hash_desc(struct dm_v/
io_job_finish	dm-kcopyd.c	/^static void io_job_finish(struct dm_kcopyd_throttl/
io_job_start	dm-kcopyd.c	/^static void io_job_start(struct dm_kcopyd_throttle/
io_overlaps_block	dm-thin.c	/^static int io_overlaps_block(struct pool *pool, st/
io_overwrites_block	dm-thin.c	/^static int io_overwrites_block(struct pool *pool, /
io_pattern	dm-cache-policy-mq.c	/^enum io_pattern {$/
io_real_digest	dm-verity.c	/^static u8 *io_real_digest(struct dm_verity *v, str/
io_tracker	dm-cache-policy-mq.c	/^struct io_tracker {$/
io_want_digest	dm-verity.c	/^static u8 *io_want_digest(struct dm_verity *v, str/
iot_check_for_pattern_switch	dm-cache-policy-mq.c	/^static void iot_check_for_pattern_switch(struct io/
iot_examine_bio	dm-cache-policy-mq.c	/^static void iot_examine_bio(struct io_tracker *t, /
iot_init	dm-cache-policy-mq.c	/^static void iot_init(struct io_tracker *t,$/
iot_pattern	dm-cache-policy-mq.c	/^static enum io_pattern iot_pattern(struct io_track/
iot_update_stats	dm-cache-policy-mq.c	/^static void iot_update_stats(struct io_tracker *t,/
is_badblock	md.h	/^static inline int is_badblock(struct md_rdev *rdev/
is_bio_tracked	dm-snap.c	/^static bool is_bio_tracked(struct bio *bio)$/
is_congested	dm-cache-target.c	/^static int is_congested(struct dm_dev *dev, int bd/
is_deleted	dm-dedup-ram.c	/^static int is_deleted(char *ptr, int length)$/
is_dirty	dm-cache-target.c	/^static bool is_dirty(struct cache *cache, dm_cbloc/
is_discarded	dm-cache-target.c	/^static bool is_discarded(struct cache *cache, dm_o/
is_discarded_oblock	dm-cache-target.c	/^static bool is_discarded_oblock(struct cache *cach/
is_empty	dm-dedup-ram.c	/^static int is_empty(char *ptr, int length)$/
is_factor	dm-thin.c	/^static bool is_factor(sector_t block_size, uint32_/
is_io_in_chunk_boundary	raid0.c	/^static inline int is_io_in_chunk_boundary(struct m/
is_mddev_idle	md.c	/^static int is_mddev_idle(struct mddev *mddev, int /
is_quiescing	dm-cache-target.c	/^static bool is_quiescing(struct cache *cache)$/
is_split_required_for_discard	dm.c	/^static bool is_split_required_for_discard(struct d/
issue	dm-cache-target.c	/^static void issue(struct cache *cache, struct bio /
issue_copy	dm-cache-target.c	/^static void issue_copy(struct dm_cache_migration */
issue_copy_real	dm-cache-target.c	/^static void issue_copy_real(struct dm_cache_migrat/
issue_overwrite	dm-cache-target.c	/^static void issue_overwrite(struct dm_cache_migrat/
iv_benbi_private	dm-crypt.c	/^struct iv_benbi_private {$/
iv_essiv_private	dm-crypt.c	/^struct iv_essiv_private {$/
iv_lmk_private	dm-crypt.c	/^struct iv_lmk_private {$/
iv_of_dmreq	dm-crypt.c	/^static u8 *iv_of_dmreq(struct crypt_config *cc,$/
iv_tcw_private	dm-crypt.c	/^struct iv_tcw_private {$/
kcopyd_cancel	dm-kcopyd.c	/^int kcopyd_cancel(struct kcopyd_job *job, int bloc/
kcopyd_get_pages	dm-kcopyd.c	/^static int kcopyd_get_pages(struct dm_kcopyd_clien/
kcopyd_job	dm-kcopyd.c	/^struct kcopyd_job {$/
kcopyd_put_pages	dm-kcopyd.c	/^static void kcopyd_put_pages(struct dm_kcopyd_clie/
kcryptd_async_done	dm-crypt.c	/^static void kcryptd_async_done(struct crypto_async/
kcryptd_crypt	dm-crypt.c	/^static void kcryptd_crypt(struct work_struct *work/
kcryptd_crypt_read_convert	dm-crypt.c	/^static void kcryptd_crypt_read_convert(struct dm_c/
kcryptd_crypt_read_done	dm-crypt.c	/^static void kcryptd_crypt_read_done(struct dm_cryp/
kcryptd_crypt_write_convert	dm-crypt.c	/^static void kcryptd_crypt_write_convert(struct dm_/
kcryptd_crypt_write_io_submit	dm-crypt.c	/^static void kcryptd_crypt_write_io_submit(struct d/
kcryptd_io	dm-crypt.c	/^static void kcryptd_io(struct work_struct *work)$/
kcryptd_io_read	dm-crypt.c	/^static int kcryptd_io_read(struct dm_crypt_io *io,/
kcryptd_io_write	dm-crypt.c	/^static void kcryptd_io_write(struct dm_crypt_io *i/
kcryptd_queue_crypt	dm-crypt.c	/^static void kcryptd_queue_crypt(struct dm_crypt_io/
kcryptd_queue_io	dm-crypt.c	/^static void kcryptd_queue_io(struct dm_crypt_io *i/
keys_equal	dm-bio-prison.c	/^static int keys_equal(struct dm_cell_key *lhs, str/
kick_off_digest	dm-era-target.c	/^static void kick_off_digest(struct era *era)$/
kick_rdev_from_array	md.c	/^static void kick_rdev_from_array(struct md_rdev * /
km_dp_init	dm-io.c	/^static void km_dp_init(struct dpages *dp, void *da/
km_get_page	dm-io.c	/^static void km_get_page(struct dpages *dp, struct /
km_next_page	dm-io.c	/^static void km_next_page(struct dpages *dp)$/
kvs_create_linear_cowbtree	dm-dedup-cbt.c	/^static struct kvstore * kvs_create_linear_cowbtree/
kvs_create_linear_inram	dm-dedup-ram.c	/^static struct kvstore *kvs_create_linear_inram(str/
kvs_create_sparse_cowbtree	dm-dedup-cbt.c	/^static struct kvstore *kvs_create_sparse_cowbtree(/
kvs_create_sparse_inram	dm-dedup-ram.c	/^static struct kvstore *kvs_create_sparse_inram(str/
kvs_delete_linear_cowbtree	dm-dedup-cbt.c	/^static int kvs_delete_linear_cowbtree(struct kvsto/
kvs_delete_linear_inram	dm-dedup-ram.c	/^static int kvs_delete_linear_inram(struct kvstore /
kvs_delete_sparse_cowbtree	dm-dedup-cbt.c	/^static int kvs_delete_sparse_cowbtree(struct kvsto/
kvs_delete_sparse_inram	dm-dedup-ram.c	/^static int kvs_delete_sparse_inram(struct kvstore /
kvs_insert_linear_cowbtree	dm-dedup-cbt.c	/^static int kvs_insert_linear_cowbtree(struct kvsto/
kvs_insert_linear_inram	dm-dedup-ram.c	/^static int kvs_insert_linear_inram(struct kvstore /
kvs_insert_sparse_cowbtree	dm-dedup-cbt.c	/^static int kvs_insert_sparse_cowbtree(struct kvsto/
kvs_insert_sparse_inram	dm-dedup-ram.c	/^static int kvs_insert_sparse_inram(struct kvstore /
kvs_iterate_linear_cowbtree	dm-dedup-cbt.c	/^static int kvs_iterate_linear_cowbtree(struct kvst/
kvs_iterate_linear_inram	dm-dedup-ram.c	/^static int kvs_iterate_linear_inram(struct kvstore/
kvs_iterate_sparse_inram	dm-dedup-ram.c	/^static int kvs_iterate_sparse_inram(struct kvstore/
kvs_lookup_linear_cowbtree	dm-dedup-cbt.c	/^static int kvs_lookup_linear_cowbtree(struct kvsto/
kvs_lookup_linear_inram	dm-dedup-ram.c	/^static int kvs_lookup_linear_inram(struct kvstore /
kvs_lookup_sparse_cowbtree	dm-dedup-cbt.c	/^static int kvs_lookup_sparse_cowbtree(struct kvsto/
kvs_lookup_sparse_inram	dm-dedup-ram.c	/^static int kvs_lookup_sparse_inram(struct kvstore /
kvstore	dm-dedup-kvstore.h	/^struct kvstore {$/
kvstore_cbt	dm-dedup-cbt.c	/^struct kvstore_cbt {$/
kvstore_inram	dm-dedup-ram.c	/^struct kvstore_inram {$/
last_dev_address	raid10.c	/^static sector_t last_dev_address(sector_t s, struc/
last_sync_action_show	md.c	/^last_sync_action_show(struct mddev *mddev, char *p/
layout_show	md.c	/^layout_show(struct mddev *mddev, char *page)$/
layout_store	md.c	/^layout_store(struct mddev *mddev, const char *buf,/
lbn_pbn_value	dm-dedup-target.h	/^struct lbn_pbn_value {$/
level_show	md.c	/^level_show(struct mddev *mddev, char *page)$/
level_store	md.c	/^level_store(struct mddev *mddev, const char *buf, /
linear_add	linear.c	/^static int linear_add(struct mddev *mddev, struct /
linear_c	dm-linear.c	/^struct linear_c {$/
linear_conf	linear.c	/^static struct linear_conf *linear_conf(struct mdde/
linear_congested	linear.c	/^static int linear_congested(void *data, int bits)$/
linear_ctr	dm-linear.c	/^static int linear_ctr(struct dm_target *ti, unsign/
linear_dtr	dm-linear.c	/^static void linear_dtr(struct dm_target *ti)$/
linear_exit	linear.c	/^static void linear_exit (void)$/
linear_init	linear.c	/^static int __init linear_init (void)$/
linear_ioctl	dm-linear.c	/^static int linear_ioctl(struct dm_target *ti, unsi/
linear_iterate_devices	dm-linear.c	/^static int linear_iterate_devices(struct dm_target/
linear_make_request	linear.c	/^static void linear_make_request(struct mddev *mdde/
linear_map	dm-linear.c	/^static int linear_map(struct dm_target *ti, struct/
linear_map_bio	dm-linear.c	/^static void linear_map_bio(struct dm_target *ti, s/
linear_map_sector	dm-linear.c	/^static sector_t linear_map_sector(struct dm_target/
linear_merge	dm-linear.c	/^static int linear_merge(struct dm_target *ti, stru/
linear_mergeable_bvec	linear.c	/^static int linear_mergeable_bvec(struct request_qu/
linear_run	linear.c	/^static int linear_run (struct mddev *mddev)$/
linear_size	linear.c	/^static sector_t linear_size(struct mddev *mddev, s/
linear_status	dm-linear.c	/^static void linear_status(struct dm_target *ti, st/
linear_stop	linear.c	/^static int linear_stop (struct mddev *mddev)$/
list_devices	dm-ioctl.c	/^static int list_devices(struct dm_ioctl *param, si/
list_dp_init	dm-io.c	/^static void list_dp_init(struct dpages *dp, struct/
list_get_page	dm-io.c	/^static void list_get_page(struct dpages *dp,$/
list_next_page	dm-io.c	/^static void list_next_page(struct dpages *dp)$/
list_pop	dm-cache-policy-cleaner.c	/^static struct list_head *list_pop(struct list_head/
list_version_get_info	dm-ioctl.c	/^static void list_version_get_info(struct target_ty/
list_version_get_needed	dm-ioctl.c	/^static void list_version_get_needed(struct target_/
list_versions	dm-ioctl.c	/^static int list_versions(struct dm_ioctl *param, s/
ll_zero	dm-thin.c	/^static void ll_zero(struct thin_c *tc, struct dm_t/
load_discard	dm-cache-target.c	/^static int load_discard(void *context, sector_t di/
load_mapping	dm-cache-target.c	/^static int load_mapping(void *context, dm_oblock_t/
load_module	dm-target.c	/^static void load_module(const char *name)$/
load_stats	dm-cache-target.c	/^static void load_stats(struct cache *cache)$/
local_exit	dm.c	/^static void local_exit(void)$/
local_init	dm.c	/^static int __init local_init(void)$/
location_show	bitmap.c	/^location_show(struct mddev *mddev, char *page)$/
location_store	bitmap.c	/^location_store(struct mddev *mddev, const char *bu/
lock_all_device_hash_locks_irq	raid5.c	/^static inline void lock_all_device_hash_locks_irq(/
lock_device_hash_lock	raid5.c	/^static inline void lock_device_hash_lock(struct r5/
lock_fs	dm.c	/^static int lock_fs(struct mapped_device *md)$/
lock_rdev	md.c	/^static int lock_rdev(struct md_rdev *rdev, dev_t d/
log_c	dm-log-userspace-base.c	/^struct log_c {$/
log_clear_bit	dm-log.c	/^static inline void log_clear_bit(struct log_c *l,$/
log_header_core	dm-log.c	/^struct log_header_core {$/
log_header_disk	dm-log.c	/^struct log_header_disk {$/
log_set_bit	dm-log.c	/^static inline void log_set_bit(struct log_c *l,$/
log_test_bit	dm-log.c	/^static inline int log_test_bit(uint32_t *bs, unsig/
long	dm-cache-metadata.c	/^typedef unsigned long (*flags_mutator)(unsigned lo/
lookup_cache_entry	dm-cache-policy-cleaner.c	/^static struct wb_cache_entry *lookup_cache_entry(s/
lookup_ioctl	dm-ioctl.c	/^static ioctl_fn lookup_ioctl(unsigned int cmd, int/
lower_barrier	raid1.c	/^static void lower_barrier(struct r1conf *conf)$/
m	dm-thin.c	/^typedef void (*process_mapping_fn)(struct dm_thin_/
make_discard_request	raid5.c	/^static void make_discard_request(struct mddev *mdd/
make_request	faulty.c	/^static void make_request(struct mddev *mddev, stru/
map	dm-cache-policy-mq.c	/^static int map(struct mq_policy *mq, dm_oblock_t o/
map_bio	dm-raid1.c	/^static void map_bio(struct mirror *m, struct bio */
map_region	dm-raid1.c	/^static void map_region(struct dm_io_region *io, st/
map_request	dm.c	/^static int map_request(struct dm_target *ti, struc/
map_sector	dm-raid1.c	/^static sector_t map_sector(struct mirror *m, struc/
mapped_device	dm.c	/^struct mapped_device {$/
mapping_bits	dm-cache-metadata.c	/^enum mapping_bits {$/
mark_target_uptodate	raid5.c	/^static void mark_target_uptodate(struct stripe_hea/
match_mddev_units	md.c	/^static int match_mddev_units(struct mddev *mddev1,/
match_word	md.c	/^static int match_word(const char *word, char **lis/
max_corrected_read_errors_show	md.c	/^max_corrected_read_errors_show(struct mddev *mddev/
max_corrected_read_errors_store	md.c	/^max_corrected_read_errors_store(struct mddev *mdde/
max_io_len	dm.c	/^static sector_t max_io_len(sector_t sector, struct/
max_io_len_target_boundary	dm.c	/^static sector_t max_io_len_target_boundary(sector_/
max_sync_show	md.c	/^max_sync_show(struct mddev *mddev, char *page)$/
max_sync_store	md.c	/^max_sync_store(struct mddev *mddev, const char *bu/
maybe_resize_data_dev	dm-thin.c	/^static int maybe_resize_data_dev(struct dm_target /
maybe_resize_metadata_dev	dm-thin.c	/^static int maybe_resize_metadata_dev(struct dm_tar/
md_ack_all_badblocks	md.c	/^void md_ack_all_badblocks(struct badblocks *bb)$/
md_alloc	md.c	/^static int md_alloc(dev_t dev, char *name)$/
md_allow_write	md.c	/^int md_allow_write(struct mddev *mddev)$/
md_attr_show	md.c	/^md_attr_show(struct kobject *kobj, struct attribut/
md_attr_store	md.c	/^md_attr_store(struct kobject *kobj, struct attribu/
md_autodetect_dev	md.c	/^void md_autodetect_dev(dev_t dev)$/
md_check_no_bitmap	md.c	/^int md_check_no_bitmap(struct mddev *mddev)$/
md_check_recovery	md.c	/^void md_check_recovery(struct mddev *mddev)$/
md_clean	md.c	/^static void md_clean(struct mddev *mddev)$/
md_clear_badblocks	md.c	/^static int md_clear_badblocks(struct badblocks *bb/
md_compat_ioctl	md.c	/^static int md_compat_ioctl(struct block_device *bd/
md_csum_fold	md.c	/^static u32 md_csum_fold(u32 csum)$/
md_delayed_delete	md.c	/^static void md_delayed_delete(struct work_struct */
md_do_sync	md.c	/^void md_do_sync(struct md_thread *thread)$/
md_done_sync	md.c	/^void md_done_sync(struct mddev *mddev, int blocks,/
md_end_flush	md.c	/^static void md_end_flush(struct bio *bio, int err)/
md_error	md.c	/^void md_error(struct mddev *mddev, struct md_rdev /
md_exit	md.c	/^static __exit void md_exit(void)$/
md_finish_reshape	md.c	/^void md_finish_reshape(struct mddev *mddev)$/
md_flush_request	md.c	/^void md_flush_request(struct mddev *mddev, struct /
md_free	md.c	/^static void md_free(struct kobject *ko)$/
md_geninit	md.c	/^static void md_geninit(void)$/
md_getgeo	md.c	/^static int md_getgeo(struct block_device *bdev, st/
md_import_device	md.c	/^static struct md_rdev *md_import_device(dev_t newd/
md_in_flight	dm.c	/^static int md_in_flight(struct mapped_device *md)$/
md_init	md.c	/^static int __init md_init(void)$/
md_integrity_add_rdev	md.c	/^void md_integrity_add_rdev(struct md_rdev *rdev, s/
md_integrity_register	md.c	/^int md_integrity_register(struct mddev *mddev)$/
md_ioctl	md.c	/^static int md_ioctl(struct block_device *bdev, fmo/
md_ioctl_valid	md.c	/^static inline bool md_ioctl_valid(unsigned int cmd/
md_is_badblock	md.c	/^int md_is_badblock(struct badblocks *bb, sector_t /
md_make_request	md.c	/^static void md_make_request(struct request_queue */
md_media_changed	md.c	/^static int md_media_changed(struct gendisk *disk)$/
md_new_event	md.c	/^void md_new_event(struct mddev *mddev)$/
md_new_event_inintr	md.c	/^static void md_new_event_inintr(struct mddev *mdde/
md_notify_reboot	md.c	/^static int md_notify_reboot(struct notifier_block /
md_open	md.c	/^static int md_open(struct block_device *bdev, fmod/
md_print_devices	md.c	/^static void md_print_devices(void)$/
md_probe	md.c	/^static struct kobject *md_probe(dev_t dev, int *pa/
md_raid10_congested	raid10.c	/^int md_raid10_congested(struct mddev *mddev, int b/
md_raid1_congested	raid1.c	/^int md_raid1_congested(struct mddev *mddev, int bi/
md_raid5_congested	raid5.c	/^int md_raid5_congested(struct mddev *mddev, int bi/
md_rdev	md.h	/^struct md_rdev {$/
md_rdev_clear	md.c	/^void md_rdev_clear(struct md_rdev *rdev)$/
md_rdev_init	md.c	/^int md_rdev_init(struct md_rdev *rdev)$/
md_reap_sync_thread	md.c	/^void md_reap_sync_thread(struct mddev *mddev)$/
md_register_thread	md.c	/^struct md_thread *md_register_thread(void (*run) (/
md_release	md.c	/^static void md_release(struct gendisk *disk, fmode/
md_revalidate	md.c	/^static int md_revalidate(struct gendisk *disk)$/
md_run	md.c	/^int md_run(struct mddev *mddev)$/
md_safemode_timeout	md.c	/^static void md_safemode_timeout(unsigned long data/
md_seq_next	md.c	/^static void *md_seq_next(struct seq_file *seq, voi/
md_seq_open	md.c	/^static int md_seq_open(struct inode *inode, struct/
md_seq_show	md.c	/^static int md_seq_show(struct seq_file *seq, void /
md_seq_start	md.c	/^static void *md_seq_start(struct seq_file *seq, lo/
md_seq_stop	md.c	/^static void md_seq_stop(struct seq_file *seq, void/
md_set_array_sectors	md.c	/^void md_set_array_sectors(struct mddev *mddev, sec/
md_set_badblocks	md.c	/^static int md_set_badblocks(struct badblocks *bb, /
md_set_readonly	md.c	/^static int md_set_readonly(struct mddev *mddev, st/
md_stop	md.c	/^void md_stop(struct mddev *mddev)$/
md_stop_writes	md.c	/^void md_stop_writes(struct mddev *mddev)$/
md_submit_flush_data	md.c	/^static void md_submit_flush_data(struct work_struc/
md_super_wait	md.c	/^void md_super_wait(struct mddev *mddev)$/
md_super_write	md.c	/^void md_super_write(struct mddev *mddev, struct md/
md_sync_acct	md.h	/^static inline void md_sync_acct(struct block_devic/
md_sysfs_entry	md.h	/^struct md_sysfs_entry {$/
md_thread	md.c	/^static int md_thread(void * arg)$/
md_unplug	md.c	/^void md_unplug(struct blk_plug_cb *cb, bool from_s/
md_unregister_thread	md.c	/^void md_unregister_thread(struct md_thread **threa/
md_update_sb	md.c	/^static void md_update_sb(struct mddev * mddev, int/
md_wait_for_blocked_rdev	md.c	/^void md_wait_for_blocked_rdev(struct md_rdev *rdev/
md_wakeup_thread	md.c	/^void md_wakeup_thread(struct md_thread *thread)$/
md_write_end	md.c	/^void md_write_end(struct mddev *mddev)$/
md_write_start	md.c	/^void md_write_start(struct mddev *mddev, struct bi/
mdata_req	dm-snap-persistent.c	/^struct mdata_req {$/
mddev	md.h	/^struct mddev {$/
mddev_check_plugged	md.h	/^static inline int mddev_check_plugged(struct mddev/
mddev_congested	md.c	/^int mddev_congested(struct mddev *mddev, int bits)/
mddev_delayed_delete	md.c	/^static void mddev_delayed_delete(struct work_struc/
mddev_find	md.c	/^static struct mddev * mddev_find(dev_t unit)$/
mddev_get	md.c	/^static inline struct mddev *mddev_get(struct mddev/
mddev_init	md.c	/^void mddev_init(struct mddev *mddev)$/
mddev_is_locked	md.c	/^static inline int mddev_is_locked(struct mddev *md/
mddev_lock	md.c	/^static inline int __must_check mddev_lock(struct m/
mddev_lock_nointr	md.c	/^static inline void mddev_lock_nointr(struct mddev /
mddev_put	md.c	/^static void mddev_put(struct mddev *mddev)$/
mddev_resume	md.c	/^void mddev_resume(struct mddev *mddev)$/
mddev_suspend	md.c	/^void mddev_suspend(struct mddev *mddev)$/
mddev_trylock	md.c	/^static inline int mddev_trylock(struct mddev * mdd/
mddev_unlock	md.c	/^static void mddev_unlock(struct mddev * mddev)$/
mdname	md.h	/^static inline char * mdname (struct mddev * mddev)/
mdstat_poll	md.c	/^static unsigned int mdstat_poll(struct file *filp,/
merge_callback	dm-snap.c	/^static void merge_callback(int read_err, unsigned /
merge_data	dm-dedup-rw.c	/^static int merge_data(struct dedup_config *dc, str/
merge_shutdown	dm-snap.c	/^static void merge_shutdown(struct dm_snapshot *s)$/
message_for_md	dm-ioctl.c	/^static int message_for_md(struct mapped_device *md/
message_stats_clear	dm-stats.c	/^static int message_stats_clear(struct mapped_devic/
message_stats_create	dm-stats.c	/^static int message_stats_create(struct mapped_devi/
message_stats_delete	dm-stats.c	/^static int message_stats_delete(struct mapped_devi/
message_stats_list	dm-stats.c	/^static int message_stats_list(struct mapped_device/
message_stats_print	dm-stats.c	/^static int message_stats_print(struct mapped_devic/
message_stats_set_aux	dm-stats.c	/^static int message_stats_set_aux(struct mapped_dev/
metadata	dm-dedup-cbt.c	/^struct metadata {$/
metadata_checkpoint	dm-era-target.c	/^static int metadata_checkpoint(struct era_metadata/
metadata_close	dm-era-target.c	/^static void metadata_close(struct era_metadata *md/
metadata_commit	dm-era-target.c	/^static int metadata_commit(struct era_metadata *md/
metadata_current_marked	dm-era-target.c	/^static bool metadata_current_marked(struct era_met/
metadata_digest_lookup_writeset	dm-era-target.c	/^static int metadata_digest_lookup_writeset(struct /
metadata_digest_remove_writeset	dm-era-target.c	/^static int metadata_digest_remove_writeset(struct /
metadata_digest_start	dm-era-target.c	/^static int metadata_digest_start(struct era_metada/
metadata_digest_transcribe_writeset	dm-era-target.c	/^static int metadata_digest_transcribe_writeset(str/
metadata_drop_snap	dm-era-target.c	/^static int metadata_drop_snap(struct era_metadata /
metadata_era_archive	dm-era-target.c	/^static int metadata_era_archive(struct era_metadat/
metadata_era_rollover	dm-era-target.c	/^static int metadata_era_rollover(struct era_metada/
metadata_get_stats	dm-era-target.c	/^static int metadata_get_stats(struct era_metadata /
metadata_low_callback	dm-thin.c	/^static void metadata_low_callback(void *context)$/
metadata_new_era	dm-era-target.c	/^static int metadata_new_era(struct era_metadata *m/
metadata_open	dm-era-target.c	/^static struct era_metadata *metadata_open(struct b/
metadata_operation_failed	dm-thin.c	/^static void metadata_operation_failed(struct pool /
metadata_ops	dm-dedup-backend.h	/^struct metadata_ops {$/
metadata_resize	dm-era-target.c	/^static int metadata_resize(struct era_metadata *md/
metadata_show	bitmap.c	/^static ssize_t metadata_show(struct mddev *mddev, /
metadata_stats	dm-era-target.c	/^struct metadata_stats {$/
metadata_store	bitmap.c	/^static ssize_t metadata_store(struct mddev *mddev,/
metadata_superblock	dm-dedup-cbt.c	/^struct metadata_superblock {$/
metadata_take_snap	dm-era-target.c	/^static int metadata_take_snap(struct era_metadata /
migration_failure	dm-cache-target.c	/^static void migration_failure(struct dm_cache_migr/
migration_success_post_commit	dm-cache-target.c	/^static void migration_success_post_commit(struct d/
migration_success_pre_commit	dm-cache-target.c	/^static void migration_success_pre_commit(struct dm/
min_sync_show	md.c	/^min_sync_show(struct mddev *mddev, char *page)$/
min_sync_store	md.c	/^min_sync_store(struct mddev *mddev, const char *bu/
mirror	dm-raid1.c	/^struct mirror {$/
mirror_available	dm-raid1.c	/^static int mirror_available(struct mirror_set *ms,/
mirror_ctr	dm-raid1.c	/^static int mirror_ctr(struct dm_target *ti, unsign/
mirror_dtr	dm-raid1.c	/^static void mirror_dtr(struct dm_target *ti)$/
mirror_end_io	dm-raid1.c	/^static int mirror_end_io(struct dm_target *ti, str/
mirror_flush	dm-raid1.c	/^static int mirror_flush(struct dm_target *ti)$/
mirror_iterate_devices	dm-raid1.c	/^static int mirror_iterate_devices(struct dm_target/
mirror_map	dm-raid1.c	/^static int mirror_map(struct dm_target *ti, struct/
mirror_postsuspend	dm-raid1.c	/^static void mirror_postsuspend(struct dm_target *t/
mirror_presuspend	dm-raid1.c	/^static void mirror_presuspend(struct dm_target *ti/
mirror_resume	dm-raid1.c	/^static void mirror_resume(struct dm_target *ti)$/
mirror_set	dm-raid1.c	/^struct mirror_set {$/
mirror_status	dm-raid1.c	/^static void mirror_status(struct dm_target *ti, st/
mismatch_cnt_show	md.c	/^mismatch_cnt_show(struct mddev *mddev, char *page)/
module_exit	md.c	/^module_exit(md_exit)$/
module_init	dm-bufio.c	/^module_init(dm_bufio_init)$/
more_work	dm-cache-target.c	/^static int more_work(struct cache *cache)$/
mpconf	multipath.h	/^struct mpconf {$/
mq_clear_dirty	dm-cache-policy-mq.c	/^static void mq_clear_dirty(struct dm_cache_policy /
mq_create	dm-cache-policy-mq.c	/^static struct dm_cache_policy *mq_create(dm_cblock/
mq_destroy	dm-cache-policy-mq.c	/^static void mq_destroy(struct dm_cache_policy *p)$/
mq_emit_config_values	dm-cache-policy-mq.c	/^static int mq_emit_config_values(struct dm_cache_p/
mq_exit	dm-cache-policy-mq.c	/^static void __exit mq_exit(void)$/
mq_force_mapping	dm-cache-policy-mq.c	/^static void mq_force_mapping(struct dm_cache_polic/
mq_init	dm-cache-policy-mq.c	/^static int __init mq_init(void)$/
mq_load_mapping	dm-cache-policy-mq.c	/^static int mq_load_mapping(struct dm_cache_policy /
mq_lookup	dm-cache-policy-mq.c	/^static int mq_lookup(struct dm_cache_policy *p, dm/
mq_map	dm-cache-policy-mq.c	/^static int mq_map(struct dm_cache_policy *p, dm_ob/
mq_policy	dm-cache-policy-mq.c	/^struct mq_policy {$/
mq_remove_cblock	dm-cache-policy-mq.c	/^static int mq_remove_cblock(struct dm_cache_policy/
mq_remove_mapping	dm-cache-policy-mq.c	/^static void mq_remove_mapping(struct dm_cache_poli/
mq_residency	dm-cache-policy-mq.c	/^static dm_cblock_t mq_residency(struct dm_cache_po/
mq_save_hints	dm-cache-policy-mq.c	/^static int mq_save_hints(struct mq_policy *mq, str/
mq_set_config_value	dm-cache-policy-mq.c	/^static int mq_set_config_value(struct dm_cache_pol/
mq_set_dirty	dm-cache-policy-mq.c	/^static void mq_set_dirty(struct dm_cache_policy *p/
mq_tick	dm-cache-policy-mq.c	/^static void mq_tick(struct dm_cache_policy *p)$/
mq_walk_mappings	dm-cache-policy-mq.c	/^static int mq_walk_mappings(struct dm_cache_policy/
mq_writeback_work	dm-cache-policy-mq.c	/^static int mq_writeback_work(struct dm_cache_polic/
multipath	dm-mpath.c	/^struct multipath {$/
multipath_add_disk	multipath.c	/^static int multipath_add_disk(struct mddev *mddev,/
multipath_bh	multipath.h	/^struct multipath_bh {$/
multipath_busy	dm-mpath.c	/^static int multipath_busy(struct dm_target *ti)$/
multipath_congested	multipath.c	/^static int multipath_congested(void *data, int bit/
multipath_ctr	dm-mpath.c	/^static int multipath_ctr(struct dm_target *ti, uns/
multipath_dtr	dm-mpath.c	/^static void multipath_dtr(struct dm_target *ti)$/
multipath_end_bh_io	multipath.c	/^static void multipath_end_bh_io (struct multipath_/
multipath_end_io	dm-mpath.c	/^static int multipath_end_io(struct dm_target *ti, /
multipath_end_request	multipath.c	/^static void multipath_end_request(struct bio *bio,/
multipath_error	multipath.c	/^static void multipath_error (struct mddev *mddev, /
multipath_exit	multipath.c	/^static void __exit multipath_exit (void)$/
multipath_info	multipath.h	/^struct multipath_info {$/
multipath_init	multipath.c	/^static int __init multipath_init (void)$/
multipath_ioctl	dm-mpath.c	/^static int multipath_ioctl(struct dm_target *ti, u/
multipath_iterate_devices	dm-mpath.c	/^static int multipath_iterate_devices(struct dm_tar/
multipath_make_request	multipath.c	/^static void multipath_make_request(struct mddev *m/
multipath_map	dm-mpath.c	/^static int multipath_map(struct dm_target *ti, str/
multipath_message	dm-mpath.c	/^static int multipath_message(struct dm_target *ti,/
multipath_postsuspend	dm-mpath.c	/^static void multipath_postsuspend(struct dm_target/
multipath_presuspend	dm-mpath.c	/^static void multipath_presuspend(struct dm_target /
multipath_remove_disk	multipath.c	/^static int multipath_remove_disk(struct mddev *mdd/
multipath_reschedule_retry	multipath.c	/^static void multipath_reschedule_retry (struct mul/
multipath_resume	dm-mpath.c	/^static void multipath_resume(struct dm_target *ti)/
multipath_run	multipath.c	/^static int multipath_run (struct mddev *mddev)$/
multipath_size	multipath.c	/^static sector_t multipath_size(struct mddev *mddev/
multipath_status	dm-mpath.c	/^static void multipath_status(struct dm_target *ti,/
multipath_stop	multipath.c	/^static int multipath_stop (struct mddev *mddev)$/
multipath_wait_for_pg_init_completion	dm-mpath.c	/^static void multipath_wait_for_pg_init_completion(/
multipathd	multipath.c	/^static void multipathd(struct md_thread *thread)$/
my_endio	dm-dedup-rw.c	/^static void my_endio(struct bio *clone, int error)/
my_zero_fill_bio	dm-dedup-rw.c	/^static void my_zero_fill_bio(struct bio *bio)$/
narrow_write_error	raid1.c	/^static int narrow_write_error(struct r1bio *r1_bio/
need_commit_due_to_time	dm-cache-target.c	/^static int need_commit_due_to_time(struct cache *c/
need_to_wait_for_sync	raid1.c	/^static bool need_to_wait_for_sync(struct r1conf *c/
new_dev_store	md.c	/^new_dev_store(struct mddev *mddev, const char *buf/
new_flag	dm-bufio.c	/^enum new_flag {$/
new_offset_show	md.c	/^static ssize_t new_offset_show(struct md_rdev *rde/
new_offset_store	md.c	/^static ssize_t new_offset_store(struct md_rdev *rd/
new_read	dm-bufio.c	/^static void *new_read(struct dm_bufio_client *c, s/
next_active_rdev	bitmap.c	/^static struct md_rdev *next_active_rdev(struct md_/
next_free_minor	dm.c	/^static int next_free_minor(int *minor)$/
next_head	dm-dedup-ram.c	/^static uint64_t next_head(uint64_t current_head, u/
next_power	dm-cache-policy-cleaner.c	/^static unsigned next_power(unsigned n, unsigned mi/
next_target	dm-ioctl.c	/^static int next_target(struct dm_target_spec *last/
next_writeset	dm-era-target.c	/^static struct writeset *next_writeset(struct era_m/
no_entry_found	dm-cache-policy-mq.c	/^static int no_entry_found(struct mq_policy *mq, dm/
noflush_work	dm-thin.c	/^struct noflush_work {$/
noretry_error	dm-mpath.c	/^static int noretry_error(int error)$/
notify_of_pool_mode_change	dm-thin.c	/^static void notify_of_pool_mode_change(struct pool/
null_show	md.c	/^null_show(struct mddev *mddev, char *page)$/
offset_show	md.c	/^offset_show(struct md_rdev *rdev, char *page)$/
offset_store	md.c	/^offset_store(struct md_rdev *rdev, const char *buf/
on_disk_stats	dm-dedup-target.c	/^struct on_disk_stats {$/
one_write_done	raid10.c	/^static void one_write_done(struct r10bio *r10_bio)/
only_parity	raid5.c	/^static int only_parity(int raid_disk, int algo, in/
open_metadata	dm-era-target.c	/^static int open_metadata(struct era_metadata *md)$/
open_or_format_metadata	dm-era-target.c	/^static int open_or_format_metadata(struct era_meta/
open_table_device	dm.c	/^static int open_table_device(struct table_device */
ops_complete_biofill	raid5.c	/^static void ops_complete_biofill(void *stripe_head/
ops_complete_check	raid5.c	/^static void ops_complete_check(void *stripe_head_r/
ops_complete_compute	raid5.c	/^static void ops_complete_compute(void *stripe_head/
ops_complete_prexor	raid5.c	/^static void ops_complete_prexor(void *stripe_head_/
ops_complete_reconstruct	raid5.c	/^static void ops_complete_reconstruct(void *stripe_/
ops_run_biodrain	raid5.c	/^ops_run_biodrain(struct stripe_head *sh, struct dm/
ops_run_biofill	raid5.c	/^static void ops_run_biofill(struct stripe_head *sh/
ops_run_check_p	raid5.c	/^static void ops_run_check_p(struct stripe_head *sh/
ops_run_check_pq	raid5.c	/^static void ops_run_check_pq(struct stripe_head *s/
ops_run_compute5	raid5.c	/^ops_run_compute5(struct stripe_head *sh, struct ra/
ops_run_compute6_1	raid5.c	/^ops_run_compute6_1(struct stripe_head *sh, struct /
ops_run_compute6_2	raid5.c	/^ops_run_compute6_2(struct stripe_head *sh, struct /
ops_run_io	raid5.c	/^static void ops_run_io(struct stripe_head *sh, str/
ops_run_prexor	raid5.c	/^ops_run_prexor(struct stripe_head *sh, struct raid/
ops_run_reconstruct5	raid5.c	/^ops_run_reconstruct5(struct stripe_head *sh, struc/
ops_run_reconstruct6	raid5.c	/^ops_run_reconstruct6(struct stripe_head *sh, struc/
origin	dm-snap.c	/^struct origin {$/
origin_ctr	dm-snap.c	/^static int origin_ctr(struct dm_target *ti, unsign/
origin_dtr	dm-snap.c	/^static void origin_dtr(struct dm_target *ti)$/
origin_hash	dm-snap.c	/^static unsigned origin_hash(struct block_device *b/
origin_iterate_devices	dm-snap.c	/^static int origin_iterate_devices(struct dm_target/
origin_map	dm-snap.c	/^static int origin_map(struct dm_target *ti, struct/
origin_merge	dm-snap.c	/^static int origin_merge(struct dm_target *ti, stru/
origin_resume	dm-snap.c	/^static void origin_resume(struct dm_target *ti)$/
origin_status	dm-snap.c	/^static void origin_status(struct dm_target *ti, st/
origin_write_extent	dm-snap.c	/^static int origin_write_extent(struct dm_snapshot /
overlaps	md.c	/^static int overlaps(sector_t s1, sector_t l1, sect/
overwrite_endio	dm-cache-target.c	/^static void overwrite_endio(struct bio *bio, int e/
pack_block_time	dm-thin-metadata.c	/^static uint64_t pack_block_time(dm_block_t b, uint/
pack_value	dm-cache-metadata.c	/^static __le64 pack_value(dm_oblock_t block, unsign/
param_size	dm-ioctl.c	/^typedef int (*ioctl_fn)(struct dm_ioctl *param, si/
parse_block_size	dm-cache-target.c	/^static int parse_block_size(struct cache_args *ca,/
parse_cache_args	dm-cache-target.c	/^static int parse_cache_args(struct cache_args *ca,/
parse_cache_dev	dm-cache-target.c	/^static int parse_cache_dev(struct cache_args *ca, /
parse_cblock_range	dm-cache-target.c	/^static int parse_cblock_range(struct cache *cache,/
parse_features	dm-cache-target.c	/^static int parse_features(struct cache_args *ca, s/
parse_hex	dm-switch.c	/^static __always_inline unsigned long parse_hex(con/
parse_hw_handler	dm-mpath.c	/^static int parse_hw_handler(struct dm_arg_set *as,/
parse_metadata_dev	dm-cache-target.c	/^static int parse_metadata_dev(struct cache_args *c/
parse_origin_dev	dm-cache-target.c	/^static int parse_origin_dev(struct cache_args *ca,/
parse_path	dm-mpath.c	/^static struct pgpath *parse_path(struct dm_arg_set/
parse_path_selector	dm-mpath.c	/^static int parse_path_selector(struct dm_arg_set */
parse_policy	dm-cache-target.c	/^static int parse_policy(struct cache_args *ca, str/
parse_pool_features	dm-thin.c	/^static int parse_pool_features(struct dm_arg_set */
parse_priority_group	dm-mpath.c	/^static struct priority_group *parse_priority_group/
parse_raid_params	dm-raid.c	/^static int parse_raid_params(struct raid_set *rs, /
passthrough_mode	dm-cache-target.c	/^static bool passthrough_mode(struct cache_features/
path_info	dm-queue-length.c	/^struct path_info {$/
path_selector	dm-path-selector.h	/^struct path_selector_type;$/
path_selector_type	dm-path-selector.h	/^struct path_selector_type {$/
path_to_pgpath	dm-mpath.c	/^#define path_to_pgpath(__pgp) container_of((__pgp)/
pending_complete	dm-snap.c	/^static void pending_complete(struct dm_snap_pendin/
per_bio_data	dm-cache-target.c	/^struct per_bio_data {$/
perform_rpc	dm-era-target.c	/^static int perform_rpc(struct era *era, struct rpc/
persistent_commit_exception	dm-snap-persistent.c	/^static void persistent_commit_exception(struct dm_/
persistent_commit_merge	dm-snap-persistent.c	/^static int persistent_commit_merge(struct dm_excep/
persistent_ctr	dm-snap-persistent.c	/^static int persistent_ctr(struct dm_exception_stor/
persistent_drop_snapshot	dm-snap-persistent.c	/^static void persistent_drop_snapshot(struct dm_exc/
persistent_dtr	dm-snap-persistent.c	/^static void persistent_dtr(struct dm_exception_sto/
persistent_prepare_exception	dm-snap-persistent.c	/^static int persistent_prepare_exception(struct dm_/
persistent_prepare_merge	dm-snap-persistent.c	/^static int persistent_prepare_merge(struct dm_exce/
persistent_read_metadata	dm-snap-persistent.c	/^static int persistent_read_metadata(struct dm_exce/
persistent_status	dm-snap-persistent.c	/^static unsigned persistent_status(struct dm_except/
persistent_usage	dm-snap-persistent.c	/^static void persistent_usage(struct dm_exception_s/
pg_init_done	dm-mpath.c	/^static void pg_init_done(void *data, int errors)$/
pg_init_limit_reached	dm-mpath.c	/^static int pg_init_limit_reached(struct multipath /
pgpath	dm-mpath.c	/^struct pgpath {$/
policy	dm-cache-policy-cleaner.c	/^struct policy {$/
policy_clear_dirty	dm-cache-policy-internal.h	/^static inline void policy_clear_dirty(struct dm_ca/
policy_emit_config_values	dm-cache-policy-internal.h	/^static inline int policy_emit_config_values(struct/
policy_force_mapping	dm-cache-policy-internal.h	/^static inline void policy_force_mapping(struct dm_/
policy_load_mapping	dm-cache-policy-internal.h	/^static inline int policy_load_mapping(struct dm_ca/
policy_lookup	dm-cache-policy-internal.h	/^static inline int policy_lookup(struct dm_cache_po/
policy_map	dm-cache-policy-internal.h	/^static inline int policy_map(struct dm_cache_polic/
policy_operation	dm-cache-policy.h	/^enum policy_operation {$/
policy_remove_cblock	dm-cache-policy-internal.h	/^static inline int policy_remove_cblock(struct dm_c/
policy_remove_mapping	dm-cache-policy-internal.h	/^static inline void policy_remove_mapping(struct dm/
policy_residency	dm-cache-policy-internal.h	/^static inline dm_cblock_t policy_residency(struct /
policy_result	dm-cache-policy.h	/^struct policy_result {$/
policy_set_config_value	dm-cache-policy-internal.h	/^static inline int policy_set_config_value(struct d/
policy_set_dirty	dm-cache-policy-internal.h	/^static inline void policy_set_dirty(struct dm_cach/
policy_tick	dm-cache-policy-internal.h	/^static inline void policy_tick(struct dm_cache_pol/
policy_unchanged	dm-cache-metadata.c	/^static bool policy_unchanged(struct dm_cache_metad/
policy_walk_mappings	dm-cache-policy-internal.h	/^static inline int policy_walk_mappings(struct dm_c/
policy_writeback_work	dm-cache-policy-internal.h	/^static inline int policy_writeback_work(struct dm_/
pool	dm-thin.c	/^struct pool {$/
pool_c	dm-thin.c	/^struct pool_c {$/
pool_create	dm-thin.c	/^static struct pool *pool_create(struct mapped_devi/
pool_ctr	dm-thin.c	/^static int pool_ctr(struct dm_target *ti, unsigned/
pool_dtr	dm-thin.c	/^static void pool_dtr(struct dm_target *ti)$/
pool_features	dm-thin.c	/^struct pool_features {$/
pool_features_init	dm-thin.c	/^static void pool_features_init(struct pool_feature/
pool_info	raid1.h	/^struct pool_info {$/
pool_io_hints	dm-thin.c	/^static void pool_io_hints(struct dm_target *ti, st/
pool_is_congested	dm-thin.c	/^static int pool_is_congested(struct dm_target_call/
pool_iterate_devices	dm-thin.c	/^static int pool_iterate_devices(struct dm_target */
pool_map	dm-thin.c	/^static int pool_map(struct dm_target *ti, struct b/
pool_merge	dm-thin.c	/^static int pool_merge(struct dm_target *ti, struct/
pool_message	dm-thin.c	/^static int pool_message(struct dm_target *ti, unsi/
pool_mode	dm-thin.c	/^enum pool_mode {$/
pool_postsuspend	dm-thin.c	/^static void pool_postsuspend(struct dm_target *ti)/
pool_preresume	dm-thin.c	/^static int pool_preresume(struct dm_target *ti)$/
pool_resume	dm-thin.c	/^static void pool_resume(struct dm_target *ti)$/
pool_status	dm-thin.c	/^static void pool_status(struct dm_target *ti, stat/
pool_table_init	dm-thin.c	/^static void pool_table_init(void)$/
pool_work	dm-thin.c	/^struct pool_work {$/
pool_work_complete	dm-thin.c	/^static void pool_work_complete(struct pool_work *p/
pool_work_wait	dm-thin.c	/^static void pool_work_wait(struct pool_work *pw, s/
pop	dm-cache-policy-mq.c	/^static struct entry *pop(struct mq_policy *mq, str/
populate_table	dm-ioctl.c	/^static int populate_table(struct dm_table *table,$/
pre_cache_entry_found	dm-cache-policy-mq.c	/^static int pre_cache_entry_found(struct mq_policy /
pre_cache_to_cache	dm-cache-policy-mq.c	/^static int pre_cache_to_cache(struct mq_policy *mq/
prealloc	dm-cache-target.c	/^struct prealloc {$/
prealloc_data_structs	dm-cache-target.c	/^static int prealloc_data_structs(struct cache *cac/
prealloc_free_structs	dm-cache-target.c	/^static void prealloc_free_structs(struct cache *ca/
prealloc_get_cell	dm-cache-target.c	/^static struct dm_bio_prison_cell *prealloc_get_cel/
prealloc_get_migration	dm-cache-target.c	/^static struct dm_cache_migration *prealloc_get_mig/
prealloc_put_cell	dm-cache-target.c	/^static void prealloc_put_cell(struct prealloc *p, /
prepare_bio_on_write	dm-dedup-rw.c	/^struct bio *prepare_bio_on_write(struct dedup_conf/
prepare_bio_with_pbn	dm-dedup-rw.c	/^static struct bio *prepare_bio_with_pbn(struct ded/
prepare_bio_without_pbn	dm-dedup-rw.c	/^static struct bio *prepare_bio_without_pbn(struct /
prepare_superblock	dm-era-target.c	/^static void prepare_superblock(struct era_metadata/
print_conf	raid1.c	/^static void print_conf(struct r1conf *conf)$/
print_desc	md.c	/^static void print_desc(mdp_disk_t *desc)$/
print_multipath_conf	multipath.c	/^static void print_multipath_conf (struct mpconf *c/
print_raid5_conf	raid5.c	/^static void print_raid5_conf (struct r5conf *conf)/
print_rdev	md.c	/^static void print_rdev(struct md_rdev *rdev, int m/
print_sb_1	md.c	/^static void print_sb_1(struct mdp_superblock_1 *sb/
print_sb_90	md.c	/^static void print_sb_90(mdp_super_t *sb)$/
priority_group	dm-mpath.c	/^struct priority_group {$/
process_bio	dm-cache-target.c	/^static void process_bio(struct cache *cache, struc/
process_bio_fail	dm-thin.c	/^static void process_bio_fail(struct thin_c *tc, st/
process_bio_read_only	dm-thin.c	/^static void process_bio_read_only(struct thin_c *t/
process_bio_success	dm-thin.c	/^static void process_bio_success(struct thin_c *tc,/
process_checks	raid1.c	/^static int process_checks(struct r1bio *r1_bio)$/
process_config_option	dm-cache-target.c	/^static int process_config_option(struct cache *cac/
process_create_snap_mesg	dm-thin.c	/^static int process_create_snap_mesg(unsigned argc,/
process_create_thin_mesg	dm-thin.c	/^static int process_create_thin_mesg(unsigned argc,/
process_deferred_bios	dm-cache-target.c	/^static void process_deferred_bios(struct cache *ca/
process_deferred_flush_bios	dm-cache-target.c	/^static void process_deferred_flush_bios(struct cac/
process_deferred_writethrough_bios	dm-cache-target.c	/^static void process_deferred_writethrough_bios(str/
process_delete_mesg	dm-thin.c	/^static int process_delete_mesg(unsigned argc, char/
process_discard	dm-thin.c	/^static void process_discard(struct thin_c *tc, str/
process_discard_bio	dm-cache-target.c	/^static void process_discard_bio(struct cache *cach/
process_flush_bio	dm-cache-target.c	/^static void process_flush_bio(struct cache *cache,/
process_invalidate_cblocks_message	dm-cache-target.c	/^static int process_invalidate_cblocks_message(stru/
process_invalidation_request	dm-cache-target.c	/^static void process_invalidation_request(struct ca/
process_invalidation_requests	dm-cache-target.c	/^static void process_invalidation_requests(struct c/
process_jobs	dm-kcopyd.c	/^static int process_jobs(struct list_head *jobs, st/
process_migrations	dm-cache-target.c	/^static void process_migrations(struct cache *cache/
process_old_eras	dm-era-target.c	/^static void process_old_eras(struct era *era)$/
process_prepared	dm-thin.c	/^static void process_prepared(struct pool *pool, st/
process_prepared_discard	dm-thin.c	/^static void process_prepared_discard(struct dm_thi/
process_prepared_discard_fail	dm-thin.c	/^static void process_prepared_discard_fail(struct d/
process_prepared_discard_passdown	dm-thin.c	/^static void process_prepared_discard_passdown(stru/
process_prepared_mapping	dm-thin.c	/^static void process_prepared_mapping(struct dm_thi/
process_prepared_mapping_fail	dm-thin.c	/^static void process_prepared_mapping_fail(struct d/
process_release_metadata_snap_mesg	dm-thin.c	/^static int process_release_metadata_snap_mesg(unsi/
process_reserve_metadata_snap_mesg	dm-thin.c	/^static int process_reserve_metadata_snap_mesg(unsi/
process_rpc_calls	dm-era-target.c	/^static void process_rpc_calls(struct era *era)$/
process_set_region_mappings	dm-switch.c	/^static int process_set_region_mappings(struct swit/
process_set_transaction_id_mesg	dm-thin.c	/^static int process_set_transaction_id_mesg(unsigne/
process_shared_bio	dm-thin.c	/^static void process_shared_bio(struct thin_c *tc, /
process_thin_deferred_bios	dm-thin.c	/^static void process_thin_deferred_bios(struct thin/
promote	dm-cache-target.c	/^static void promote(struct cache *cache, struct pr/
provision_block	dm-thin.c	/^static void provision_block(struct thin_c *tc, str/
ps_internal	dm-path-selector.c	/^struct ps_internal {$/
pst_to_psi	dm-path-selector.c	/^#define pst_to_psi(__pst) container_of((__pst), st/
pstore	dm-snap-persistent.c	/^struct pstore {$/
push	dm-cache-policy-mq.c	/^static void push(struct mq_policy *mq, struct entr/
push_head	dm-kcopyd.c	/^static void push_head(struct list_head *jobs, stru/
put_all_bios	raid1.c	/^static void put_all_bios(struct r1conf *conf, stru/
put_buf	raid1.c	/^static void put_buf(struct r1bio *r1_bio)$/
put_policy	dm-cache-policy.c	/^static void put_policy(struct dm_cache_policy_type/
put_slot	dm-dedup-hash.c	/^static void put_slot(struct hash_desc_table *desc_/
put_type	dm-exception-store.c	/^static void put_type(struct dm_exception_store_typ/
ql_add_path	dm-queue-length.c	/^static int ql_add_path(struct path_selector *ps, s/
ql_create	dm-queue-length.c	/^static int ql_create(struct path_selector *ps, uns/
ql_destroy	dm-queue-length.c	/^static void ql_destroy(struct path_selector *ps)$/
ql_end_io	dm-queue-length.c	/^static int ql_end_io(struct path_selector *ps, str/
ql_fail_path	dm-queue-length.c	/^static void ql_fail_path(struct path_selector *ps,/
ql_free_paths	dm-queue-length.c	/^static void ql_free_paths(struct list_head *paths)/
ql_reinstate_path	dm-queue-length.c	/^static int ql_reinstate_path(struct path_selector /
ql_select_path	dm-queue-length.c	/^static struct dm_path *ql_select_path(struct path_/
ql_start_io	dm-queue-length.c	/^static int ql_start_io(struct path_selector *ps, s/
ql_status	dm-queue-length.c	/^static int ql_status(struct path_selector *ps, str/
queue	dm-cache-policy-mq.c	/^struct queue {$/
queue_bio	dm-raid1.c	/^static void queue_bio(struct mirror_set *ms, struc/
queue_empty	dm-cache-policy-mq.c	/^static bool queue_empty(struct queue *q)$/
queue_if_no_path	dm-mpath.c	/^static int queue_if_no_path(struct multipath *m, u/
queue_init	dm-cache-policy-mq.c	/^static void queue_init(struct queue *q)$/
queue_io	dm.c	/^static void queue_io(struct mapped_device *md, str/
queue_level	dm-cache-policy-mq.c	/^static unsigned queue_level(struct entry *e)$/
queue_pop	dm-cache-policy-mq.c	/^static struct list_head *queue_pop(struct queue *q/
queue_push	dm-cache-policy-mq.c	/^static void queue_push(struct queue *q, unsigned l/
queue_quiesced_migration	dm-cache-target.c	/^static void queue_quiesced_migration(struct dm_cac/
queue_quiesced_migrations	dm-cache-target.c	/^static void queue_quiesced_migrations(struct cache/
queue_remove	dm-cache-policy-mq.c	/^static void queue_remove(struct list_head *elt)$/
queue_shift_down	dm-cache-policy-mq.c	/^static void queue_shift_down(struct queue *q)$/
queue_supports_sg_merge	dm-table.c	/^static int queue_supports_sg_merge(struct dm_targe/
queue_timeout	dm-delay.c	/^static void queue_timeout(struct delay_c *dc, unsi/
quiesce_migration	dm-cache-target.c	/^static void quiesce_migration(struct dm_cache_migr/
r0conf	raid0.h	/^struct r0conf {$/
r10_sync_page_io	raid10.c	/^static int r10_sync_page_io(struct md_rdev *rdev, /
r10bio	raid10.h	/^struct r10bio {$/
r10bio_pool_alloc	raid10.c	/^static void * r10bio_pool_alloc(gfp_t gfp_flags, v/
r10bio_pool_free	raid10.c	/^static void r10bio_pool_free(void *r10_bio, void */
r10bio_state	raid10.h	/^enum r10bio_state {$/
r10buf_pool_alloc	raid10.c	/^static void * r10buf_pool_alloc(gfp_t gfp_flags, v/
r10buf_pool_free	raid10.c	/^static void r10buf_pool_free(void *__r10_bio, void/
r10conf	raid10.h	/^struct r10conf {$/
r10dev	raid10.h	/^	struct r10dev {$/
r1_bio_write_done	raid1.c	/^static void r1_bio_write_done(struct r1bio *r1_bio/
r1_sync_page_io	raid1.c	/^static int r1_sync_page_io(struct md_rdev *rdev, s/
r1bio	raid1.h	/^struct r1bio {$/
r1bio_pool_alloc	raid1.c	/^static void * r1bio_pool_alloc(gfp_t gfp_flags, vo/
r1bio_pool_free	raid1.c	/^static void r1bio_pool_free(void *r1_bio, void *da/
r1buf_pool_alloc	raid1.c	/^static void * r1buf_pool_alloc(gfp_t gfp_flags, vo/
r1buf_pool_free	raid1.c	/^static void r1buf_pool_free(void *__r1_bio, void */
r1conf	raid1.h	/^struct r1conf {$/
r5_next_bio	raid5.c	/^static inline struct bio *r5_next_bio(struct bio */
r5conf	raid5.h	/^struct r5conf {$/
r5dev	raid5.h	/^	struct r5dev {$/
r5dev_flags	raid5.h	/^enum r5dev_flags {$/
r5worker	raid5.h	/^struct r5worker {$/
r5worker_group	raid5.h	/^struct r5worker_group {$/
raid0_congested	raid0.c	/^static int raid0_congested(void *data, int bits)$/
raid0_exit	raid0.c	/^static void raid0_exit (void)$/
raid0_init	raid0.c	/^static int __init raid0_init (void)$/
raid0_make_request	raid0.c	/^static void raid0_make_request(struct mddev *mddev/
raid0_mergeable_bvec	raid0.c	/^static int raid0_mergeable_bvec(struct request_que/
raid0_quiesce	raid0.c	/^static void raid0_quiesce(struct mddev *mddev, int/
raid0_run	raid0.c	/^static int raid0_run(struct mddev *mddev)$/
raid0_size	raid0.c	/^static sector_t raid0_size(struct mddev *mddev, se/
raid0_status	raid0.c	/^static void raid0_status(struct seq_file *seq, str/
raid0_stop	raid0.c	/^static int raid0_stop(struct mddev *mddev)$/
raid0_takeover	raid0.c	/^static void *raid0_takeover(struct mddev *mddev)$/
raid0_takeover_raid1	raid0.c	/^static void *raid0_takeover_raid1(struct mddev *md/
raid0_takeover_raid10	raid0.c	/^static void *raid0_takeover_raid10(struct mddev *m/
raid0_takeover_raid45	raid0.c	/^static void *raid0_takeover_raid45(struct mddev *m/
raid10_add_disk	raid10.c	/^static int raid10_add_disk(struct mddev *mddev, st/
raid10_check_reshape	raid10.c	/^static int raid10_check_reshape(struct mddev *mdde/
raid10_congested	raid10.c	/^static int raid10_congested(void *data, int bits)$/
raid10_end_read_request	raid10.c	/^static void raid10_end_read_request(struct bio *bi/
raid10_end_write_request	raid10.c	/^static void raid10_end_write_request(struct bio *b/
raid10_find_phys	raid10.c	/^static void raid10_find_phys(struct r10conf *conf,/
raid10_find_virt	raid10.c	/^static sector_t raid10_find_virt(struct r10conf *c/
raid10_finish_reshape	raid10.c	/^static void raid10_finish_reshape(struct mddev *md/
raid10_format_to_md_layout	dm-raid.c	/^static int raid10_format_to_md_layout(char *format/
raid10_info	raid10.h	/^struct raid10_info {$/
raid10_md_layout_to_copies	dm-raid.c	/^static unsigned raid10_md_layout_to_copies(int lay/
raid10_md_layout_to_format	dm-raid.c	/^static char *raid10_md_layout_to_format(int layout/
raid10_mergeable_bvec	raid10.c	/^static int raid10_mergeable_bvec(struct request_qu/
raid10_plug_cb	raid10.c	/^struct raid10_plug_cb {$/
raid10_quiesce	raid10.c	/^static void raid10_quiesce(struct mddev *mddev, in/
raid10_remove_disk	raid10.c	/^static int raid10_remove_disk(struct mddev *mddev,/
raid10_resize	raid10.c	/^static int raid10_resize(struct mddev *mddev, sect/
raid10_size	raid10.c	/^raid10_size(struct mddev *mddev, sector_t sectors,/
raid10_spare_active	raid10.c	/^static int raid10_spare_active(struct mddev *mddev/
raid10_start_reshape	raid10.c	/^static int raid10_start_reshape(struct mddev *mdde/
raid10_takeover	raid10.c	/^static void *raid10_takeover(struct mddev *mddev)$/
raid10_takeover_raid0	raid10.c	/^static void *raid10_takeover_raid0(struct mddev *m/
raid10_unplug	raid10.c	/^static void raid10_unplug(struct blk_plug_cb *cb, /
raid10d	raid10.c	/^static void raid10d(struct md_thread *thread)$/
raid1_add_disk	raid1.c	/^static int raid1_add_disk(struct mddev *mddev, str/
raid1_congested	raid1.c	/^static int raid1_congested(void *data, int bits)$/
raid1_end_read_request	raid1.c	/^static void raid1_end_read_request(struct bio *bio/
raid1_end_write_request	raid1.c	/^static void raid1_end_write_request(struct bio *bi/
raid1_info	raid1.h	/^struct raid1_info {$/
raid1_mergeable_bvec	raid1.c	/^static int raid1_mergeable_bvec(struct request_que/
raid1_plug_cb	raid1.c	/^struct raid1_plug_cb {$/
raid1_quiesce	raid1.c	/^static void raid1_quiesce(struct mddev *mddev, int/
raid1_remove_disk	raid1.c	/^static int raid1_remove_disk(struct mddev *mddev, /
raid1_reshape	raid1.c	/^static int raid1_reshape(struct mddev *mddev)$/
raid1_resize	raid1.c	/^static int raid1_resize(struct mddev *mddev, secto/
raid1_size	raid1.c	/^static sector_t raid1_size(struct mddev *mddev, se/
raid1_spare_active	raid1.c	/^static int raid1_spare_active(struct mddev *mddev)/
raid1_takeover	raid1.c	/^static void *raid1_takeover(struct mddev *mddev)$/
raid1_unplug	raid1.c	/^static void raid1_unplug(struct blk_plug_cb *cb, b/
raid1d	raid1.c	/^static void raid1d(struct md_thread *thread)$/
raid456_cpu_notify	raid5.c	/^static int raid456_cpu_notify(struct notifier_bloc/
raid45_takeover_raid0	raid5.c	/^static void *raid45_takeover_raid0(struct mddev *m/
raid4_takeover	raid5.c	/^static void *raid4_takeover(struct mddev *mddev)$/
raid5_activate_delayed	raid5.c	/^static void raid5_activate_delayed(struct r5conf */
raid5_add_disk	raid5.c	/^static int raid5_add_disk(struct mddev *mddev, str/
raid5_align_endio	raid5.c	/^static void raid5_align_endio(struct bio *bi, int /
raid5_alloc_percpu	raid5.c	/^static int raid5_alloc_percpu(struct r5conf *conf)/
raid5_bi_processed_stripes	raid5.c	/^static inline int raid5_bi_processed_stripes(struc/
raid5_build_block	raid5.c	/^static void raid5_build_block(struct stripe_head */
raid5_check_reshape	raid5.c	/^static int raid5_check_reshape(struct mddev *mddev/
raid5_compute_sector	raid5.c	/^static sector_t raid5_compute_sector(struct r5conf/
raid5_congested	raid5.c	/^static int raid5_congested(void *data, int bits)$/
raid5_dec_bi_active_stripes	raid5.c	/^static inline int raid5_dec_bi_active_stripes(stru/
raid5_do_work	raid5.c	/^static void raid5_do_work(struct work_struct *work/
raid5_end_read_request	raid5.c	/^static void raid5_end_read_request(struct bio * bi/
raid5_end_write_request	raid5.c	/^static void raid5_end_write_request(struct bio *bi/
raid5_exit	raid5.c	/^static void raid5_exit(void)$/
raid5_finish_reshape	raid5.c	/^static void raid5_finish_reshape(struct mddev *mdd/
raid5_free_percpu	raid5.c	/^static void raid5_free_percpu(struct r5conf *conf)/
raid5_inc_bi_active_stripes	raid5.c	/^static inline void raid5_inc_bi_active_stripes(str/
raid5_init	raid5.c	/^static int __init raid5_init(void)$/
raid5_mergeable_bvec	raid5.c	/^static int raid5_mergeable_bvec(struct request_que/
raid5_percpu	raid5.h	/^	struct raid5_percpu {$/
raid5_plug_cb	raid5.c	/^struct raid5_plug_cb {$/
raid5_quiesce	raid5.c	/^static void raid5_quiesce(struct mddev *mddev, int/
raid5_remove_disk	raid5.c	/^static int raid5_remove_disk(struct mddev *mddev, /
raid5_resize	raid5.c	/^static int raid5_resize(struct mddev *mddev, secto/
raid5_set_bi_processed_stripes	raid5.c	/^static inline void raid5_set_bi_processed_stripes(/
raid5_set_bi_stripes	raid5.c	/^static inline void raid5_set_bi_stripes(struct bio/
raid5_set_cache_size	raid5.c	/^raid5_set_cache_size(struct mddev *mddev, int size/
raid5_show_group_thread_cnt	raid5.c	/^raid5_show_group_thread_cnt(struct mddev *mddev, c/
raid5_show_preread_threshold	raid5.c	/^raid5_show_preread_threshold(struct mddev *mddev, /
raid5_show_skip_copy	raid5.c	/^raid5_show_skip_copy(struct mddev *mddev, char *pa/
raid5_show_stripe_cache_size	raid5.c	/^raid5_show_stripe_cache_size(struct mddev *mddev, /
raid5_size	raid5.c	/^raid5_size(struct mddev *mddev, sector_t sectors, /
raid5_spare_active	raid5.c	/^static int raid5_spare_active(struct mddev *mddev)/
raid5_start_reshape	raid5.c	/^static int raid5_start_reshape(struct mddev *mddev/
raid5_store_group_thread_cnt	raid5.c	/^raid5_store_group_thread_cnt(struct mddev *mddev, /
raid5_store_preread_threshold	raid5.c	/^raid5_store_preread_threshold(struct mddev *mddev,/
raid5_store_skip_copy	raid5.c	/^raid5_store_skip_copy(struct mddev *mddev, const c/
raid5_store_stripe_cache_size	raid5.c	/^raid5_store_stripe_cache_size(struct mddev *mddev,/
raid5_takeover	raid5.c	/^static void *raid5_takeover(struct mddev *mddev)$/
raid5_takeover_raid1	raid5.c	/^static void *raid5_takeover_raid1(struct mddev *md/
raid5_takeover_raid6	raid5.c	/^static void *raid5_takeover_raid6(struct mddev *md/
raid5_unplug	raid5.c	/^static void raid5_unplug(struct blk_plug_cb *blk_c/
raid5_wakeup_stripe_thread	raid5.c	/^static void raid5_wakeup_stripe_thread(struct stri/
raid5d	raid5.c	/^static void raid5d(struct md_thread *thread)$/
raid6_check_reshape	raid5.c	/^static int raid6_check_reshape(struct mddev *mddev/
raid6_d0	raid5.c	/^static inline int raid6_d0(struct stripe_head *sh)/
raid6_idx_to_slot	raid5.c	/^static int raid6_idx_to_slot(int idx, struct strip/
raid6_next_disk	raid5.c	/^static inline int raid6_next_disk(int disk, int ra/
raid6_takeover	raid5.c	/^static void *raid6_takeover(struct mddev *mddev)$/
raid_ctr	dm-raid.c	/^static int raid_ctr(struct dm_target *ti, unsigned/
raid_dev	dm-raid.c	/^struct raid_dev {$/
raid_disks_show	md.c	/^raid_disks_show(struct mddev *mddev, char *page)$/
raid_disks_store	md.c	/^raid_disks_store(struct mddev *mddev, const char */
raid_dtr	dm-raid.c	/^static void raid_dtr(struct dm_target *ti)$/
raid_end_bio_io	raid1.c	/^static void raid_end_bio_io(struct r1bio *r1_bio)$/
raid_exit	faulty.c	/^static void raid_exit(void)$/
raid_init	faulty.c	/^static int __init raid_init(void)$/
raid_io_hints	dm-raid.c	/^static void raid_io_hints(struct dm_target *ti, st/
raid_is_congested	dm-raid.c	/^static int raid_is_congested(struct dm_target_call/
raid_iterate_devices	dm-raid.c	/^static int raid_iterate_devices(struct dm_target */
raid_map	dm-raid.c	/^static int raid_map(struct dm_target *ti, struct b/
raid_message	dm-raid.c	/^static int raid_message(struct dm_target *ti, unsi/
raid_postsuspend	dm-raid.c	/^static void raid_postsuspend(struct dm_target *ti)/
raid_presuspend	dm-raid.c	/^static void raid_presuspend(struct dm_target *ti)$/
raid_resume	dm-raid.c	/^static void raid_resume(struct dm_target *ti)$/
raid_run_ops	raid5.c	/^static void raid_run_ops(struct stripe_head *sh, u/
raid_set	dm-raid.c	/^struct raid_set {$/
raid_status	dm-raid.c	/^static void raid_status(struct dm_target *ti, stat/
raid_type	dm-raid.c	/^static struct raid_type {$/
raise_barrier	raid1.c	/^static void raise_barrier(struct r1conf *conf)$/
rdev_attr_show	md.c	/^rdev_attr_show(struct kobject *kobj, struct attrib/
rdev_attr_store	md.c	/^rdev_attr_store(struct kobject *kobj, struct attri/
rdev_clear_badblocks	md.c	/^int rdev_clear_badblocks(struct md_rdev *rdev, sec/
rdev_dec_pending	md.h	/^static inline void rdev_dec_pending(struct md_rdev/
rdev_for_each	md.h	/^#define rdev_for_each(rdev, mddev)				\\$/
rdev_for_each_list	md.h	/^#define rdev_for_each_list(rdev, tmp, head)				\\$/
rdev_for_each_rcu	md.h	/^#define rdev_for_each_rcu(rdev, mddev)				\\$/
rdev_for_each_safe	md.h	/^#define rdev_for_each_safe(rdev, tmp, mddev)				\\/
rdev_free	md.c	/^static void rdev_free(struct kobject *ko)$/
rdev_set_badblocks	md.c	/^int rdev_set_badblocks(struct md_rdev *rdev, secto/
rdev_size_show	md.c	/^rdev_size_show(struct md_rdev *rdev, char *page)$/
rdev_size_store	md.c	/^rdev_size_store(struct md_rdev *rdev, const char */
rdev_sysfs_entry	md.c	/^struct rdev_sysfs_entry {$/
read_async_bio	dm-raid1.c	/^static void read_async_bio(struct mirror *m, struc/
read_balance	raid1.c	/^static int read_balance(struct r1conf *conf, struc/
read_callback	dm-raid1.c	/^static void read_callback(unsigned long error, voi/
read_dev_id	dm-thin.c	/^static int read_dev_id(char *arg, dm_thin_id *dev_/
read_disk_sb	dm-raid.c	/^static int read_disk_sb(struct md_rdev *rdev, int /
read_endio	dm-bufio.c	/^static void read_endio(struct bio *bio, int error)/
read_exception	dm-snap-persistent.c	/^static void read_exception(struct pstore *ps, void/
read_exceptions	dm-snap-persistent.c	/^static int read_exceptions(struct pstore *ps,$/
read_header	dm-log.c	/^static int read_header(struct log_c *log)$/
read_page	bitmap.c	/^static int read_page(struct file *file, unsigned l/
read_pbn	dm-dedup-rw.c	/^struct page* read_pbn(struct dedup_config *dc, uin/
read_pending_exceptions_done_count	dm-snap.c	/^static uint64_t read_pending_exceptions_done_count/
read_sb_page	bitmap.c	/^static int read_sb_page(struct mddev *mddev, loff_/
read_superblock_fields	dm-cache-metadata.c	/^static void read_superblock_fields(struct dm_cache/
realloc_argv	dm-table.c	/^static char **realloc_argv(unsigned *array_size, c/
receiving_pkg	dm-log-userspace-transfer.c	/^struct receiving_pkg {$/
reconstruct_states	raid5.h	/^enum reconstruct_states {$/
recover	dm-raid1.c	/^static int recover(struct mirror_set *ms, struct d/
recovery_complete	dm-raid1.c	/^static void recovery_complete(int read_err, unsign/
recovery_request_write	raid10.c	/^static void recovery_request_write(struct mddev *m/
recovery_start_show	md.c	/^static ssize_t recovery_start_show(struct md_rdev /
recovery_start_store	md.c	/^static ssize_t recovery_start_store(struct md_rdev/
region_in_sync	dm-raid1.c	/^static inline int region_in_sync(struct mirror_set/
region_table_slot_t	dm-switch.c	/^typedef unsigned long region_table_slot_t;$/
register_md_personality	md.c	/^int register_md_personality(struct md_personality /
register_snapshot	dm-snap.c	/^static int register_snapshot(struct dm_snapshot *s/
reinstate_path	dm-mpath.c	/^static int reinstate_path(struct pgpath *pgpath)$/
release_inactive_stripe_list	raid5.c	/^static void release_inactive_stripe_list(struct r5/
release_stripe	raid5.c	/^static void release_stripe(struct stripe_head *sh)/
release_stripe_list	raid5.c	/^static int release_stripe_list(struct r5conf *conf/
release_stripe_plug	raid5.c	/^static void release_stripe_plug(struct mddev *mdde/
remap	dm-thin.c	/^static void remap(struct thin_c *tc, struct bio *b/
remap_and_issue	dm-thin.c	/^static void remap_and_issue(struct thin_c *tc, str/
remap_exception	dm-snap.c	/^static void remap_exception(struct dm_snapshot *s,/
remap_to_cache	dm-cache-target.c	/^static void remap_to_cache(struct cache *cache, st/
remap_to_cache_dirty	dm-cache-target.c	/^static void remap_to_cache_dirty(struct cache *cac/
remap_to_origin	dm-cache-target.c	/^static void remap_to_origin(struct cache *cache, s/
remap_to_origin_and_issue	dm-thin.c	/^static void remap_to_origin_and_issue(struct thin_/
remap_to_origin_clear_discard	dm-cache-target.c	/^static void remap_to_origin_clear_discard(struct c/
remap_to_origin_then_cache	dm-cache-target.c	/^static void remap_to_origin_then_cache(struct cach/
remove_all	dm-ioctl.c	/^static int remove_all(struct dm_ioctl *param, size/
remove_and_add_spares	md.c	/^static int remove_and_add_spares(struct mddev *mdd/
remove_bio_from_retry	raid5.c	/^static struct bio *remove_bio_from_retry(struct r5/
remove_cache_hash_entry	dm-cache-policy-cleaner.c	/^static void remove_cache_hash_entry(struct wb_cach/
remove_hash	raid5.c	/^static inline void remove_hash(struct stripe_head /
remove_single_exception_chunk	dm-snap.c	/^static int remove_single_exception_chunk(struct dm/
req_of_dmreq	dm-crypt.c	/^static struct ablkcipher_request *req_of_dmreq(str/
request_invalidation	dm-cache-target.c	/^static int request_invalidation(struct cache *cach/
requeue_and_update_tick	dm-cache-policy-mq.c	/^static void requeue_and_update_tick(struct mq_poli/
requeue_bio_list	dm-thin.c	/^static void requeue_bio_list(struct thin_c *tc, st/
requeue_bios	dm-thin.c	/^static void requeue_bios(struct pool *pool)$/
requeue_deferred_io	dm-cache-target.c	/^static void requeue_deferred_io(struct cache *cach/
requeue_io	dm-thin.c	/^static void requeue_io(struct thin_c *tc)$/
reregister_snapshot	dm-snap.c	/^static void reregister_snapshot(struct dm_snapshot/
reschedule_retry	raid1.c	/^static void reschedule_retry(struct r1bio *r1_bio)/
reshape	faulty.c	/^static int reshape(struct mddev *mddev)$/
reshape_direction_show	md.c	/^reshape_direction_show(struct mddev *mddev, char */
reshape_direction_store	md.c	/^reshape_direction_store(struct mddev *mddev, const/
reshape_position_show	md.c	/^reshape_position_show(struct mddev *mddev, char *p/
reshape_position_store	md.c	/^reshape_position_store(struct mddev *mddev, const /
reshape_request	raid10.c	/^static sector_t reshape_request(struct mddev *mdde/
reshape_request_write	raid10.c	/^static void reshape_request_write(struct mddev *md/
resize_cache_dev	dm-cache-target.c	/^static int resize_cache_dev(struct cache *cache, d/
resize_stripes	raid5.c	/^static int resize_stripes(struct r5conf *conf, int/
restart_array	md.c	/^static int restart_array(struct mddev *mddev)$/
resync_start_show	md.c	/^resync_start_show(struct mddev *mddev, char *page)/
resync_start_store	md.c	/^resync_start_store(struct mddev *mddev, const char/
retrieve_deps	dm-ioctl.c	/^static void retrieve_deps(struct dm_table *table,$/
retrieve_io_and_region_from_bio	dm-io.c	/^static void retrieve_io_and_region_from_bio(struct/
retrieve_status	dm-ioctl.c	/^static void retrieve_status(struct dm_table *table/
retry_aligned_read	raid5.c	/^static int  retry_aligned_read(struct r5conf *conf/
retry_bios_on_resume	dm-thin.c	/^static void retry_bios_on_resume(struct pool *pool/
retry_on_resume	dm-thin.c	/^static void retry_on_resume(struct bio *bio)$/
retry_origin_bios	dm-snap.c	/^static void retry_origin_bios(struct dm_snapshot */
return_io	raid5.c	/^static void return_io(struct bio *return_bi)$/
rh_hash	dm-region-hash.c	/^static unsigned rh_hash(struct dm_region_hash *rh,/
rh_inc	dm-region-hash.c	/^static void rh_inc(struct dm_region_hash *rh, regi/
rpc	dm-era-target.c	/^struct rpc {$/
rq_completed	dm.c	/^static void rq_completed(struct mapped_device *md,/
rr_add_path	dm-round-robin.c	/^static int rr_add_path(struct path_selector *ps, s/
rr_create	dm-round-robin.c	/^static int rr_create(struct path_selector *ps, uns/
rr_destroy	dm-round-robin.c	/^static void rr_destroy(struct path_selector *ps)$/
rr_fail_path	dm-round-robin.c	/^static void rr_fail_path(struct path_selector *ps,/
rr_reinstate_path	dm-round-robin.c	/^static int rr_reinstate_path(struct path_selector /
rr_select_path	dm-round-robin.c	/^static struct dm_path *rr_select_path(struct path_/
rr_status	dm-round-robin.c	/^static int rr_status(struct path_selector *ps, str/
run	faulty.c	/^static int run(struct mddev *mddev)$/
run_complete_job	dm-kcopyd.c	/^static int run_complete_job(struct kcopyd_job *job/
run_io_job	dm-kcopyd.c	/^static int run_io_job(struct kcopyd_job *job)$/
run_pages_job	dm-kcopyd.c	/^static int run_pages_job(struct kcopyd_job *job)$/
rw_header	dm-log.c	/^static int rw_header(struct log_c *lc, int rw)$/
safe_delay_show	md.c	/^safe_delay_show(struct mddev *mddev, char *page)$/
safe_delay_store	md.c	/^safe_delay_store(struct mddev *mddev, const char */
safe_put_page	md.h	/^static inline void safe_put_page(struct page *p)$/
save_and_set_endio	dm-thin.c	/^static void save_and_set_endio(struct bio *bio, bi/
save_hint	dm-cache-metadata.c	/^static int save_hint(void *context, dm_cblock_t cb/
save_sm_root	dm-era-target.c	/^static int save_sm_root(struct era_metadata *md)$/
save_sm_roots	dm-thin-metadata.c	/^static int save_sm_roots(struct dm_pool_metadata */
save_stats	dm-cache-target.c	/^static void save_stats(struct cache *cache)$/
sb_check	dm-cache-metadata.c	/^static int sb_check(struct dm_block_validator *v,$/
sb_equal	md.c	/^static int sb_equal(mdp_super_t *sb1, mdp_super_t /
sb_prepare_for_write	dm-cache-metadata.c	/^static void sb_prepare_for_write(struct dm_block_v/
schedule_copy	dm-thin.c	/^static void schedule_copy(struct thin_c *tc, dm_bl/
schedule_external_copy	dm-thin.c	/^static void schedule_external_copy(struct thin_c */
schedule_internal_copy	dm-thin.c	/^static void schedule_internal_copy(struct thin_c */
schedule_reconstruction	raid5.c	/^schedule_reconstruction(struct stripe_head *sh, st/
schedule_zero	dm-thin.c	/^static void schedule_zero(struct thin_c *tc, dm_bl/
scribble_len	raid5.c	/^static size_t scribble_len(int num)$/
sector_to_chunk	dm-exception-store.h	/^static inline chunk_t sector_to_chunk(struct dm_ex/
segment_complete	dm-kcopyd.c	/^static void segment_complete(int read_err, unsigne/
selector	dm-queue-length.c	/^struct selector {$/
set_array_info	md.c	/^static int set_array_info(struct mddev * mddev, md/
set_bitmap_file	md.c	/^static int set_bitmap_file(struct mddev *mddev, in/
set_chunk_size	dm-exception-store.c	/^static int set_chunk_size(struct dm_exception_stor/
set_clean_shutdown	dm-cache-metadata.c	/^static unsigned long set_clean_shutdown(unsigned l/
set_config_value	dm-cache-target.c	/^static int set_config_value(struct cache *cache, c/
set_config_values	dm-cache-target.c	/^static int set_config_values(struct cache *cache, /
set_default_mirror	dm-raid1.c	/^static void set_default_mirror(struct mirror *m)$/
set_dirty	dm-cache-target.c	/^static void set_dirty(struct cache *cache, dm_oblo/
set_discard	dm-cache-target.c	/^static void set_discard(struct cache *cache, dm_ob/
set_discard_limits	dm-cache-target.c	/^static void set_discard_limits(struct cache *cache/
set_disk_faulty	md.c	/^static int set_disk_faulty(struct mddev *mddev, de/
set_mapinfo	dm-mpath.c	/^static int set_mapinfo(struct multipath *m, union /
set_page_attr	bitmap.c	/^static inline void set_page_attr(struct bitmap *bi/
set_pool_mode	dm-thin.c	/^static void set_pool_mode(struct pool *pool, enum /
set_ro	md.c	/^static int set_ro(const char *val, struct kernel_p/
set_syndrome_sources	raid5.c	/^static int set_syndrome_sources(struct page **srcs/
setup_btree_index	dm-table.c	/^static int setup_btree_index(unsigned int l, struc/
setup_clone	dm.c	/^static int setup_clone(struct request *clone, stru/
setup_conf	raid1.c	/^static struct r1conf *setup_conf(struct mddev *mdd/
setup_era_array_info	dm-era-target.c	/^static void setup_era_array_info(struct era_metada/
setup_essiv_cpu	dm-crypt.c	/^static struct crypto_cipher *setup_essiv_cpu(struc/
setup_geo	raid10.c	/^static int setup_geo(struct geom *geo, struct mdde/
setup_indexes	dm-table.c	/^static int setup_indexes(struct dm_table *t)$/
setup_infos	dm-era-target.c	/^static void setup_infos(struct era_metadata *md)$/
setup_on_disk_bitset	dm-era-target.c	/^static int setup_on_disk_bitset(struct dm_disk_bit/
setup_writeset_tree_info	dm-era-target.c	/^static void setup_writeset_tree_info(struct era_me/
should_error_unserviceable_bio	dm-thin.c	/^static int should_error_unserviceable_bio(struct p/
should_promote	dm-cache-policy-mq.c	/^static bool should_promote(struct mq_policy *mq, s/
shrink_buffers	raid5.c	/^static void shrink_buffers(struct stripe_head *sh)/
shrink_stripes	raid5.c	/^static void shrink_stripes(struct r5conf *conf)$/
size_show	md.c	/^size_show(struct mddev *mddev, char *page)$/
size_store	md.c	/^size_store(struct mddev *mddev, const char *buf, s/
skip_metadata	dm-snap-persistent.c	/^static void skip_metadata(struct pstore *ps)$/
slot_show	md.c	/^slot_show(struct md_rdev *rdev, char *page)$/
slot_store	md.c	/^slot_store(struct md_rdev *rdev, const char *buf, /
slot_to_desc	dm-dedup-hash.c	/^static struct hash_desc *slot_to_desc(struct hash_/
snapshot_ctr	dm-snap.c	/^static int snapshot_ctr(struct dm_target *ti, unsi/
snapshot_dtr	dm-snap.c	/^static void snapshot_dtr(struct dm_target *ti)$/
snapshot_end_io	dm-snap.c	/^static int snapshot_end_io(struct dm_target *ti, s/
snapshot_iterate_devices	dm-snap.c	/^static int snapshot_iterate_devices(struct dm_targ/
snapshot_map	dm-snap.c	/^static int snapshot_map(struct dm_target *ti, stru/
snapshot_merge_map	dm-snap.c	/^static int snapshot_merge_map(struct dm_target *ti/
snapshot_merge_next_chunks	dm-snap.c	/^static void snapshot_merge_next_chunks(struct dm_s/
snapshot_merge_presuspend	dm-snap.c	/^static void snapshot_merge_presuspend(struct dm_ta/
snapshot_merge_resume	dm-snap.c	/^static void snapshot_merge_resume(struct dm_target/
snapshot_preresume	dm-snap.c	/^static int snapshot_preresume(struct dm_target *ti/
snapshot_resume	dm-snap.c	/^static void snapshot_resume(struct dm_target *ti)$/
snapshot_status	dm-snap.c	/^static void snapshot_status(struct dm_target *ti, /
space_show	bitmap.c	/^space_show(struct mddev *mddev, char *page)$/
space_store	bitmap.c	/^space_store(struct mddev *mddev, const char *buf, /
spare_migration_bandwidth	dm-cache-target.c	/^static bool spare_migration_bandwidth(struct cache/
specific_minor	dm.c	/^static int specific_minor(int minor)$/
speed_max	md.c	/^static inline int speed_max(struct mddev *mddev)$/
speed_min	md.c	/^static inline int speed_min(struct mddev *mddev)$/
split_job	dm-kcopyd.c	/^static void split_job(struct kcopyd_job *master_jo/
st_add_path	dm-service-time.c	/^static int st_add_path(struct path_selector *ps, s/
st_compare_load	dm-service-time.c	/^static int st_compare_load(struct path_info *pi1, /
st_create	dm-service-time.c	/^static int st_create(struct path_selector *ps, uns/
st_destroy	dm-service-time.c	/^static void st_destroy(struct path_selector *ps)$/
st_end_io	dm-service-time.c	/^static int st_end_io(struct path_selector *ps, str/
st_fail_path	dm-service-time.c	/^static void st_fail_path(struct path_selector *ps,/
st_reinstate_path	dm-service-time.c	/^static int st_reinstate_path(struct path_selector /
st_select_path	dm-service-time.c	/^static struct dm_path *st_select_path(struct path_/
st_start_io	dm-service-time.c	/^static int st_start_io(struct path_selector *ps, s/
st_status	dm-service-time.c	/^static int st_status(struct path_selector *ps, str/
start_copy	dm-snap.c	/^static void start_copy(struct dm_snap_pending_exce/
start_full_bio	dm-snap.c	/^static void start_full_bio(struct dm_snap_pending_/
start_io_acct	dm.c	/^static void start_io_acct(struct dm_io *io)$/
start_merge	dm-snap.c	/^static void start_merge(struct dm_snapshot *s)$/
start_queue	dm.c	/^static void start_queue(struct request_queue *q)$/
start_quiescing	dm-cache-target.c	/^static void start_quiescing(struct cache *cache)$/
start_worker	dm-era-target.c	/^static void start_worker(struct era *era)$/
state_show	md.c	/^state_show(struct md_rdev *rdev, char *page)$/
state_store	md.c	/^state_store(struct md_rdev *rdev, const char *buf,/
status	faulty.c	/^static void status(struct seq_file *seq, struct md/
status_resync	md.c	/^static void status_resync(struct seq_file *seq, st/
status_unused	md.c	/^static void status_unused(struct seq_file *seq)$/
stop	faulty.c	/^static int stop(struct mddev *mddev)$/
stop_merge	dm-snap.c	/^static void stop_merge(struct dm_snapshot *s)$/
stop_queue	dm.c	/^static void stop_queue(struct request_queue *q)$/
stop_quiescing	dm-cache-target.c	/^static void stop_quiescing(struct cache *cache)$/
stop_tracking_chunk	dm-snap.c	/^static void stop_tracking_chunk(struct dm_snapshot/
stop_worker	dm-cache-target.c	/^static void stop_worker(struct cache *cache)$/
store_io_and_region_in_bio	dm-io.c	/^static void store_io_and_region_in_bio(struct bio /
strict_blocks_to_sectors	md.c	/^static int strict_blocks_to_sectors(const char *bu/
strict_strtoul_scaled	md.c	/^int strict_strtoul_scaled(const char *cp, unsigned/
strip_zone	raid0.h	/^struct strip_zone {$/
stripe	dm-stripe.c	/^struct stripe {$/
stripe_c	dm-stripe.c	/^struct stripe_c {$/
stripe_cache_active_show	raid5.c	/^stripe_cache_active_show(struct mddev *mddev, char/
stripe_ctr	dm-stripe.c	/^static int stripe_ctr(struct dm_target *ti, unsign/
stripe_dtr	dm-stripe.c	/^static void stripe_dtr(struct dm_target *ti)$/
stripe_end_io	dm-stripe.c	/^static int stripe_end_io(struct dm_target *ti, str/
stripe_hash	raid5.c	/^static inline struct hlist_head *stripe_hash(struc/
stripe_hash_locks_hash	raid5.c	/^static inline int stripe_hash_locks_hash(sector_t /
stripe_head	raid5.h	/^struct stripe_head {$/
stripe_head_state	raid5.h	/^struct stripe_head_state {$/
stripe_io_hints	dm-stripe.c	/^static void stripe_io_hints(struct dm_target *ti,$/
stripe_iterate_devices	dm-stripe.c	/^static int stripe_iterate_devices(struct dm_target/
stripe_map	dm-stripe.c	/^static int stripe_map(struct dm_target *ti, struct/
stripe_map_range	dm-stripe.c	/^static int stripe_map_range(struct stripe_c *sc, s/
stripe_map_range_sector	dm-stripe.c	/^static void stripe_map_range_sector(struct stripe_/
stripe_map_sector	dm-stripe.c	/^static void stripe_map_sector(struct stripe_c *sc,/
stripe_merge	dm-stripe.c	/^static int stripe_merge(struct dm_target *ti, stru/
stripe_operations	raid5.h	/^	struct stripe_operations {$/
stripe_operations_active	raid5.c	/^static int stripe_operations_active(struct stripe_/
stripe_set_idx	raid5.c	/^static void stripe_set_idx(sector_t stripe, struct/
stripe_status	dm-stripe.c	/^static void stripe_status(struct dm_target *ti, st/
submit_flushes	md.c	/^static void submit_flushes(struct work_struct *ws)/
submit_io	dm-bufio.c	/^static void submit_io(struct dm_buffer *b, int rw,/
subtree_dec	dm-thin-metadata.c	/^static void subtree_dec(void *context, const void /
subtree_equal	dm-thin-metadata.c	/^static int subtree_equal(void *context, const void/
subtree_inc	dm-thin-metadata.c	/^static void subtree_inc(void *context, const void /
super_1_allow_new_offset	md.c	/^super_1_allow_new_offset(struct md_rdev *rdev,$/
super_1_load	md.c	/^static int super_1_load(struct md_rdev *rdev, stru/
super_1_rdev_size_change	md.c	/^super_1_rdev_size_change(struct md_rdev *rdev, sec/
super_1_sync	md.c	/^static void super_1_sync(struct mddev *mddev, stru/
super_1_validate	md.c	/^static int super_1_validate(struct mddev *mddev, s/
super_90_allow_new_offset	md.c	/^super_90_allow_new_offset(struct md_rdev *rdev, un/
super_90_load	md.c	/^static int super_90_load(struct md_rdev *rdev, str/
super_90_rdev_size_change	md.c	/^super_90_rdev_size_change(struct md_rdev *rdev, se/
super_90_sync	md.c	/^static void super_90_sync(struct mddev *mddev, str/
super_90_validate	md.c	/^static int super_90_validate(struct mddev *mddev, /
super_init_validation	dm-raid.c	/^static int super_init_validation(struct mddev *mdd/
super_load	dm-raid.c	/^static int super_load(struct md_rdev *rdev, struct/
super_sync	dm-raid.c	/^static void super_sync(struct mddev *mddev, struct/
super_type	md.c	/^struct super_type  {$/
super_validate	dm-raid.c	/^static int super_validate(struct mddev *mddev, str/
super_written	md.c	/^static void super_written(struct bio *bio, int err/
superblock_all_zeroes	dm-dedup-cbt.c	/^static int superblock_all_zeroes(struct dm_block_m/
superblock_disk	dm-era-target.c	/^struct superblock_disk {$/
superblock_flag_bits	dm-cache-metadata.c	/^enum superblock_flag_bits {$/
superblock_lock	dm-cache-metadata.c	/^static int superblock_lock(struct dm_cache_metadat/
superblock_lock_zero	dm-cache-metadata.c	/^static int superblock_lock_zero(struct dm_cache_me/
superblock_read_lock	dm-cache-metadata.c	/^static int superblock_read_lock(struct dm_cache_me/
suspend_hi_show	md.c	/^suspend_hi_show(struct mddev *mddev, char *page)$/
suspend_hi_store	md.c	/^suspend_hi_store(struct mddev *mddev, const char */
suspend_lo_show	md.c	/^suspend_lo_show(struct mddev *mddev, char *page)$/
suspend_lo_store	md.c	/^suspend_lo_store(struct mddev *mddev, const char */
suspend_targets	dm-table.c	/^static void suspend_targets(struct dm_table *t, un/
swap_writeset	dm-era-target.c	/^static void swap_writeset(struct era_metadata *md,/
switch_ctr	dm-switch.c	/^static int switch_ctr(struct dm_target *ti, unsign/
switch_ctx	dm-switch.c	/^struct switch_ctx {$/
switch_dtr	dm-switch.c	/^static void switch_dtr(struct dm_target *ti)$/
switch_get_path_nr	dm-switch.c	/^static unsigned switch_get_path_nr(struct switch_c/
switch_get_position	dm-switch.c	/^static void switch_get_position(struct switch_ctx /
switch_ioctl	dm-switch.c	/^static int switch_ioctl(struct dm_target *ti, unsi/
switch_iterate_devices	dm-switch.c	/^static int switch_iterate_devices(struct dm_target/
switch_map	dm-switch.c	/^static int switch_map(struct dm_target *ti, struct/
switch_message	dm-switch.c	/^static int switch_message(struct dm_target *ti, un/
switch_path	dm-switch.c	/^struct switch_path {$/
switch_pg_num	dm-mpath.c	/^static int switch_pg_num(struct multipath *m, cons/
switch_region_table_read	dm-switch.c	/^static unsigned switch_region_table_read(struct sw/
switch_region_table_write	dm-switch.c	/^static void switch_region_table_write(struct switc/
switch_status	dm-switch.c	/^static void switch_status(struct dm_target *ti, st/
sync	dm-log.c	/^	enum sync {$/
sync_completed_show	md.c	/^sync_completed_show(struct mddev *mddev, char *pag/
sync_force_parallel_show	md.c	/^sync_force_parallel_show(struct mddev *mddev, char/
sync_force_parallel_store	md.c	/^sync_force_parallel_store(struct mddev *mddev, con/
sync_io	dm-io.c	/^struct sync_io {$/
sync_io_complete	dm-io.c	/^static void sync_io_complete(unsigned long error, /
sync_max_show	md.c	/^sync_max_show(struct mddev *mddev, char *page)$/
sync_max_store	md.c	/^sync_max_store(struct mddev *mddev, const char *bu/
sync_metadata	dm-cache-target.c	/^static bool sync_metadata(struct cache *cache)$/
sync_min_show	md.c	/^sync_min_show(struct mddev *mddev, char *page)$/
sync_min_store	md.c	/^sync_min_store(struct mddev *mddev, const char *bu/
sync_page_io	md.c	/^int sync_page_io(struct md_rdev *rdev, sector_t se/
sync_request	raid1.c	/^static sector_t sync_request(struct mddev *mddev, /
sync_request_write	raid1.c	/^static void sync_request_write(struct mddev *mddev/
sync_sbs	md.c	/^static void sync_sbs(struct mddev * mddev, int nos/
sync_speed_show	md.c	/^sync_speed_show(struct mddev *mddev, char *page)$/
sync_super	md.c	/^static void sync_super(struct mddev *mddev, struct/
sysfs_get_dirent_safe	md.h	/^static inline struct kernfs_node *sysfs_get_dirent/
sysfs_link_rdev	md.h	/^static inline int sysfs_link_rdev(struct mddev *md/
sysfs_notify_dirent_safe	md.h	/^static inline void sysfs_notify_dirent_safe(struct/
sysfs_unlink_rdev	md.h	/^static inline void sysfs_unlink_rdev(struct mddev /
table_clear	dm-ioctl.c	/^static int table_clear(struct dm_ioctl *param, siz/
table_deps	dm-ioctl.c	/^static int table_deps(struct dm_ioctl *param, size/
table_device	dm.c	/^struct table_device {$/
table_load	dm-ioctl.c	/^static int table_load(struct dm_ioctl *param, size/
table_status	dm-ioctl.c	/^static int table_status(struct dm_ioctl *param, si/
target_message	dm-ioctl.c	/^static int target_message(struct dm_ioctl *param, /
test_and_clear_page_attr	bitmap.c	/^static inline int test_and_clear_page_attr(struct /
test_page_attr	bitmap.c	/^static inline int test_page_attr(struct bitmap *bi/
thin_bio	dm-thin.c	/^#define thin_bio(pbd) dm_bio_from_per_bio_data((pb/
thin_bio_map	dm-thin.c	/^static int thin_bio_map(struct dm_target *ti, stru/
thin_c	dm-thin.c	/^struct thin_c {$/
thin_ctr	dm-thin.c	/^static int thin_ctr(struct dm_target *ti, unsigned/
thin_defer_bio	dm-thin.c	/^static void thin_defer_bio(struct thin_c *tc, stru/
thin_disk_superblock	dm-thin-metadata.c	/^struct thin_disk_superblock {$/
thin_dtr	dm-thin.c	/^static void thin_dtr(struct dm_target *ti)$/
thin_endio	dm-thin.c	/^static int thin_endio(struct dm_target *ti, struct/
thin_get	dm-thin.c	/^static void thin_get(struct thin_c *tc)$/
thin_hook_bio	dm-thin.c	/^static void thin_hook_bio(struct thin_c *tc, struc/
thin_iterate_devices	dm-thin.c	/^static int thin_iterate_devices(struct dm_target */
thin_map	dm-thin.c	/^static int thin_map(struct dm_target *ti, struct b/
thin_pbd	dm-thin.c	/^#define thin_pbd(node) rb_entry((node), struct dm_/
thin_postsuspend	dm-thin.c	/^static void thin_postsuspend(struct dm_target *ti)/
thin_preresume	dm-thin.c	/^static int thin_preresume(struct dm_target *ti)$/
thin_presuspend	dm-thin.c	/^static void thin_presuspend(struct dm_target *ti)$/
thin_put	dm-thin.c	/^static void thin_put(struct thin_c *tc)$/
thin_status	dm-thin.c	/^static void thin_status(struct dm_target *ti, stat/
thunk	dm-cache-metadata.c	/^struct thunk {$/
ti	dm.c	/^typedef unsigned (*get_num_bios_fn)(struct dm_targ/
timeout_show	bitmap.c	/^timeout_show(struct mddev *mddev, char *page)$/
timeout_store	bitmap.c	/^timeout_store(struct mddev *mddev, const char *buf/
to_addr_conv	raid5.c	/^static addr_conv_t *to_addr_conv(struct stripe_hea/
to_cblock	dm-cache-block-types.h	/^static inline dm_cblock_t to_cblock(uint32_t b)$/
to_mq_policy	dm-cache-policy-mq.c	/^static struct mq_policy *to_mq_policy(struct dm_ca/
to_noflush	dm-thin.c	/^static struct noflush_work *to_noflush(struct work/
to_oblock	dm-cache-block-types.h	/^static inline dm_oblock_t to_oblock(dm_block_t b)$/
to_policy	dm-cache-policy-cleaner.c	/^static struct policy *to_policy(struct dm_cache_po/
to_pool_work	dm-thin.c	/^static struct pool_work *to_pool_work(struct work_/
track_chunk	dm-snap.c	/^static void track_chunk(struct dm_snapshot *s, str/
transient_c	dm-snap-transient.c	/^struct transient_c {$/
transient_commit_exception	dm-snap-transient.c	/^static void transient_commit_exception(struct dm_e/
transient_ctr	dm-snap-transient.c	/^static int transient_ctr(struct dm_exception_store/
transient_dtr	dm-snap-transient.c	/^static void transient_dtr(struct dm_exception_stor/
transient_prepare_exception	dm-snap-transient.c	/^static int transient_prepare_exception(struct dm_e/
transient_read_metadata	dm-snap-transient.c	/^static int transient_read_metadata(struct dm_excep/
transient_status	dm-snap-transient.c	/^static unsigned transient_status(struct dm_excepti/
transient_usage	dm-snap-transient.c	/^static void transient_usage(struct dm_exception_st/
trigger_event	dm-mpath.c	/^static void trigger_event(struct work_struct *work/
ubb_show	md.c	/^static ssize_t ubb_show(struct md_rdev *rdev, char/
ubb_store	md.c	/^static ssize_t ubb_store(struct md_rdev *rdev, con/
unbind_control_target	dm-thin.c	/^static void unbind_control_target(struct pool *poo/
unbind_rdev_from_array	md.c	/^static void unbind_rdev_from_array(struct md_rdev /
unfreeze_array	raid1.c	/^static void unfreeze_array(struct r1conf *conf)$/
unlock_all_device_hash_locks_irq	raid5.c	/^static inline void unlock_all_device_hash_locks_ir/
unlock_device_hash_lock	raid5.c	/^static inline void unlock_device_hash_lock(struct /
unlock_fs	dm.c	/^static void unlock_fs(struct mapped_device *md)$/
unlock_rdev	md.c	/^static void unlock_rdev(struct md_rdev *rdev)$/
unpack_block_time	dm-thin-metadata.c	/^static void unpack_block_time(uint64_t v, dm_block/
unpack_value	dm-cache-metadata.c	/^static void unpack_value(__le64 value_le, dm_obloc/
unregister_md_personality	md.c	/^int unregister_md_personality(struct md_personalit/
unregister_snapshot	dm-snap.c	/^static void unregister_snapshot(struct dm_snapshot/
update_array_info	md.c	/^static int update_array_info(struct mddev *mddev, /
update_flags	dm-cache-metadata.c	/^static void update_flags(struct cache_disk_superbl/
update_head_pos	raid1.c	/^static inline void update_head_pos(int disk, struc/
update_raid_disks	md.c	/^static int update_raid_disks(struct mddev *mddev, /
update_size	md.c	/^static int update_size(struct mddev *mddev, sector/
updated_this_tick	dm-cache-policy-mq.c	/^static bool updated_this_tick(struct mq_policy *mq/
upgrade_mode	dm-table.c	/^static int upgrade_mode(struct dm_dev_internal *dd/
use_dmio	dm-bufio.c	/^static void use_dmio(struct dm_buffer *b, int rw, /
use_inline_bio	dm-bufio.c	/^static void use_inline_bio(struct dm_buffer *b, in/
use_new_offset	raid5.c	/^static int use_new_offset(struct r5conf *conf, str/
userspace_clear_region	dm-log-userspace-base.c	/^static void userspace_clear_region(struct dm_dirty/
userspace_ctr	dm-log-userspace-base.c	/^static int userspace_ctr(struct dm_dirty_log *log,/
userspace_dirty_log_exit	dm-log-userspace-base.c	/^static void __exit userspace_dirty_log_exit(void)$/
userspace_dirty_log_init	dm-log-userspace-base.c	/^static int __init userspace_dirty_log_init(void)$/
userspace_do_request	dm-log-userspace-base.c	/^static int userspace_do_request(struct log_c *lc, /
userspace_dtr	dm-log-userspace-base.c	/^static void userspace_dtr(struct dm_dirty_log *log/
userspace_flush	dm-log-userspace-base.c	/^static int userspace_flush(struct dm_dirty_log *lo/
userspace_get_region_size	dm-log-userspace-base.c	/^static uint32_t userspace_get_region_size(struct d/
userspace_get_resync_work	dm-log-userspace-base.c	/^static int userspace_get_resync_work(struct dm_dir/
userspace_get_sync_count	dm-log-userspace-base.c	/^static region_t userspace_get_sync_count(struct dm/
userspace_in_sync	dm-log-userspace-base.c	/^static int userspace_in_sync(struct dm_dirty_log */
userspace_is_clean	dm-log-userspace-base.c	/^static int userspace_is_clean(struct dm_dirty_log /
userspace_is_remote_recovering	dm-log-userspace-base.c	/^static int userspace_is_remote_recovering(struct d/
userspace_mark_region	dm-log-userspace-base.c	/^static void userspace_mark_region(struct dm_dirty_/
userspace_postsuspend	dm-log-userspace-base.c	/^static int userspace_postsuspend(struct dm_dirty_l/
userspace_presuspend	dm-log-userspace-base.c	/^static int userspace_presuspend(struct dm_dirty_lo/
userspace_resume	dm-log-userspace-base.c	/^static int userspace_resume(struct dm_dirty_log *l/
userspace_set_region_sync	dm-log-userspace-base.c	/^static void userspace_set_region_sync(struct dm_di/
userspace_status	dm-log-userspace-base.c	/^static int userspace_status(struct dm_dirty_log *l/
uuid_equal	md.c	/^static int uuid_equal(mdp_super_t *sb1, mdp_super_/
valid_block_size	dm-era-target.c	/^static bool valid_block_size(dm_block_t block_size/
valid_nr_blocks	dm-era-target.c	/^static bool valid_nr_blocks(dm_block_t n)$/
validate_cblock_range	dm-cache-target.c	/^static int validate_cblock_range(struct cache *cac/
validate_hardware_logical_block_alignment	dm-table.c	/^static int validate_hardware_logical_block_alignme/
validate_next_arg	dm-table.c	/^static int validate_next_arg(struct dm_arg *arg, s/
validate_params	dm-ioctl.c	/^static int validate_params(uint cmd, struct dm_ioc/
validate_raid_redundancy	dm-raid.c	/^static int validate_raid_redundancy(struct raid_se/
validate_region_size	dm-raid.c	/^static int validate_region_size(struct raid_set *r/
verity_ctr	dm-verity.c	/^static int verity_ctr(struct dm_target *ti, unsign/
verity_dtr	dm-verity.c	/^static void verity_dtr(struct dm_target *ti)$/
verity_end_io	dm-verity.c	/^static void verity_end_io(struct bio *bio, int err/
verity_finish_io	dm-verity.c	/^static void verity_finish_io(struct dm_verity_io */
verity_hash_at_level	dm-verity.c	/^static void verity_hash_at_level(struct dm_verity /
verity_io_hints	dm-verity.c	/^static void verity_io_hints(struct dm_target *ti, /
verity_ioctl	dm-verity.c	/^static int verity_ioctl(struct dm_target *ti, unsi/
verity_iterate_devices	dm-verity.c	/^static int verity_iterate_devices(struct dm_target/
verity_map	dm-verity.c	/^static int verity_map(struct dm_target *ti, struct/
verity_map_sector	dm-verity.c	/^static sector_t verity_map_sector(struct dm_verity/
verity_merge	dm-verity.c	/^static int verity_merge(struct dm_target *ti, stru/
verity_position_at_level	dm-verity.c	/^static sector_t verity_position_at_level(struct dm/
verity_prefetch_io	dm-verity.c	/^static void verity_prefetch_io(struct work_struct /
verity_status	dm-verity.c	/^static void verity_status(struct dm_target *ti, st/
verity_submit_prefetch	dm-verity.c	/^static void verity_submit_prefetch(struct dm_verit/
verity_verify_io	dm-verity.c	/^static int verity_verify_io(struct dm_verity_io *i/
verity_verify_level	dm-verity.c	/^static int verity_verify_level(struct dm_verity_io/
verity_work	dm-verity.c	/^static void verity_work(struct work_struct *w)$/
vers_iter	dm-ioctl.c	/^struct vers_iter {$/
vm_dp_init	dm-io.c	/^static void vm_dp_init(struct dpages *dp, void *da/
vm_get_page	dm-io.c	/^static void vm_get_page(struct dpages *dp,$/
vm_next_page	dm-io.c	/^static void vm_next_page(struct dpages *dp)$/
wait_barrier	raid1.c	/^static sector_t wait_barrier(struct r1conf *conf, /
wait_for_migrations	dm-cache-target.c	/^static void wait_for_migrations(struct cache *cach/
wait_for_quiescing_ack	dm-cache-target.c	/^static void wait_for_quiescing_ack(struct cache *c/
wake	dm-kcopyd.c	/^static void wake(struct dm_kcopyd_client *kc)$/
wake_worker	dm-cache-target.c	/^static void wake_worker(struct cache *cache)$/
wakeup_all_recovery_waiters	dm-raid1.c	/^static void wakeup_all_recovery_waiters(void *cont/
wakeup_mirrord	dm-raid1.c	/^static void wakeup_mirrord(void *context)$/
want_replace	raid5.c	/^static int want_replace(struct stripe_head *sh, in/
warn_if_metadata_device_too_big	dm-thin.c	/^static void warn_if_metadata_device_too_big(struct/
wb_cache_entry	dm-cache-policy-cleaner.c	/^struct wb_cache_entry {$/
wb_clear_dirty	dm-cache-policy-cleaner.c	/^static void wb_clear_dirty(struct dm_cache_policy /
wb_create	dm-cache-policy-cleaner.c	/^static struct dm_cache_policy *wb_create(dm_cblock/
wb_destroy	dm-cache-policy-cleaner.c	/^static void wb_destroy(struct dm_cache_policy *pe)/
wb_exit	dm-cache-policy-cleaner.c	/^static void __exit wb_exit(void)$/
wb_force_mapping	dm-cache-policy-cleaner.c	/^static void wb_force_mapping(struct dm_cache_polic/
wb_init	dm-cache-policy-cleaner.c	/^static int __init wb_init(void)$/
wb_load_mapping	dm-cache-policy-cleaner.c	/^static int wb_load_mapping(struct dm_cache_policy /
wb_lookup	dm-cache-policy-cleaner.c	/^static int wb_lookup(struct dm_cache_policy *pe, d/
wb_map	dm-cache-policy-cleaner.c	/^static int wb_map(struct dm_cache_policy *pe, dm_o/
wb_remove_mapping	dm-cache-policy-cleaner.c	/^static void wb_remove_mapping(struct dm_cache_poli/
wb_residency	dm-cache-policy-cleaner.c	/^static dm_cblock_t wb_residency(struct dm_cache_po/
wb_set_dirty	dm-cache-policy-cleaner.c	/^static void wb_set_dirty(struct dm_cache_policy *p/
wb_writeback_work	dm-cache-policy-cleaner.c	/^static int wb_writeback_work(struct dm_cache_polic/
which_dev	linear.c	/^static inline struct dev_info *which_dev(struct md/
work_fn	dm-bufio.c	/^static void work_fn(struct work_struct *w)$/
write_callback	dm-raid1.c	/^static void write_callback(unsigned long error, vo/
write_dirty_bitset	dm-cache-target.c	/^static int write_dirty_bitset(struct cache *cache)/
write_discard_bitset	dm-cache-target.c	/^static int write_discard_bitset(struct cache *cach/
write_endio	dm-bufio.c	/^static void write_endio(struct bio *bio, int error/
write_exception	dm-snap-persistent.c	/^static void write_exception(struct pstore *ps,$/
write_header	dm-snap-persistent.c	/^static int write_header(struct pstore *ps)$/
write_hints	dm-cache-metadata.c	/^static int write_hints(struct dm_cache_metadata *c/
write_initial_superblock	dm-dedup-cbt.c	/^static int write_initial_superblock(struct metadat/
write_page	bitmap.c	/^static void write_page(struct bitmap *bitmap, stru/
write_sb_page	bitmap.c	/^static int write_sb_page(struct bitmap *bitmap, st/
write_superblock	dm-era-target.c	/^static int write_superblock(struct era_metadata *m/
writeback	dm-cache-target.c	/^static void writeback(struct cache *cache, struct /
writeback_mode	dm-cache-target.c	/^static bool writeback_mode(struct cache_features */
writeback_some_dirty_blocks	dm-cache-target.c	/^static void writeback_some_dirty_blocks(struct cac/
writeset	dm-era-target.c	/^struct writeset {$/
writeset_alloc	dm-era-target.c	/^static int writeset_alloc(struct writeset *ws, dm_/
writeset_disk	dm-era-target.c	/^struct writeset_disk {$/
writeset_free	dm-era-target.c	/^static void writeset_free(struct writeset *ws)$/
writeset_init	dm-era-target.c	/^static int writeset_init(struct dm_disk_bitset *in/
writeset_marked	dm-era-target.c	/^static bool writeset_marked(struct writeset *ws, d/
writeset_marked_on_disk	dm-era-target.c	/^static int writeset_marked_on_disk(struct dm_disk_/
writeset_metadata	dm-era-target.c	/^struct writeset_metadata {$/
writeset_test_and_set	dm-era-target.c	/^static int writeset_test_and_set(struct dm_disk_bi/
writethrough_endio	dm-cache-target.c	/^static void writethrough_endio(struct bio *bio, in/
writethrough_mode	dm-cache-target.c	/^static bool writethrough_mode(struct cache_feature/
ws_dec	dm-era-target.c	/^static void ws_dec(void *context, const void *valu/
ws_eq	dm-era-target.c	/^static int ws_eq(void *context, const void *value1/
ws_inc	dm-era-target.c	/^static void ws_inc(void *context, const void *valu/
ws_pack	dm-era-target.c	/^static void ws_pack(const struct writeset_metadata/
ws_unpack	dm-era-target.c	/^static void ws_unpack(const struct writeset_disk */
zero_ctr	dm-zero.c	/^static int zero_ctr(struct dm_target *ti, unsigned/
zero_disk_area	dm-snap-persistent.c	/^static int zero_disk_area(struct pstore *ps, chunk/
zero_map	dm-zero.c	/^static int zero_map(struct dm_target *ti, struct b/
zero_memory_area	dm-snap-persistent.c	/^static void zero_memory_area(struct pstore *ps)$/
